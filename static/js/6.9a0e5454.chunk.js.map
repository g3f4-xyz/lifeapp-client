{"version":3,"sources":["mutations/__generated__/cleanApplicationMutation.graphql.ts","mutations/__generated__/deleteSubscriptionMutation.graphql.ts","mutations/__generated__/saveNotificationsGeneralSettingMutation.graphql.ts","components/modules/settings/notifications/general/__generated__/NotificationsGeneralFragment_data.graphql.ts","mutations/__generated__/saveNotificationsTypesSettingMutation.graphql.ts","components/modules/settings/notifications/types/__generated__/NotificationsTypesFragment_data.graphql.ts","mutations/__generated__/testSubscriptionMutation.graphql.ts","components/modules/settings/subscriptions/fragment/__generated__/SubscriptionFragment_data.graphql.ts","components/modules/settings/subscriptions/pagination/__generated__/SubscriptionsPagination_data.graphql.ts","components/modules/settings/subscriptions/pagination/__generated__/SubscriptionsPaginationQuery.graphql.ts","components/modules/settings/fragment/__generated__/SettingsFragment_data.graphql.ts","components/modules/settings/__generated__/SettingsQuery.graphql.ts","mutations/__generated__/deleteTaskMutation.graphql.ts","mutations/__generated__/updateTaskListStatusFilterSettingMutation.graphql.ts","mutations/__generated__/updateTaskListTaskTypeFilterSettingMutation.graphql.ts","mutations/__generated__/updateTaskListTitleFilterSettingMutation.graphql.ts","components/modules/task-list/fragment/__generated__/useTaskListFragment.graphql.ts","components/modules/task-list/pagination/__generated__/useTaskListPagination.graphql.ts","components/modules/task-list/pagination/__generated__/useTaskListPaginationQuery.graphql.ts","components/modules/task-list/__generated__/useTaskListQuery.graphql.ts","components/modules/task-type-list/fragment/__generated__/useTaskTypeFragment.graphql.ts","components/modules/task-type-list/pagination/__generated__/useTaskTypePagination.graphql.ts","components/modules/task-type-list/__generated__/useTaskTypeListQuery.graphql.ts","mutations/__generated__/updateTaskFieldMutation.graphql.ts","components/modules/task/fields/__generated__/ChoiceFieldFragmentMeta.graphql.ts","components/modules/task/fields/__generated__/ChoiceFieldFragmentValue.graphql.ts","components/modules/task/fields/__generated__/ChoiceFieldFragment_data.graphql.ts","components/modules/task/fields/__generated__/NestedFieldFragmentMeta.graphql.ts","components/modules/task/fields/__generated__/NestedFieldFragmentValue.graphql.ts","components/modules/task/fields/__generated__/NestedFieldFragment_data.graphql.ts","components/modules/task/fields/__generated__/SliderFieldFragmentMeta.graphql.ts","components/modules/task/fields/__generated__/SliderFieldFragmentValue.graphql.ts","components/modules/task/fields/__generated__/SliderFieldFragment_data.graphql.ts","components/modules/task/fields/__generated__/SwitchFieldFragmentMeta.graphql.ts","components/modules/task/fields/__generated__/SwitchFieldFragmentValue.graphql.ts","components/modules/task/fields/__generated__/SwitchFieldFragment_data.graphql.ts","components/modules/task/fields/__generated__/TextFieldFragmentMeta.graphql.ts","components/modules/task/fields/__generated__/TextFieldFragmentValue.graphql.ts","components/modules/task/fields/__generated__/TextFieldFragment_data.graphql.ts","components/modules/task/fragment/__generated__/useTaskFragment.graphql.ts","components/modules/task/__generated__/useTaskQuery.graphql.ts","constans.ts","components/AppContext.ts","components/containers/responsive-grid/useResponsiveGridStyles.ts","components/containers/responsive-grid/ResponsiveGrid.tsx","components/display/app-menu/AppMenu.tsx","mutations/cleanApplicationMutation.ts","mutations/deleteSubscriptionMutation.ts","mutations/saveNotificationsGeneralSettingMutation.ts","components/modules/settings/notifications/general/useNotificationsGeneralFragmentStyles.ts","components/modules/settings/notifications/general/NotificationsGeneralFragment.tsx","mutations/saveNotificationsTypesSettingMutation.ts","components/display/task-type-icon/useTaskTypeIconStyles.ts","components/display/task-type-icon/TaskTypeIcon.tsx","components/modules/settings/notifications/types/useNotificationsTypesFragmentStyles.ts","components/modules/settings/notifications/types/NotificationsTypesFragment.tsx","components/modules/settings/subscriptions/fragment/useSettingsFragmentStyles.ts","mutations/testSubscriptionMutation.ts","components/modules/settings/subscriptions/pagination/useSubscriptionFragmentStyles.ts","components/modules/settings/subscriptions/fragment/SubscriptionFragment.tsx","components/modules/settings/subscriptions/pagination/SubscriptionsPagination.tsx","components/modules/settings/fragment/SettingsFragment.tsx","components/modules/settings/SettingsQuery.tsx","mutations/deleteTaskMutation.ts","mutations/updateTaskListStatusFilterSettingMutation.ts","mutations/updateTaskListTaskTypeFilterSettingMutation.ts","mutations/updateTaskListTitleFilterSettingMutation.ts","components/display/task-list-bar/useTaskListBarStyles.ts","components/display/task-list-bar/TaskListBar.tsx","components/display/status-icon/useStatusIconStyles.ts","components/display/status-icon/StatusIcon.tsx","components/modules/task-list/fragment/useTaskListFragment.tsx","components/modules/task-list/fragment/useTaskListFragmentStyles.ts","components/modules/task-list/fragment/TaskListFragment.tsx","components/modules/task-list/pagination/useTaskListPagination.tsx","components/modules/task-list/pagination/useTaskListPaginationStyles.ts","components/modules/task-list/pagination/TaskListPagination.tsx","components/modules/task-list/useTaskListQuery.tsx","components/modules/task-list/TaskList.tsx","components/modules/task-type-list/fragment/useTaskTypeFragment.tsx","components/modules/task-type-list/fragment/useTaskTypeFragmentStyles.ts","components/modules/task-type-list/fragment/TaskTypeFragment.tsx","components/modules/task-type-list/pagination/useTaskTypeListPaginationStyles.ts","components/modules/task-type-list/pagination/useTaskTypePagination.tsx","components/modules/task-type-list/pagination/TaskTypeListPagination.tsx","components/modules/task-type-list/useTaskTypeListQuery.tsx","components/modules/task-type-list/TaskTypeList.tsx","mutations/updateTaskFieldMutation.ts","components/containers/field-container/useFieldContainerStyles.ts","components/containers/field-container/FieldContainer.tsx","components/display/field/Choice.tsx","components/modules/task/fields/ChoiceFieldFragment.tsx","components/display/field/Switch.tsx","components/display/field/Text.tsx","components/modules/task/fields/NestedFieldFragment.tsx","components/display/field/Slider.tsx","components/modules/task/fields/SliderFieldFragment.tsx","components/modules/task/fields/SwitchFieldFragment.tsx","components/modules/task/fields/TextFieldFragment.tsx","components/modules/task/fragment/useTaskFragment.tsx","components/modules/task/fragment/useTaskFragmentStyles.ts","components/modules/task/fragment/TaskFragment.tsx","components/modules/task/useTaskQuery.tsx","components/modules/task/Task.tsx","components/Application.tsx"],"names":["node","v0","v1","hash","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","v24","v25","v26","v27","v28","MODULES_IDS","FIELD_ID","FIELD_TYPE","DEVICES","STATUSES","TASK_TYPE","EVENT","GOAL","MEETING","ROUTINE","TODO","TASK_STATUSES","IN_PROGRESS","DONE","AppContext","process","slice","createContext","value","openedTasksParams","addTaskParam","_taskParams","removeTaskParam","makeStyles","createStyles","remove","position","right","top","cursor","zoom","ResponsiveReactGridLayout","WidthProvider","Responsive","ResponsiveGridItem","props","children","path","fixed","onRemove","history","useHistory","classes","useResponsiveGridStyles","handleRemove","useCallback","handleZoom","push","IconButton","className","onClick","Clear","ZoomIn","ResponsiveGrid","useState","JSON","parse","stringify","key","ls","localStorage","getItem","e","getFromLS","layouts","setLayouts","resetLayout","onLayoutChange","_currentLayout","allLayouts","setItem","cols","lg","md","sm","xs","xxs","rowHeight","Children","map","index","Paper","style","overflow","data-grid","w","h","x","y","minW","minH","AppMenu","anchorEl","setAnchorEl","gridView","useRouteMatch","isExact","actions","label","action","zIndex","aria-label","aria-haspopup","aria-owns","undefined","event","currentTarget","MoreVert","Menu","open","Boolean","onClose","MenuItem","mutation","ownerId","Promise","onCompleted","onError","variables","input","commitMutation","environment","parentID","subscriptionId","configs","type","connectionKeys","pathToConnection","deletedIDFieldName","general","theme","wrapper","marginLeft","spacing","marginRight","list","width","createFragmentContainer","data","show","vibrate","useNotificationsGeneralFragmentStyles","handleShowChange","_","a","saveNotificationsGeneralSettingMutation","handleVibrateChange","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore","Typography","ExpansionPanelDetails","List","ListItem","ListItemIcon","Slideshow","ListItemText","primary","ListItemSecondaryAction","onChange","checked","Vibration","types","icon","fontSize","ICONS","Settings","LocalOffer","Update","Group","DateRange","TaskTypeIcon","useTaskTypeIconStyles","Icon","classNames","useNotificationsTypesFragmentStyles","getChangeHandler","saveNotificationsTypesSettingMutation","Object","keys","toLowerCase","accountContent","display","justifyContent","subscriptionsWrapper","section","marginBottom","paddingTop","paddingBottom","subscriptionButton","textAlign","margin","padding","subscriptionsPaginationExpansionPanel","paddingRight","notificationsInfoWrapper","paddingLeft","doneButton","bottom","doneButtonIcon","color","green","red","listItem","listItemIcon","DEVICES_ICONS","Computer","Smartphone","DevicesOther","id","userDeviceType","userAgent","useSubscriptionFragmentStyles","statusCode","setStatusCode","handleTest","testSubscriptionMutation","testSubscription","UserDeviceTypeIcon","onDelete","Delete","HelpOutline","CheckCircle","HighlightOff","createPaginationContainer","edges","subscriptions","edge","Loader","direction","getConnectionFromProps","getFragmentVariables","prevVars","totalCount","count","getVariables","_props","query","useSettingsFragmentStyles","cleanApplicationDialogOpen","setCleanApplicationDialogOpen","handleDone","handleCleanApplicationDialogClose","handleCleanApplication","cleanApplicationMutation","cleanApplication","window","location","href","navigationUrl","handleActivateNotifications","navigator","serviceWorker","ready","registration","registerUserSubscription","console","error","onDeleteSubscription","deleteSubscriptionMutation","notifications","align","variant","Grid","container","item","NotificationsGeneralFragment","NotificationsTypesFragment","SubscriptionsPagination","Notification","permission","gutterBottom","Button","DeleteForever","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Done","SettingsQuery","ErrorBoundary","ITEMS_PER_PAGE","render","response","app","settings","status","optimisticUpdater","proxyStore","parentRecord","get","taskListRecord","getLinkedRecord","filtersRecord","setValue","updater","store","mutationRecord","getRootField","getValue","taskType","title","root","grow","flexGrow","statusFilter","minWidth","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","height","pointerEvents","alignItems","inputRoot","inputInput","transition","transitions","create","flexDirection","toolbar","TaskListBar","onFilterByTitle","onFilterByType","onFilterByStatus","filters","useTaskListBarStyles","AppBar","Toolbar","InputBase","placeholder","FormControl","InputLabel","htmlFor","NativeSelect","Input","FormControlLabel","control","Checkbox","includes","flexWrap","content","heading","maxHeight","flex","typography","pxToRem","fontWeight","fontWeightRegular","marginTop","grey","taskTypeIcon","yellow","forwardRef","useStatusIconStyles","CheckBoxOutlineBlank","CheckBox","Error","TaskListFragment","onEdit","useFragment","useTaskListFragment","fields","titleField","find","field","fieldId","noteField","priorityField","statusField","useTaskListFragmentStyles","Tooltip","enabled","PriorityHigh","text","connectionConfig","after","addButton","left","addButtonIcon","moreButton","moreButtonIcon","listLoader","TaskListPagination","loading","setLoading","useTaskListPaginationStyles","pageSize","usePagination","isLoading","hasMore","loadMore","refetchConnection","_loadMore","_refetchConnection","useTaskListPagination","handleAdd","handleEdit","taskId","updateTaskTypeFilter","filter","activeFilter","handleDelete","deleteTaskMutation","handleFilterByTitle","updateTaskListTitleFilterSettingMutation","target","settingsId","handleFilterByStatus","updateTaskListStatusFilterSettingMutation","length","handleFilterByTaskType","updatedTaskTypeFilter","updateTaskListTaskTypeFilterSettingMutation","xl","TaskList","useQuery","taskList","actionsContainer","nameContainer","descContainer","descText","infoButton","fontSize72","TaskTypeFragment","useTaskTypeFragmentStyles","info","setInfo","useTaskTypeFragment","description","typeId","handleInfo","InfoOutlined","AddCircle","TaskTypeList","useTaskTypeListPaginationStyles","taskTypes","sort","nodeA","nodeB","order","TaskTypeListPagination","taskTypeList","valueKey","fieldRecord","valueRecord","updatedFieldValue","setLinkedRecord","FieldContainer","useFieldContainerStyles","Choice","helperText","options","Select","option","FormHelperText","meta","handleChange","changedId","updateTaskFieldMutation","Switch","disabled","formatInputValue","inputType","formatToTimeZone","timeZone","Intl","DateTimeFormat","resolvedOptions","parseInputValue","convertToTimeZone","toISOString","Text","max","maxLength","min","minLength","required","parsedValue","InputLabelProps","shrink","inputProps","fullWidth","OwnField","ownMeta","ownValue","onOwnValueChange","fieldType","NestedField","activeChildrenMeta","childrenMeta","parentValue","updatedValue","immutabilityHelper","$set","childrenValue","Slider","step","_event","progress","row","rowField","down","FIELD_COMPONENTS_MAP","CHOICE","ChoiceFieldFragment","SWITCH","SwitchFieldFragment","SLIDER","SliderFieldFragment","TEXT","TextFieldFragment","NESTED","NestedFieldFragment","TaskFragment","useTaskFragmentStyles","useTaskFragment","orders","Set","rowFields","Component","Task","ownProps","params","useParams","useContext","firstParam","split","saveParams","useEffect","task","Application","setOpenedTasksParams","match","url","taskParams","findIndex","prev","removeGridItem","firstPart","secondPart","thirdPart","filtered","Provider","component","to"],"mappings":"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","file":"static/js/6.9a0e5454.chunk.js","sourcesContent":["/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type cleanApplicationMutationInput = {\n    readonly ownerId?: string | null;\n    readonly clientMutationId?: string | null;\n};\nexport type cleanApplicationMutationVariables = {\n    readonly input: cleanApplicationMutationInput;\n};\nexport type cleanApplicationMutationResponse = {\n    readonly cleanApplication: {\n        readonly clientMutationId: string | null;\n        readonly navigationUrl: string;\n    } | null;\n};\nexport type cleanApplicationMutation = {\n    readonly response: cleanApplicationMutationResponse;\n    readonly variables: cleanApplicationMutationVariables;\n};\n\n\n\n/*\nmutation cleanApplicationMutation(\n  $input: cleanApplicationMutationInput!\n) {\n  cleanApplication(input: $input) {\n    clientMutationId\n    navigationUrl\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"input\",\n            \"type\": \"cleanApplicationMutationInput!\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = [\n        ({\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"cleanApplication\",\n            \"storageKey\": null,\n            \"args\": [\n                {\n                    \"kind\": \"Variable\",\n                    \"name\": \"input\",\n                    \"variableName\": \"input\"\n                }\n            ],\n            \"concreteType\": \"cleanApplicationMutationPayload\",\n            \"plural\": false,\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"clientMutationId\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"navigationUrl\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        } as any)\n    ];\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"cleanApplicationMutation\",\n            \"type\": \"MutationType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": (v1 /*: any*/)\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"cleanApplicationMutation\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": (v1 /*: any*/)\n        },\n        \"params\": {\n            \"operationKind\": \"mutation\",\n            \"name\": \"cleanApplicationMutation\",\n            \"id\": null,\n            \"text\": \"mutation cleanApplicationMutation(\\n  $input: cleanApplicationMutationInput!\\n) {\\n  cleanApplication(input: $input) {\\n    clientMutationId\\n    navigationUrl\\n  }\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = 'e33a08718a266e818be1fb489e644a48';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type deleteSubscriptionMutationInput = {\n    readonly subscriptionId: string;\n    readonly clientMutationId?: string | null;\n};\nexport type deleteSubscriptionMutationVariables = {\n    readonly input: deleteSubscriptionMutationInput;\n};\nexport type deleteSubscriptionMutationResponse = {\n    readonly deleteSubscription: {\n        readonly clientMutationId: string | null;\n        readonly subscriptionId: string;\n    } | null;\n};\nexport type deleteSubscriptionMutation = {\n    readonly response: deleteSubscriptionMutationResponse;\n    readonly variables: deleteSubscriptionMutationVariables;\n};\n\n\n\n/*\nmutation deleteSubscriptionMutation(\n  $input: deleteSubscriptionMutationInput!\n) {\n  deleteSubscription(input: $input) {\n    clientMutationId\n    subscriptionId\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"input\",\n            \"type\": \"deleteSubscriptionMutationInput!\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = [\n        ({\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"deleteSubscription\",\n            \"storageKey\": null,\n            \"args\": [\n                {\n                    \"kind\": \"Variable\",\n                    \"name\": \"input\",\n                    \"variableName\": \"input\"\n                }\n            ],\n            \"concreteType\": \"deleteSubscriptionMutationPayload\",\n            \"plural\": false,\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"clientMutationId\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"subscriptionId\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        } as any)\n    ];\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"deleteSubscriptionMutation\",\n            \"type\": \"MutationType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": (v1 /*: any*/)\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"deleteSubscriptionMutation\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": (v1 /*: any*/)\n        },\n        \"params\": {\n            \"operationKind\": \"mutation\",\n            \"name\": \"deleteSubscriptionMutation\",\n            \"id\": null,\n            \"text\": \"mutation deleteSubscriptionMutation(\\n  $input: deleteSubscriptionMutationInput!\\n) {\\n  deleteSubscription(input: $input) {\\n    clientMutationId\\n    subscriptionId\\n  }\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = 'ca443516a1f27f5b4f31e01f78920675';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\ntype NotificationsGeneralFragment_data$ref = any;\nexport type saveNotificationsGeneralSettingMutationInput = {\n    readonly general?: SettingsNotificationsGeneralInputType | null;\n    readonly clientMutationId?: string | null;\n};\nexport type SettingsNotificationsGeneralInputType = {\n    readonly show: boolean;\n    readonly vibrate: boolean;\n};\nexport type saveNotificationsGeneralSettingMutationVariables = {\n    readonly input: saveNotificationsGeneralSettingMutationInput;\n};\nexport type saveNotificationsGeneralSettingMutationResponse = {\n    readonly saveNotificationsGeneralSetting: {\n        readonly clientMutationId: string | null;\n        readonly savedGeneral: {\n            readonly \" $fragmentRefs\": NotificationsGeneralFragment_data$ref;\n        };\n    } | null;\n};\nexport type saveNotificationsGeneralSettingMutation = {\n    readonly response: saveNotificationsGeneralSettingMutationResponse;\n    readonly variables: saveNotificationsGeneralSettingMutationVariables;\n};\n\n\n\n/*\nmutation saveNotificationsGeneralSettingMutation(\n  $input: saveNotificationsGeneralSettingMutationInput!\n) {\n  saveNotificationsGeneralSetting(input: $input) {\n    clientMutationId\n    savedGeneral {\n      ...NotificationsGeneralFragment_data\n    }\n  }\n}\n\nfragment NotificationsGeneralFragment_data on NotificationsGeneralSettingType {\n  show\n  vibrate\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"input\",\n            \"type\": \"saveNotificationsGeneralSettingMutationInput!\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = [\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"input\",\n            \"variableName\": \"input\"\n        } as any)\n    ], v2 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"clientMutationId\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any);\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"saveNotificationsGeneralSettingMutation\",\n            \"type\": \"MutationType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"saveNotificationsGeneralSetting\",\n                    \"storageKey\": null,\n                    \"args\": (v1 /*: any*/),\n                    \"concreteType\": \"saveNotificationsGeneralSettingMutationPayload\",\n                    \"plural\": false,\n                    \"selections\": [\n                        (v2 /*: any*/),\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"savedGeneral\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"NotificationsGeneralSettingType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                {\n                                    \"kind\": \"FragmentSpread\",\n                                    \"name\": \"NotificationsGeneralFragment_data\",\n                                    \"args\": null\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"saveNotificationsGeneralSettingMutation\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"saveNotificationsGeneralSetting\",\n                    \"storageKey\": null,\n                    \"args\": (v1 /*: any*/),\n                    \"concreteType\": \"saveNotificationsGeneralSettingMutationPayload\",\n                    \"plural\": false,\n                    \"selections\": [\n                        (v2 /*: any*/),\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"savedGeneral\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"NotificationsGeneralSettingType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                {\n                                    \"kind\": \"ScalarField\",\n                                    \"alias\": null,\n                                    \"name\": \"show\",\n                                    \"args\": null,\n                                    \"storageKey\": null\n                                },\n                                {\n                                    \"kind\": \"ScalarField\",\n                                    \"alias\": null,\n                                    \"name\": \"vibrate\",\n                                    \"args\": null,\n                                    \"storageKey\": null\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        \"params\": {\n            \"operationKind\": \"mutation\",\n            \"name\": \"saveNotificationsGeneralSettingMutation\",\n            \"id\": null,\n            \"text\": \"mutation saveNotificationsGeneralSettingMutation(\\n  $input: saveNotificationsGeneralSettingMutationInput!\\n) {\\n  saveNotificationsGeneralSetting(input: $input) {\\n    clientMutationId\\n    savedGeneral {\\n      ...NotificationsGeneralFragment_data\\n    }\\n  }\\n}\\n\\nfragment NotificationsGeneralFragment_data on NotificationsGeneralSettingType {\\n  show\\n  vibrate\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = '81a0ff4ce3494b486b7ea34d389f2a10';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type NotificationsGeneralFragment_data$ref = any;\nexport type NotificationsGeneralFragment_data = {\n    readonly show: boolean;\n    readonly vibrate: boolean;\n    readonly \" $refType\": NotificationsGeneralFragment_data$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"NotificationsGeneralFragment_data\",\n    \"type\": \"NotificationsGeneralSettingType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"show\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"vibrate\",\n            \"args\": null,\n            \"storageKey\": null\n        }\n    ]\n} as any);\n(node as any).hash = '0fa7a2f02479f370881769eb72be5e84';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\ntype NotificationsTypesFragment_data$ref = any;\nexport type saveNotificationsTypesSettingMutationInput = {\n    readonly types?: SettingsNotificationsTypesInputType | null;\n    readonly clientMutationId?: string | null;\n};\nexport type SettingsNotificationsTypesInputType = {\n    readonly goals: boolean;\n    readonly todos: boolean;\n    readonly meetings: boolean;\n    readonly events: boolean;\n    readonly routines: boolean;\n};\nexport type saveNotificationsTypesSettingMutationVariables = {\n    readonly input: saveNotificationsTypesSettingMutationInput;\n};\nexport type saveNotificationsTypesSettingMutationResponse = {\n    readonly saveNotificationsTypesSetting: {\n        readonly savedTypes: {\n            readonly \" $fragmentRefs\": NotificationsTypesFragment_data$ref;\n        };\n    } | null;\n};\nexport type saveNotificationsTypesSettingMutation = {\n    readonly response: saveNotificationsTypesSettingMutationResponse;\n    readonly variables: saveNotificationsTypesSettingMutationVariables;\n};\n\n\n\n/*\nmutation saveNotificationsTypesSettingMutation(\n  $input: saveNotificationsTypesSettingMutationInput!\n) {\n  saveNotificationsTypesSetting(input: $input) {\n    savedTypes {\n      ...NotificationsTypesFragment_data\n    }\n  }\n}\n\nfragment NotificationsTypesFragment_data on NotificationsTypesSettingType {\n  events\n  goals\n  meetings\n  routines\n  todos\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"input\",\n            \"type\": \"saveNotificationsTypesSettingMutationInput!\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = [\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"input\",\n            \"variableName\": \"input\"\n        } as any)\n    ];\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"saveNotificationsTypesSettingMutation\",\n            \"type\": \"MutationType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"saveNotificationsTypesSetting\",\n                    \"storageKey\": null,\n                    \"args\": (v1 /*: any*/),\n                    \"concreteType\": \"saveNotificationsTypesSettingMutationPayload\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"savedTypes\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"NotificationsTypesSettingType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                {\n                                    \"kind\": \"FragmentSpread\",\n                                    \"name\": \"NotificationsTypesFragment_data\",\n                                    \"args\": null\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"saveNotificationsTypesSettingMutation\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"saveNotificationsTypesSetting\",\n                    \"storageKey\": null,\n                    \"args\": (v1 /*: any*/),\n                    \"concreteType\": \"saveNotificationsTypesSettingMutationPayload\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"savedTypes\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"NotificationsTypesSettingType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                {\n                                    \"kind\": \"ScalarField\",\n                                    \"alias\": null,\n                                    \"name\": \"events\",\n                                    \"args\": null,\n                                    \"storageKey\": null\n                                },\n                                {\n                                    \"kind\": \"ScalarField\",\n                                    \"alias\": null,\n                                    \"name\": \"goals\",\n                                    \"args\": null,\n                                    \"storageKey\": null\n                                },\n                                {\n                                    \"kind\": \"ScalarField\",\n                                    \"alias\": null,\n                                    \"name\": \"meetings\",\n                                    \"args\": null,\n                                    \"storageKey\": null\n                                },\n                                {\n                                    \"kind\": \"ScalarField\",\n                                    \"alias\": null,\n                                    \"name\": \"routines\",\n                                    \"args\": null,\n                                    \"storageKey\": null\n                                },\n                                {\n                                    \"kind\": \"ScalarField\",\n                                    \"alias\": null,\n                                    \"name\": \"todos\",\n                                    \"args\": null,\n                                    \"storageKey\": null\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        \"params\": {\n            \"operationKind\": \"mutation\",\n            \"name\": \"saveNotificationsTypesSettingMutation\",\n            \"id\": null,\n            \"text\": \"mutation saveNotificationsTypesSettingMutation(\\n  $input: saveNotificationsTypesSettingMutationInput!\\n) {\\n  saveNotificationsTypesSetting(input: $input) {\\n    savedTypes {\\n      ...NotificationsTypesFragment_data\\n    }\\n  }\\n}\\n\\nfragment NotificationsTypesFragment_data on NotificationsTypesSettingType {\\n  events\\n  goals\\n  meetings\\n  routines\\n  todos\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = '49e02275185f8767ab093e40e115879a';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type NotificationsTypesFragment_data$ref = any;\nexport type NotificationsTypesFragment_data = {\n    readonly events: boolean;\n    readonly goals: boolean;\n    readonly meetings: boolean;\n    readonly routines: boolean;\n    readonly todos: boolean;\n    readonly \" $refType\": NotificationsTypesFragment_data$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"NotificationsTypesFragment_data\",\n    \"type\": \"NotificationsTypesSettingType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"events\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"goals\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"meetings\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"routines\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"todos\",\n            \"args\": null,\n            \"storageKey\": null\n        }\n    ]\n} as any);\n(node as any).hash = '4a370dee4f1b611a3bd8ba13a2f52987';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type testSubscriptionMutationInput = {\n    readonly subscriptionId?: string | null;\n    readonly clientMutationId?: string | null;\n};\nexport type testSubscriptionMutationVariables = {\n    readonly input: testSubscriptionMutationInput;\n};\nexport type testSubscriptionMutationResponse = {\n    readonly testSubscription: {\n        readonly clientMutationId: string | null;\n        readonly statusCode: string;\n    } | null;\n};\nexport type testSubscriptionMutation = {\n    readonly response: testSubscriptionMutationResponse;\n    readonly variables: testSubscriptionMutationVariables;\n};\n\n\n\n/*\nmutation testSubscriptionMutation(\n  $input: testSubscriptionMutationInput!\n) {\n  testSubscription(input: $input) {\n    clientMutationId\n    statusCode\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"input\",\n            \"type\": \"testSubscriptionMutationInput!\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = [\n        ({\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"testSubscription\",\n            \"storageKey\": null,\n            \"args\": [\n                {\n                    \"kind\": \"Variable\",\n                    \"name\": \"input\",\n                    \"variableName\": \"input\"\n                }\n            ],\n            \"concreteType\": \"testSubscriptionMutationPayload\",\n            \"plural\": false,\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"clientMutationId\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"statusCode\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        } as any)\n    ];\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"testSubscriptionMutation\",\n            \"type\": \"MutationType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": (v1 /*: any*/)\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"testSubscriptionMutation\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": (v1 /*: any*/)\n        },\n        \"params\": {\n            \"operationKind\": \"mutation\",\n            \"name\": \"testSubscriptionMutation\",\n            \"id\": null,\n            \"text\": \"mutation testSubscriptionMutation(\\n  $input: testSubscriptionMutationInput!\\n) {\\n  testSubscription(input: $input) {\\n    clientMutationId\\n    statusCode\\n  }\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = '2441060bcf9cb7295eebd9ec4edc0e9f';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type SubscriptionFragment_data$ref = any;\nexport type SubscriptionFragment_data = {\n    readonly id: string;\n    readonly userAgent: string;\n    readonly userDeviceType: string;\n    readonly \" $refType\": SubscriptionFragment_data$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"SubscriptionFragment_data\",\n    \"type\": \"SubscriptionType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"id\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"userAgent\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"userDeviceType\",\n            \"args\": null,\n            \"storageKey\": null\n        }\n    ]\n} as any);\n(node as any).hash = 'c072dc47b197d39aeeb70300eb7869c0';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\ntype SubscriptionFragment_data$ref = any;\nexport type SubscriptionsPagination_data$ref = any;\nexport type SubscriptionsPagination_data = {\n    readonly subscriptions: {\n        readonly edges: ReadonlyArray<{\n            readonly node: {\n                readonly id: string;\n                readonly \" $fragmentRefs\": SubscriptionFragment_data$ref;\n            } | null;\n        } | null> | null;\n    };\n    readonly \" $refType\": SubscriptionsPagination_data$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"SubscriptionsPagination_data\",\n    \"type\": \"NotificationsType\",\n    \"metadata\": {\n        \"connection\": [\n            {\n                \"count\": \"count\",\n                \"cursor\": \"after\",\n                \"direction\": \"forward\",\n                \"path\": [\n                    \"subscriptions\"\n                ]\n            }\n        ]\n    },\n    \"argumentDefinitions\": [\n        {\n            \"kind\": \"RootArgument\",\n            \"name\": \"count\",\n            \"type\": \"Int\"\n        },\n        {\n            \"kind\": \"RootArgument\",\n            \"name\": \"after\",\n            \"type\": \"String\"\n        }\n    ],\n    \"selections\": [\n        {\n            \"kind\": \"LinkedField\",\n            \"alias\": \"subscriptions\",\n            \"name\": \"__Notifications_subscriptions_connection\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"SubscriptionTypeConnection\",\n            \"plural\": false,\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"edges\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"SubscriptionTypeEdge\",\n                    \"plural\": true,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"node\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"SubscriptionType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                {\n                                    \"kind\": \"ScalarField\",\n                                    \"alias\": null,\n                                    \"name\": \"id\",\n                                    \"args\": null,\n                                    \"storageKey\": null\n                                },\n                                {\n                                    \"kind\": \"ScalarField\",\n                                    \"alias\": null,\n                                    \"name\": \"__typename\",\n                                    \"args\": null,\n                                    \"storageKey\": null\n                                },\n                                {\n                                    \"kind\": \"FragmentSpread\",\n                                    \"name\": \"SubscriptionFragment_data\",\n                                    \"args\": null\n                                }\n                            ]\n                        },\n                        {\n                            \"kind\": \"ScalarField\",\n                            \"alias\": null,\n                            \"name\": \"cursor\",\n                            \"args\": null,\n                            \"storageKey\": null\n                        }\n                    ]\n                },\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"pageInfo\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"PageInfo\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"ScalarField\",\n                            \"alias\": null,\n                            \"name\": \"endCursor\",\n                            \"args\": null,\n                            \"storageKey\": null\n                        },\n                        {\n                            \"kind\": \"ScalarField\",\n                            \"alias\": null,\n                            \"name\": \"hasNextPage\",\n                            \"args\": null,\n                            \"storageKey\": null\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n} as any);\n(node as any).hash = 'fa08caa20c5033ddeacccbe3b3e81201';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\ntype SubscriptionsPagination_data$ref = any;\nexport type SubscriptionsPaginationQueryVariables = {\n    readonly count: number;\n    readonly after?: string | null;\n};\nexport type SubscriptionsPaginationQueryResponse = {\n    readonly app: {\n        readonly settings: {\n            readonly notifications: {\n                readonly \" $fragmentRefs\": SubscriptionsPagination_data$ref;\n            };\n        };\n    };\n};\nexport type SubscriptionsPaginationQuery = {\n    readonly response: SubscriptionsPaginationQueryResponse;\n    readonly variables: SubscriptionsPaginationQueryVariables;\n};\n\n\n\n/*\nquery SubscriptionsPaginationQuery(\n  $count: Int!\n  $after: String\n) {\n  app {\n    settings {\n      notifications {\n        ...SubscriptionsPagination_data\n        id\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment SubscriptionsPagination_data on NotificationsType {\n  subscriptions(first: $count, after: $after) {\n    edges {\n      node {\n        id\n        ...SubscriptionFragment_data\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment SubscriptionFragment_data on SubscriptionType {\n  id\n  userAgent\n  userDeviceType\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"count\",\n            \"type\": \"Int!\",\n            \"defaultValue\": null\n        } as any),\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"after\",\n            \"type\": \"String\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = [\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"after\",\n            \"variableName\": \"after\"\n        } as any),\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"first\",\n            \"variableName\": \"count\"\n        } as any)\n    ], v2 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any);\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"SubscriptionsPaginationQuery\",\n            \"type\": \"QueryType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"app\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"AppType\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"settings\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"SettingsType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                {\n                                    \"kind\": \"LinkedField\",\n                                    \"alias\": null,\n                                    \"name\": \"notifications\",\n                                    \"storageKey\": null,\n                                    \"args\": null,\n                                    \"concreteType\": \"NotificationsType\",\n                                    \"plural\": false,\n                                    \"selections\": [\n                                        {\n                                            \"kind\": \"FragmentSpread\",\n                                            \"name\": \"SubscriptionsPagination_data\",\n                                            \"args\": null\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"SubscriptionsPaginationQuery\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"app\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"AppType\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"settings\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"SettingsType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                {\n                                    \"kind\": \"LinkedField\",\n                                    \"alias\": null,\n                                    \"name\": \"notifications\",\n                                    \"storageKey\": null,\n                                    \"args\": null,\n                                    \"concreteType\": \"NotificationsType\",\n                                    \"plural\": false,\n                                    \"selections\": [\n                                        {\n                                            \"kind\": \"LinkedField\",\n                                            \"alias\": null,\n                                            \"name\": \"subscriptions\",\n                                            \"storageKey\": null,\n                                            \"args\": (v1 /*: any*/),\n                                            \"concreteType\": \"SubscriptionTypeConnection\",\n                                            \"plural\": false,\n                                            \"selections\": [\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"edges\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"SubscriptionTypeEdge\",\n                                                    \"plural\": true,\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"LinkedField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"node\",\n                                                            \"storageKey\": null,\n                                                            \"args\": null,\n                                                            \"concreteType\": \"SubscriptionType\",\n                                                            \"plural\": false,\n                                                            \"selections\": [\n                                                                (v2 /*: any*/),\n                                                                {\n                                                                    \"kind\": \"ScalarField\",\n                                                                    \"alias\": null,\n                                                                    \"name\": \"userAgent\",\n                                                                    \"args\": null,\n                                                                    \"storageKey\": null\n                                                                },\n                                                                {\n                                                                    \"kind\": \"ScalarField\",\n                                                                    \"alias\": null,\n                                                                    \"name\": \"userDeviceType\",\n                                                                    \"args\": null,\n                                                                    \"storageKey\": null\n                                                                },\n                                                                {\n                                                                    \"kind\": \"ScalarField\",\n                                                                    \"alias\": null,\n                                                                    \"name\": \"__typename\",\n                                                                    \"args\": null,\n                                                                    \"storageKey\": null\n                                                                }\n                                                            ]\n                                                        },\n                                                        {\n                                                            \"kind\": \"ScalarField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"cursor\",\n                                                            \"args\": null,\n                                                            \"storageKey\": null\n                                                        }\n                                                    ]\n                                                },\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"pageInfo\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"PageInfo\",\n                                                    \"plural\": false,\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"ScalarField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"endCursor\",\n                                                            \"args\": null,\n                                                            \"storageKey\": null\n                                                        },\n                                                        {\n                                                            \"kind\": \"ScalarField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"hasNextPage\",\n                                                            \"args\": null,\n                                                            \"storageKey\": null\n                                                        }\n                                                    ]\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"kind\": \"LinkedHandle\",\n                                            \"alias\": null,\n                                            \"name\": \"subscriptions\",\n                                            \"args\": (v1 /*: any*/),\n                                            \"handle\": \"connection\",\n                                            \"key\": \"Notifications_subscriptions\",\n                                            \"filters\": null\n                                        },\n                                        (v2 /*: any*/)\n                                    ]\n                                },\n                                (v2 /*: any*/)\n                            ]\n                        },\n                        (v2 /*: any*/)\n                    ]\n                }\n            ]\n        },\n        \"params\": {\n            \"operationKind\": \"query\",\n            \"name\": \"SubscriptionsPaginationQuery\",\n            \"id\": null,\n            \"text\": \"query SubscriptionsPaginationQuery(\\n  $count: Int!\\n  $after: String\\n) {\\n  app {\\n    settings {\\n      notifications {\\n        ...SubscriptionsPagination_data\\n        id\\n      }\\n      id\\n    }\\n    id\\n  }\\n}\\n\\nfragment SubscriptionsPagination_data on NotificationsType {\\n  subscriptions(first: $count, after: $after) {\\n    edges {\\n      node {\\n        id\\n        ...SubscriptionFragment_data\\n        __typename\\n      }\\n      cursor\\n    }\\n    pageInfo {\\n      endCursor\\n      hasNextPage\\n    }\\n  }\\n}\\n\\nfragment SubscriptionFragment_data on SubscriptionType {\\n  id\\n  userAgent\\n  userDeviceType\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = 'c621ee82e7cb8431db5296306a43e62c';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\ntype NotificationsGeneralFragment_data$ref = any;\ntype NotificationsTypesFragment_data$ref = any;\ntype SubscriptionsPagination_data$ref = any;\nexport type SettingsFragment_data$ref = any;\nexport type SettingsFragment_data = {\n    readonly id: string;\n    readonly ownerId: string;\n    readonly notifications: {\n        readonly id: string;\n        readonly general: {\n            readonly \" $fragmentRefs\": NotificationsGeneralFragment_data$ref;\n        };\n        readonly types: {\n            readonly \" $fragmentRefs\": NotificationsTypesFragment_data$ref;\n        };\n        readonly \" $fragmentRefs\": SubscriptionsPagination_data$ref;\n    };\n    readonly \" $refType\": SettingsFragment_data$ref;\n};\n\n\n\nconst node: ReaderFragment = (function () {\n    var v0 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any);\n    return {\n        \"kind\": \"Fragment\",\n        \"name\": \"SettingsFragment_data\",\n        \"type\": \"SettingsType\",\n        \"metadata\": null,\n        \"argumentDefinitions\": [],\n        \"selections\": [\n            (v0 /*: any*/),\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"ownerId\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"notifications\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"NotificationsType\",\n                \"plural\": false,\n                \"selections\": [\n                    (v0 /*: any*/),\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"general\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NotificationsGeneralSettingType\",\n                        \"plural\": false,\n                        \"selections\": [\n                            {\n                                \"kind\": \"FragmentSpread\",\n                                \"name\": \"NotificationsGeneralFragment_data\",\n                                \"args\": null\n                            }\n                        ]\n                    },\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"types\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NotificationsTypesSettingType\",\n                        \"plural\": false,\n                        \"selections\": [\n                            {\n                                \"kind\": \"FragmentSpread\",\n                                \"name\": \"NotificationsTypesFragment_data\",\n                                \"args\": null\n                            }\n                        ]\n                    },\n                    {\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"SubscriptionsPagination_data\",\n                        \"args\": null\n                    }\n                ]\n            }\n        ]\n    } as any;\n})();\n(node as any).hash = '8396c260cc1f87aac2230ec64782dae8';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\ntype SettingsFragment_data$ref = any;\nexport type SettingsQueryVariables = {\n    readonly count: number;\n    readonly after?: string | null;\n};\nexport type SettingsQueryResponse = {\n    readonly app: {\n        readonly settings: {\n            readonly id: string;\n            readonly \" $fragmentRefs\": SettingsFragment_data$ref;\n        };\n    };\n};\nexport type SettingsQuery = {\n    readonly response: SettingsQueryResponse;\n    readonly variables: SettingsQueryVariables;\n};\n\n\n\n/*\nquery SettingsQuery(\n  $count: Int!\n  $after: String\n) {\n  app {\n    settings {\n      id\n      ...SettingsFragment_data\n    }\n    id\n  }\n}\n\nfragment SettingsFragment_data on SettingsType {\n  id\n  ownerId\n  notifications {\n    id\n    general {\n      ...NotificationsGeneralFragment_data\n    }\n    types {\n      ...NotificationsTypesFragment_data\n    }\n    ...SubscriptionsPagination_data\n  }\n}\n\nfragment NotificationsGeneralFragment_data on NotificationsGeneralSettingType {\n  show\n  vibrate\n}\n\nfragment NotificationsTypesFragment_data on NotificationsTypesSettingType {\n  events\n  goals\n  meetings\n  routines\n  todos\n}\n\nfragment SubscriptionsPagination_data on NotificationsType {\n  subscriptions(first: $count, after: $after) {\n    edges {\n      node {\n        id\n        ...SubscriptionFragment_data\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment SubscriptionFragment_data on SubscriptionType {\n  id\n  userAgent\n  userDeviceType\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"count\",\n            \"type\": \"Int!\",\n            \"defaultValue\": null\n        } as any),\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"after\",\n            \"type\": \"String\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v2 = [\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"after\",\n            \"variableName\": \"after\"\n        } as any),\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"first\",\n            \"variableName\": \"count\"\n        } as any)\n    ];\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"SettingsQuery\",\n            \"type\": \"QueryType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"app\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"AppType\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"settings\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"SettingsType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                (v1 /*: any*/),\n                                {\n                                    \"kind\": \"FragmentSpread\",\n                                    \"name\": \"SettingsFragment_data\",\n                                    \"args\": null\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"SettingsQuery\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"app\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"AppType\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"settings\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"SettingsType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                (v1 /*: any*/),\n                                {\n                                    \"kind\": \"ScalarField\",\n                                    \"alias\": null,\n                                    \"name\": \"ownerId\",\n                                    \"args\": null,\n                                    \"storageKey\": null\n                                },\n                                {\n                                    \"kind\": \"LinkedField\",\n                                    \"alias\": null,\n                                    \"name\": \"notifications\",\n                                    \"storageKey\": null,\n                                    \"args\": null,\n                                    \"concreteType\": \"NotificationsType\",\n                                    \"plural\": false,\n                                    \"selections\": [\n                                        (v1 /*: any*/),\n                                        {\n                                            \"kind\": \"LinkedField\",\n                                            \"alias\": null,\n                                            \"name\": \"general\",\n                                            \"storageKey\": null,\n                                            \"args\": null,\n                                            \"concreteType\": \"NotificationsGeneralSettingType\",\n                                            \"plural\": false,\n                                            \"selections\": [\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"show\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                },\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"vibrate\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"kind\": \"LinkedField\",\n                                            \"alias\": null,\n                                            \"name\": \"types\",\n                                            \"storageKey\": null,\n                                            \"args\": null,\n                                            \"concreteType\": \"NotificationsTypesSettingType\",\n                                            \"plural\": false,\n                                            \"selections\": [\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"events\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                },\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"goals\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                },\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"meetings\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                },\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"routines\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                },\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"todos\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"kind\": \"LinkedField\",\n                                            \"alias\": null,\n                                            \"name\": \"subscriptions\",\n                                            \"storageKey\": null,\n                                            \"args\": (v2 /*: any*/),\n                                            \"concreteType\": \"SubscriptionTypeConnection\",\n                                            \"plural\": false,\n                                            \"selections\": [\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"edges\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"SubscriptionTypeEdge\",\n                                                    \"plural\": true,\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"LinkedField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"node\",\n                                                            \"storageKey\": null,\n                                                            \"args\": null,\n                                                            \"concreteType\": \"SubscriptionType\",\n                                                            \"plural\": false,\n                                                            \"selections\": [\n                                                                (v1 /*: any*/),\n                                                                {\n                                                                    \"kind\": \"ScalarField\",\n                                                                    \"alias\": null,\n                                                                    \"name\": \"userAgent\",\n                                                                    \"args\": null,\n                                                                    \"storageKey\": null\n                                                                },\n                                                                {\n                                                                    \"kind\": \"ScalarField\",\n                                                                    \"alias\": null,\n                                                                    \"name\": \"userDeviceType\",\n                                                                    \"args\": null,\n                                                                    \"storageKey\": null\n                                                                },\n                                                                {\n                                                                    \"kind\": \"ScalarField\",\n                                                                    \"alias\": null,\n                                                                    \"name\": \"__typename\",\n                                                                    \"args\": null,\n                                                                    \"storageKey\": null\n                                                                }\n                                                            ]\n                                                        },\n                                                        {\n                                                            \"kind\": \"ScalarField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"cursor\",\n                                                            \"args\": null,\n                                                            \"storageKey\": null\n                                                        }\n                                                    ]\n                                                },\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"pageInfo\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"PageInfo\",\n                                                    \"plural\": false,\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"ScalarField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"endCursor\",\n                                                            \"args\": null,\n                                                            \"storageKey\": null\n                                                        },\n                                                        {\n                                                            \"kind\": \"ScalarField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"hasNextPage\",\n                                                            \"args\": null,\n                                                            \"storageKey\": null\n                                                        }\n                                                    ]\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"kind\": \"LinkedHandle\",\n                                            \"alias\": null,\n                                            \"name\": \"subscriptions\",\n                                            \"args\": (v2 /*: any*/),\n                                            \"handle\": \"connection\",\n                                            \"key\": \"Notifications_subscriptions\",\n                                            \"filters\": null\n                                        }\n                                    ]\n                                }\n                            ]\n                        },\n                        (v1 /*: any*/)\n                    ]\n                }\n            ]\n        },\n        \"params\": {\n            \"operationKind\": \"query\",\n            \"name\": \"SettingsQuery\",\n            \"id\": null,\n            \"text\": \"query SettingsQuery(\\n  $count: Int!\\n  $after: String\\n) {\\n  app {\\n    settings {\\n      id\\n      ...SettingsFragment_data\\n    }\\n    id\\n  }\\n}\\n\\nfragment SettingsFragment_data on SettingsType {\\n  id\\n  ownerId\\n  notifications {\\n    id\\n    general {\\n      ...NotificationsGeneralFragment_data\\n    }\\n    types {\\n      ...NotificationsTypesFragment_data\\n    }\\n    ...SubscriptionsPagination_data\\n  }\\n}\\n\\nfragment NotificationsGeneralFragment_data on NotificationsGeneralSettingType {\\n  show\\n  vibrate\\n}\\n\\nfragment NotificationsTypesFragment_data on NotificationsTypesSettingType {\\n  events\\n  goals\\n  meetings\\n  routines\\n  todos\\n}\\n\\nfragment SubscriptionsPagination_data on NotificationsType {\\n  subscriptions(first: $count, after: $after) {\\n    edges {\\n      node {\\n        id\\n        ...SubscriptionFragment_data\\n        __typename\\n      }\\n      cursor\\n    }\\n    pageInfo {\\n      endCursor\\n      hasNextPage\\n    }\\n  }\\n}\\n\\nfragment SubscriptionFragment_data on SubscriptionType {\\n  id\\n  userAgent\\n  userDeviceType\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = '83cacc82c2fc7aa5869f0d1ad5ba377d';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type deleteTaskMutationInput = {\n    readonly id?: string | null;\n    readonly clientMutationId?: string | null;\n};\nexport type deleteTaskMutationVariables = {\n    readonly input: deleteTaskMutationInput;\n};\nexport type deleteTaskMutationResponse = {\n    readonly deleteTask: {\n        readonly clientMutationId: string | null;\n        readonly deletedTaskId: string;\n    } | null;\n};\nexport type deleteTaskMutation = {\n    readonly response: deleteTaskMutationResponse;\n    readonly variables: deleteTaskMutationVariables;\n};\n\n\n\n/*\nmutation deleteTaskMutation(\n  $input: deleteTaskMutationInput!\n) {\n  deleteTask(input: $input) {\n    clientMutationId\n    deletedTaskId\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"input\",\n            \"type\": \"deleteTaskMutationInput!\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = [\n        ({\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"deleteTask\",\n            \"storageKey\": null,\n            \"args\": [\n                {\n                    \"kind\": \"Variable\",\n                    \"name\": \"input\",\n                    \"variableName\": \"input\"\n                }\n            ],\n            \"concreteType\": \"deleteTaskMutationPayload\",\n            \"plural\": false,\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"clientMutationId\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"deletedTaskId\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        } as any)\n    ];\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"deleteTaskMutation\",\n            \"type\": \"MutationType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": (v1 /*: any*/)\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"deleteTaskMutation\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": (v1 /*: any*/)\n        },\n        \"params\": {\n            \"operationKind\": \"mutation\",\n            \"name\": \"deleteTaskMutation\",\n            \"id\": null,\n            \"text\": \"mutation deleteTaskMutation(\\n  $input: deleteTaskMutationInput!\\n) {\\n  deleteTask(input: $input) {\\n    clientMutationId\\n    deletedTaskId\\n  }\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = '0fea97b083f2b0606224f2330ae81334';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type TaskStatusEnum = \"DONE\" | \"IN_PROGRESS\" | \"TODO\" | \"%future added value\";\nexport type updateTaskListStatusFilterSettingMutationInput = {\n    readonly status?: TaskStatusEnum | null;\n    readonly clientMutationId?: string | null;\n};\nexport type updateTaskListStatusFilterSettingMutationVariables = {\n    readonly input: updateTaskListStatusFilterSettingMutationInput;\n};\nexport type updateTaskListStatusFilterSettingMutationResponse = {\n    readonly updateTaskListStatusFilterSetting: {\n        readonly clientMutationId: string | null;\n        readonly status: TaskStatusEnum | null;\n    } | null;\n};\nexport type updateTaskListStatusFilterSettingMutation = {\n    readonly response: updateTaskListStatusFilterSettingMutationResponse;\n    readonly variables: updateTaskListStatusFilterSettingMutationVariables;\n};\n\n\n\n/*\nmutation updateTaskListStatusFilterSettingMutation(\n  $input: updateTaskListStatusFilterSettingMutationInput!\n) {\n  updateTaskListStatusFilterSetting(input: $input) {\n    clientMutationId\n    status\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"input\",\n            \"type\": \"updateTaskListStatusFilterSettingMutationInput!\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = [\n        ({\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"updateTaskListStatusFilterSetting\",\n            \"storageKey\": null,\n            \"args\": [\n                {\n                    \"kind\": \"Variable\",\n                    \"name\": \"input\",\n                    \"variableName\": \"input\"\n                }\n            ],\n            \"concreteType\": \"updateTaskListStatusFilterSettingMutationPayload\",\n            \"plural\": false,\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"clientMutationId\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"status\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        } as any)\n    ];\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"updateTaskListStatusFilterSettingMutation\",\n            \"type\": \"MutationType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": (v1 /*: any*/)\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"updateTaskListStatusFilterSettingMutation\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": (v1 /*: any*/)\n        },\n        \"params\": {\n            \"operationKind\": \"mutation\",\n            \"name\": \"updateTaskListStatusFilterSettingMutation\",\n            \"id\": null,\n            \"text\": \"mutation updateTaskListStatusFilterSettingMutation(\\n  $input: updateTaskListStatusFilterSettingMutationInput!\\n) {\\n  updateTaskListStatusFilterSetting(input: $input) {\\n    clientMutationId\\n    status\\n  }\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = '146bfff7bee283afb2942d20c8629f8c';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type TaskTypeEnum = \"EVENT\" | \"GOAL\" | \"MEETING\" | \"ROUTINE\" | \"TODO\" | \"%future added value\";\nexport type updateTaskListTaskTypeFilterSettingMutationInput = {\n    readonly taskType: ReadonlyArray<TaskTypeEnum>;\n    readonly clientMutationId?: string | null;\n};\nexport type updateTaskListTaskTypeFilterSettingMutationVariables = {\n    readonly input: updateTaskListTaskTypeFilterSettingMutationInput;\n};\nexport type updateTaskListTaskTypeFilterSettingMutationResponse = {\n    readonly updateTaskListTaskTypeFilterSetting: {\n        readonly clientMutationId: string | null;\n        readonly taskType: ReadonlyArray<TaskTypeEnum>;\n    } | null;\n};\nexport type updateTaskListTaskTypeFilterSettingMutation = {\n    readonly response: updateTaskListTaskTypeFilterSettingMutationResponse;\n    readonly variables: updateTaskListTaskTypeFilterSettingMutationVariables;\n};\n\n\n\n/*\nmutation updateTaskListTaskTypeFilterSettingMutation(\n  $input: updateTaskListTaskTypeFilterSettingMutationInput!\n) {\n  updateTaskListTaskTypeFilterSetting(input: $input) {\n    clientMutationId\n    taskType\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"input\",\n            \"type\": \"updateTaskListTaskTypeFilterSettingMutationInput!\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = [\n        ({\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"updateTaskListTaskTypeFilterSetting\",\n            \"storageKey\": null,\n            \"args\": [\n                {\n                    \"kind\": \"Variable\",\n                    \"name\": \"input\",\n                    \"variableName\": \"input\"\n                }\n            ],\n            \"concreteType\": \"updateTaskListTaskTypeFilterSettingMutationPayload\",\n            \"plural\": false,\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"clientMutationId\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"taskType\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        } as any)\n    ];\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"updateTaskListTaskTypeFilterSettingMutation\",\n            \"type\": \"MutationType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": (v1 /*: any*/)\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"updateTaskListTaskTypeFilterSettingMutation\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": (v1 /*: any*/)\n        },\n        \"params\": {\n            \"operationKind\": \"mutation\",\n            \"name\": \"updateTaskListTaskTypeFilterSettingMutation\",\n            \"id\": null,\n            \"text\": \"mutation updateTaskListTaskTypeFilterSettingMutation(\\n  $input: updateTaskListTaskTypeFilterSettingMutationInput!\\n) {\\n  updateTaskListTaskTypeFilterSetting(input: $input) {\\n    clientMutationId\\n    taskType\\n  }\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = '0ccf099efab74163f70e11d75f7ddee3';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type updateTaskListTitleFilterSettingMutationInput = {\n    readonly title?: string | null;\n    readonly clientMutationId?: string | null;\n};\nexport type updateTaskListTitleFilterSettingMutationVariables = {\n    readonly input: updateTaskListTitleFilterSettingMutationInput;\n};\nexport type updateTaskListTitleFilterSettingMutationResponse = {\n    readonly updateTaskListTitleFilterSetting: {\n        readonly clientMutationId: string | null;\n        readonly title: string | null;\n    } | null;\n};\nexport type updateTaskListTitleFilterSettingMutation = {\n    readonly response: updateTaskListTitleFilterSettingMutationResponse;\n    readonly variables: updateTaskListTitleFilterSettingMutationVariables;\n};\n\n\n\n/*\nmutation updateTaskListTitleFilterSettingMutation(\n  $input: updateTaskListTitleFilterSettingMutationInput!\n) {\n  updateTaskListTitleFilterSetting(input: $input) {\n    clientMutationId\n    title\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"input\",\n            \"type\": \"updateTaskListTitleFilterSettingMutationInput!\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = [\n        ({\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"updateTaskListTitleFilterSetting\",\n            \"storageKey\": null,\n            \"args\": [\n                {\n                    \"kind\": \"Variable\",\n                    \"name\": \"input\",\n                    \"variableName\": \"input\"\n                }\n            ],\n            \"concreteType\": \"updateTaskListTitleFilterSettingMutationPayload\",\n            \"plural\": false,\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"clientMutationId\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"title\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        } as any)\n    ];\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"updateTaskListTitleFilterSettingMutation\",\n            \"type\": \"MutationType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": (v1 /*: any*/)\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"updateTaskListTitleFilterSettingMutation\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": (v1 /*: any*/)\n        },\n        \"params\": {\n            \"operationKind\": \"mutation\",\n            \"name\": \"updateTaskListTitleFilterSettingMutation\",\n            \"id\": null,\n            \"text\": \"mutation updateTaskListTitleFilterSettingMutation(\\n  $input: updateTaskListTitleFilterSettingMutationInput!\\n) {\\n  updateTaskListTitleFilterSetting(input: $input) {\\n    clientMutationId\\n    title\\n  }\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = 'e93475e37e1506012b4ef0257980fe6f';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type FieldIdEnum = \"ACTION\" | \"ACTIVE\" | \"CYCLE\" | \"DATE\" | \"DATE_TIME\" | \"DURATION\" | \"LOCATION\" | \"NOTE\" | \"NOTIFICATIONS\" | \"PERSON\" | \"PRIORITY\" | \"PROGRESS\" | \"STATUS\" | \"TITLE\" | \"%future added value\";\nexport type FieldTypeEnum = \"CHOICE\" | \"NESTED\" | \"SLIDER\" | \"SWITCH\" | \"TEXT\" | \"%future added value\";\nexport type TaskTypeEnum = \"EVENT\" | \"GOAL\" | \"MEETING\" | \"ROUTINE\" | \"TODO\" | \"%future added value\";\nexport type useTaskListFragment$ref = any;\nexport type useTaskListFragment = {\n    readonly id: string;\n    readonly taskType: TaskTypeEnum;\n    readonly fields: ReadonlyArray<{\n        readonly id?: string;\n        readonly fieldId?: FieldIdEnum;\n        readonly meta?: {\n            readonly fieldType: FieldTypeEnum;\n            readonly label: string;\n            readonly disabled: boolean | null;\n            readonly required: boolean;\n            readonly max: number | null;\n            readonly min: number | null;\n            readonly step: number | null;\n            readonly helperText: string;\n            readonly defaultValue?: string | null;\n            readonly options?: ReadonlyArray<{\n                readonly text: string;\n                readonly value: string;\n            } | null>;\n            readonly inputType?: string | null;\n            readonly maxLength?: number | null;\n            readonly minLength?: number | null;\n            readonly parentValue?: {\n                readonly enabled?: boolean;\n                readonly text?: string;\n                readonly id?: string;\n            } | null;\n            readonly ownMeta?: {\n                readonly fieldType?: FieldTypeEnum;\n                readonly helperText?: string;\n                readonly label?: string;\n                readonly defaultValue?: string | null;\n                readonly options?: ReadonlyArray<{\n                    readonly text: string;\n                    readonly value: string;\n                } | null>;\n                readonly required?: boolean;\n                readonly inputType?: string | null;\n                readonly min?: number | null;\n                readonly max?: number | null;\n                readonly maxLength?: number | null;\n                readonly minLength?: number | null;\n                readonly disabled?: boolean | null;\n            } | null;\n            readonly childrenMeta?: ReadonlyArray<{\n                readonly fieldType: FieldTypeEnum;\n                readonly parentValue: {\n                    readonly enabled?: boolean;\n                    readonly text?: string;\n                    readonly id?: string;\n                } | null;\n                readonly ownMeta: {\n                    readonly fieldType?: FieldTypeEnum;\n                    readonly helperText?: string;\n                    readonly label?: string;\n                    readonly defaultValue?: string | null;\n                    readonly options?: ReadonlyArray<{\n                        readonly text: string;\n                        readonly value: string;\n                    } | null>;\n                    readonly required?: boolean;\n                    readonly inputType?: string | null;\n                    readonly min?: number | null;\n                    readonly max?: number | null;\n                    readonly maxLength?: number | null;\n                    readonly minLength?: number | null;\n                    readonly disabled?: boolean | null;\n                    readonly parentValue?: {\n                        readonly enabled?: boolean;\n                        readonly text?: string;\n                        readonly id?: string;\n                    } | null;\n                    readonly ownMeta?: {\n                        readonly fieldType?: FieldTypeEnum;\n                        readonly helperText?: string;\n                        readonly label?: string;\n                        readonly defaultValue?: string | null;\n                        readonly options?: ReadonlyArray<{\n                            readonly text: string;\n                            readonly value: string;\n                        } | null>;\n                        readonly required?: boolean;\n                        readonly inputType?: string | null;\n                        readonly min?: number | null;\n                        readonly max?: number | null;\n                        readonly maxLength?: number | null;\n                        readonly minLength?: number | null;\n                        readonly disabled?: boolean | null;\n                    } | null;\n                    readonly childrenMeta?: ReadonlyArray<{\n                        readonly fieldType: FieldTypeEnum;\n                        readonly parentValue: {\n                            readonly enabled?: boolean;\n                            readonly text?: string;\n                            readonly id?: string;\n                        } | null;\n                        readonly ownMeta: {\n                            readonly fieldType?: FieldTypeEnum;\n                            readonly helperText?: string;\n                            readonly label?: string;\n                            readonly defaultValue?: string | null;\n                            readonly options?: ReadonlyArray<{\n                                readonly text: string;\n                                readonly value: string;\n                            } | null>;\n                            readonly required?: boolean;\n                            readonly inputType?: string | null;\n                            readonly min?: number | null;\n                            readonly max?: number | null;\n                            readonly maxLength?: number | null;\n                            readonly minLength?: number | null;\n                            readonly disabled?: boolean | null;\n                        } | null;\n                    } | null> | null;\n                } | null;\n                readonly childrenMeta: ReadonlyArray<{\n                    readonly fieldType: FieldTypeEnum;\n                    readonly parentValue: {\n                        readonly enabled?: boolean;\n                        readonly text?: string;\n                        readonly id?: string;\n                    } | null;\n                    readonly ownMeta: {\n                        readonly fieldType?: FieldTypeEnum;\n                        readonly helperText?: string;\n                        readonly label?: string;\n                        readonly defaultValue?: string | null;\n                        readonly options?: ReadonlyArray<{\n                            readonly text: string;\n                            readonly value: string;\n                        } | null>;\n                        readonly required?: boolean;\n                        readonly inputType?: string | null;\n                        readonly min?: number | null;\n                        readonly max?: number | null;\n                        readonly maxLength?: number | null;\n                        readonly minLength?: number | null;\n                        readonly disabled?: boolean | null;\n                        readonly parentValue?: {\n                            readonly enabled?: boolean;\n                            readonly text?: string;\n                            readonly id?: string;\n                        } | null;\n                        readonly ownMeta?: {\n                            readonly fieldType?: FieldTypeEnum;\n                            readonly helperText?: string;\n                            readonly label?: string;\n                            readonly defaultValue?: string | null;\n                            readonly options?: ReadonlyArray<{\n                                readonly text: string;\n                                readonly value: string;\n                            } | null>;\n                            readonly required?: boolean;\n                            readonly inputType?: string | null;\n                            readonly min?: number | null;\n                            readonly max?: number | null;\n                            readonly maxLength?: number | null;\n                            readonly minLength?: number | null;\n                            readonly disabled?: boolean | null;\n                        } | null;\n                        readonly childrenMeta?: ReadonlyArray<{\n                            readonly fieldType: FieldTypeEnum;\n                            readonly parentValue: {\n                                readonly enabled?: boolean;\n                                readonly text?: string;\n                                readonly id?: string;\n                            } | null;\n                            readonly ownMeta: {\n                                readonly fieldType?: FieldTypeEnum;\n                                readonly helperText?: string;\n                                readonly label?: string;\n                                readonly defaultValue?: string | null;\n                                readonly options?: ReadonlyArray<{\n                                    readonly text: string;\n                                    readonly value: string;\n                                } | null>;\n                                readonly required?: boolean;\n                                readonly inputType?: string | null;\n                                readonly min?: number | null;\n                                readonly max?: number | null;\n                                readonly maxLength?: number | null;\n                                readonly minLength?: number | null;\n                                readonly disabled?: boolean | null;\n                            } | null;\n                        } | null> | null;\n                    } | null;\n                } | null> | null;\n            } | null> | null;\n        };\n        readonly value?: {\n            readonly progress: number;\n            readonly enabled?: boolean;\n            readonly id?: string;\n            readonly text?: string;\n            readonly ownValue?: {\n                readonly enabled?: boolean;\n                readonly text?: string;\n                readonly id?: string;\n            } | null;\n            readonly childrenValue?: {\n                readonly ownValue: {\n                    readonly enabled?: boolean;\n                    readonly text?: string;\n                    readonly id?: string;\n                } | null;\n                readonly childrenValue: {\n                    readonly ownValue: {\n                        readonly enabled?: boolean;\n                        readonly text?: string;\n                        readonly id?: string;\n                    } | null;\n                } | null;\n            } | null;\n        };\n    }>;\n    readonly \" $refType\": useTaskListFragment$ref;\n};\n\n\n\nconst node: ReaderFragment = (function () {\n    var v0 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v1 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"fieldId\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v2 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"fieldType\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v3 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"label\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v4 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"disabled\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v5 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"required\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v6 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"max\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v7 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"min\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v8 = [\n        (v2 /*: any*/),\n        (v3 /*: any*/),\n        (v4 /*: any*/),\n        (v5 /*: any*/)\n    ], v9 = [\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"enabled\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any)\n    ], v10 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"helperText\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v11 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"text\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v12 = [\n        (v2 /*: any*/),\n        (v10 /*: any*/),\n        (v3 /*: any*/),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"defaultValue\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        ({\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"options\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"ChoiceOptionsMetaType\",\n            \"plural\": true,\n            \"selections\": [\n                (v11 /*: any*/),\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"value\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        } as any),\n        (v5 /*: any*/)\n    ], v13 = [\n        (v0 /*: any*/)\n    ], v14 = [\n        (v2 /*: any*/),\n        (v10 /*: any*/),\n        (v3 /*: any*/),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"inputType\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        (v7 /*: any*/),\n        (v6 /*: any*/),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"maxLength\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"minLength\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        (v5 /*: any*/)\n    ], v15 = [\n        (v11 /*: any*/)\n    ], v16 = [\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"SwitchValueType\",\n            \"selections\": (v9 /*: any*/)\n        } as any),\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"TextValueType\",\n            \"selections\": (v15 /*: any*/)\n        } as any),\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"ChoiceValueType\",\n            \"selections\": (v13 /*: any*/)\n        } as any)\n    ], v17 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"parentValue\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": (v16 /*: any*/)\n    } as any), v18 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"ChoiceMetaType\",\n        \"selections\": (v12 /*: any*/)\n    } as any), v19 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"TextMetaType\",\n        \"selections\": (v14 /*: any*/)\n    } as any), v20 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"SwitchMetaType\",\n        \"selections\": (v8 /*: any*/)\n    } as any), v21 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownMeta\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            (v18 /*: any*/),\n            (v19 /*: any*/),\n            (v20 /*: any*/)\n        ]\n    } as any), v22 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownMeta\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            (v18 /*: any*/),\n            (v19 /*: any*/),\n            (v20 /*: any*/),\n            {\n                \"kind\": \"InlineFragment\",\n                \"type\": \"NestedMetaType\",\n                \"selections\": [\n                    (v17 /*: any*/),\n                    (v21 /*: any*/),\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"childrenMeta\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NestedMetaType\",\n                        \"plural\": true,\n                        \"selections\": [\n                            (v2 /*: any*/),\n                            (v17 /*: any*/),\n                            (v21 /*: any*/)\n                        ]\n                    }\n                ]\n            }\n        ]\n    } as any), v23 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownValue\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": (v16 /*: any*/)\n    } as any);\n    return {\n        \"kind\": \"Fragment\",\n        \"name\": \"useTaskListFragment\",\n        \"type\": \"TaskType\",\n        \"metadata\": null,\n        \"argumentDefinitions\": [],\n        \"selections\": [\n            (v0 /*: any*/),\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"taskType\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"fields\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": null,\n                \"plural\": true,\n                \"selections\": [\n                    {\n                        \"kind\": \"InlineFragment\",\n                        \"type\": \"SliderFieldType\",\n                        \"selections\": [\n                            (v0 /*: any*/),\n                            (v1 /*: any*/),\n                            {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"meta\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"SliderMetaType\",\n                                \"plural\": false,\n                                \"selections\": [\n                                    (v2 /*: any*/),\n                                    (v3 /*: any*/),\n                                    (v4 /*: any*/),\n                                    (v5 /*: any*/),\n                                    (v6 /*: any*/),\n                                    (v7 /*: any*/),\n                                    {\n                                        \"kind\": \"ScalarField\",\n                                        \"alias\": null,\n                                        \"name\": \"step\",\n                                        \"args\": null,\n                                        \"storageKey\": null\n                                    }\n                                ]\n                            },\n                            {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"value\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"SliderValueType\",\n                                \"plural\": false,\n                                \"selections\": [\n                                    {\n                                        \"kind\": \"ScalarField\",\n                                        \"alias\": null,\n                                        \"name\": \"progress\",\n                                        \"args\": null,\n                                        \"storageKey\": null\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"kind\": \"InlineFragment\",\n                        \"type\": \"SwitchFieldType\",\n                        \"selections\": [\n                            (v0 /*: any*/),\n                            (v1 /*: any*/),\n                            {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"meta\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"SwitchMetaType\",\n                                \"plural\": false,\n                                \"selections\": (v8 /*: any*/)\n                            },\n                            {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"value\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"SwitchValueType\",\n                                \"plural\": false,\n                                \"selections\": (v9 /*: any*/)\n                            }\n                        ]\n                    },\n                    {\n                        \"kind\": \"InlineFragment\",\n                        \"type\": \"ChoiceFieldType\",\n                        \"selections\": [\n                            (v0 /*: any*/),\n                            (v1 /*: any*/),\n                            {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"meta\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"ChoiceMetaType\",\n                                \"plural\": false,\n                                \"selections\": (v12 /*: any*/)\n                            },\n                            {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"value\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"ChoiceValueType\",\n                                \"plural\": false,\n                                \"selections\": (v13 /*: any*/)\n                            }\n                        ]\n                    },\n                    {\n                        \"kind\": \"InlineFragment\",\n                        \"type\": \"TextFieldType\",\n                        \"selections\": [\n                            (v0 /*: any*/),\n                            (v1 /*: any*/),\n                            {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"meta\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"TextMetaType\",\n                                \"plural\": false,\n                                \"selections\": (v14 /*: any*/)\n                            },\n                            {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"value\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"TextValueType\",\n                                \"plural\": false,\n                                \"selections\": (v15 /*: any*/)\n                            }\n                        ]\n                    },\n                    {\n                        \"kind\": \"InlineFragment\",\n                        \"type\": \"NestedFieldType\",\n                        \"selections\": [\n                            (v0 /*: any*/),\n                            (v1 /*: any*/),\n                            {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"meta\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"NestedMetaType\",\n                                \"plural\": false,\n                                \"selections\": [\n                                    (v2 /*: any*/),\n                                    (v17 /*: any*/),\n                                    (v21 /*: any*/),\n                                    {\n                                        \"kind\": \"LinkedField\",\n                                        \"alias\": null,\n                                        \"name\": \"childrenMeta\",\n                                        \"storageKey\": null,\n                                        \"args\": null,\n                                        \"concreteType\": \"NestedMetaType\",\n                                        \"plural\": true,\n                                        \"selections\": [\n                                            (v2 /*: any*/),\n                                            (v17 /*: any*/),\n                                            (v22 /*: any*/),\n                                            {\n                                                \"kind\": \"LinkedField\",\n                                                \"alias\": null,\n                                                \"name\": \"childrenMeta\",\n                                                \"storageKey\": null,\n                                                \"args\": null,\n                                                \"concreteType\": \"NestedMetaType\",\n                                                \"plural\": true,\n                                                \"selections\": [\n                                                    (v2 /*: any*/),\n                                                    (v17 /*: any*/),\n                                                    (v22 /*: any*/)\n                                                ]\n                                            }\n                                        ]\n                                    }\n                                ]\n                            },\n                            {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"value\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"NestedValueType\",\n                                \"plural\": false,\n                                \"selections\": [\n                                    (v23 /*: any*/),\n                                    {\n                                        \"kind\": \"LinkedField\",\n                                        \"alias\": null,\n                                        \"name\": \"childrenValue\",\n                                        \"storageKey\": null,\n                                        \"args\": null,\n                                        \"concreteType\": \"NestedValueType\",\n                                        \"plural\": false,\n                                        \"selections\": [\n                                            (v23 /*: any*/),\n                                            {\n                                                \"kind\": \"LinkedField\",\n                                                \"alias\": null,\n                                                \"name\": \"childrenValue\",\n                                                \"storageKey\": null,\n                                                \"args\": null,\n                                                \"concreteType\": \"NestedValueType\",\n                                                \"plural\": false,\n                                                \"selections\": [\n                                                    (v23 /*: any*/)\n                                                ]\n                                            }\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    } as any;\n})();\n(node as any).hash = 'b78a91f58ff36b3b80bd2af11dc8fa9e';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\ntype useTaskListFragment$ref = any;\nexport type useTaskListPagination$ref = any;\nexport type useTaskListPagination = {\n    readonly id: string;\n    readonly list: {\n        readonly edges: ReadonlyArray<{\n            readonly cursor: string;\n            readonly node: {\n                readonly id: string;\n                readonly \" $fragmentRefs\": useTaskListFragment$ref;\n            } | null;\n        } | null> | null;\n        readonly pageInfo: {\n            readonly hasNextPage: boolean;\n            readonly endCursor: string | null;\n        };\n    } | null;\n    readonly \" $refType\": useTaskListPagination$ref;\n};\n\n\n\nconst node: ReaderFragment = (function () {\n    var v0 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any);\n    return {\n        \"kind\": \"Fragment\",\n        \"name\": \"useTaskListPagination\",\n        \"type\": \"TaskListType\",\n        \"metadata\": {\n            \"connection\": [\n                {\n                    \"count\": \"count\",\n                    \"cursor\": \"after\",\n                    \"direction\": \"forward\",\n                    \"path\": [\n                        \"list\"\n                    ]\n                }\n            ]\n        },\n        \"argumentDefinitions\": [\n            {\n                \"kind\": \"RootArgument\",\n                \"name\": \"count\",\n                \"type\": \"Int\"\n            },\n            {\n                \"kind\": \"RootArgument\",\n                \"name\": \"after\",\n                \"type\": \"String\"\n            }\n        ],\n        \"selections\": [\n            (v0 /*: any*/),\n            {\n                \"kind\": \"LinkedField\",\n                \"alias\": \"list\",\n                \"name\": \"__TaskList_list_connection\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"TaskTypeConnection\",\n                \"plural\": false,\n                \"selections\": [\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"edges\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"TaskTypeEdge\",\n                        \"plural\": true,\n                        \"selections\": [\n                            {\n                                \"kind\": \"ScalarField\",\n                                \"alias\": null,\n                                \"name\": \"cursor\",\n                                \"args\": null,\n                                \"storageKey\": null\n                            },\n                            {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"node\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"TaskType\",\n                                \"plural\": false,\n                                \"selections\": [\n                                    (v0 /*: any*/),\n                                    {\n                                        \"kind\": \"ScalarField\",\n                                        \"alias\": null,\n                                        \"name\": \"__typename\",\n                                        \"args\": null,\n                                        \"storageKey\": null\n                                    },\n                                    {\n                                        \"kind\": \"FragmentSpread\",\n                                        \"name\": \"useTaskListFragment\",\n                                        \"args\": null\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"pageInfo\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"PageInfo\",\n                        \"plural\": false,\n                        \"selections\": [\n                            {\n                                \"kind\": \"ScalarField\",\n                                \"alias\": null,\n                                \"name\": \"hasNextPage\",\n                                \"args\": null,\n                                \"storageKey\": null\n                            },\n                            {\n                                \"kind\": \"ScalarField\",\n                                \"alias\": null,\n                                \"name\": \"endCursor\",\n                                \"args\": null,\n                                \"storageKey\": null\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    } as any;\n})();\n(node as any).hash = '1797b1e818d6fa4d25bf30c275a54a4d';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\ntype useTaskListPagination$ref = any;\nexport type useTaskListPaginationQueryVariables = {\n    readonly count: number;\n    readonly after?: string | null;\n};\nexport type useTaskListPaginationQueryResponse = {\n    readonly app: {\n        readonly taskList: {\n            readonly \" $fragmentRefs\": useTaskListPagination$ref;\n        };\n    };\n};\nexport type useTaskListPaginationQuery = {\n    readonly response: useTaskListPaginationQueryResponse;\n    readonly variables: useTaskListPaginationQueryVariables;\n};\n\n\n\n/*\nquery useTaskListPaginationQuery(\n  $count: Int!\n  $after: String\n) {\n  app {\n    taskList {\n      ...useTaskListPagination\n      id\n    }\n    id\n  }\n}\n\nfragment useTaskListPagination on TaskListType {\n  id\n  list(first: $count, after: $after) {\n    edges {\n      cursor\n      node {\n        id\n        ...useTaskListFragment\n        __typename\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n\nfragment useTaskListFragment on TaskType {\n  id\n  taskType\n  fields {\n    __typename\n    ... on SliderFieldType {\n      id\n      fieldId\n      meta {\n        fieldType\n        label\n        disabled\n        required\n        max\n        min\n        step\n      }\n      value {\n        progress\n      }\n    }\n    ... on SwitchFieldType {\n      id\n      fieldId\n      meta {\n        fieldType\n        label\n        disabled\n        required\n      }\n      value {\n        enabled\n      }\n    }\n    ... on ChoiceFieldType {\n      id\n      fieldId\n      meta {\n        fieldType\n        helperText\n        label\n        defaultValue\n        options {\n          text\n          value\n        }\n        required\n      }\n      value {\n        id\n      }\n    }\n    ... on TextFieldType {\n      id\n      fieldId\n      meta {\n        fieldType\n        helperText\n        label\n        inputType\n        min\n        max\n        maxLength\n        minLength\n        required\n      }\n      value {\n        text\n      }\n    }\n    ... on NestedFieldType {\n      id\n      fieldId\n      meta {\n        fieldType\n        parentValue {\n          __typename\n          ... on SwitchValueType {\n            enabled\n          }\n          ... on TextValueType {\n            text\n          }\n          ... on ChoiceValueType {\n            id\n          }\n        }\n        ownMeta {\n          __typename\n          ... on ChoiceMetaType {\n            fieldType\n            helperText\n            label\n            defaultValue\n            options {\n              text\n              value\n            }\n            required\n          }\n          ... on TextMetaType {\n            fieldType\n            helperText\n            label\n            inputType\n            min\n            max\n            maxLength\n            minLength\n            required\n          }\n          ... on SwitchMetaType {\n            fieldType\n            label\n            disabled\n            required\n          }\n        }\n        childrenMeta {\n          fieldType\n          parentValue {\n            __typename\n            ... on SwitchValueType {\n              enabled\n            }\n            ... on TextValueType {\n              text\n            }\n            ... on ChoiceValueType {\n              id\n            }\n          }\n          ownMeta {\n            __typename\n            ... on ChoiceMetaType {\n              fieldType\n              helperText\n              label\n              defaultValue\n              options {\n                text\n                value\n              }\n              required\n            }\n            ... on TextMetaType {\n              fieldType\n              helperText\n              label\n              inputType\n              min\n              max\n              maxLength\n              minLength\n              required\n            }\n            ... on SwitchMetaType {\n              fieldType\n              label\n              disabled\n              required\n            }\n            ... on NestedMetaType {\n              parentValue {\n                __typename\n                ... on SwitchValueType {\n                  enabled\n                }\n                ... on TextValueType {\n                  text\n                }\n                ... on ChoiceValueType {\n                  id\n                }\n              }\n              ownMeta {\n                __typename\n                ... on ChoiceMetaType {\n                  fieldType\n                  helperText\n                  label\n                  defaultValue\n                  options {\n                    text\n                    value\n                  }\n                  required\n                }\n                ... on TextMetaType {\n                  fieldType\n                  helperText\n                  label\n                  inputType\n                  min\n                  max\n                  maxLength\n                  minLength\n                  required\n                }\n                ... on SwitchMetaType {\n                  fieldType\n                  label\n                  disabled\n                  required\n                }\n              }\n              childrenMeta {\n                fieldType\n                parentValue {\n                  __typename\n                  ... on SwitchValueType {\n                    enabled\n                  }\n                  ... on TextValueType {\n                    text\n                  }\n                  ... on ChoiceValueType {\n                    id\n                  }\n                }\n                ownMeta {\n                  __typename\n                  ... on ChoiceMetaType {\n                    fieldType\n                    helperText\n                    label\n                    defaultValue\n                    options {\n                      text\n                      value\n                    }\n                    required\n                  }\n                  ... on TextMetaType {\n                    fieldType\n                    helperText\n                    label\n                    inputType\n                    min\n                    max\n                    maxLength\n                    minLength\n                    required\n                  }\n                  ... on SwitchMetaType {\n                    fieldType\n                    label\n                    disabled\n                    required\n                  }\n                }\n              }\n            }\n          }\n          childrenMeta {\n            fieldType\n            parentValue {\n              __typename\n              ... on SwitchValueType {\n                enabled\n              }\n              ... on TextValueType {\n                text\n              }\n              ... on ChoiceValueType {\n                id\n              }\n            }\n            ownMeta {\n              __typename\n              ... on ChoiceMetaType {\n                fieldType\n                helperText\n                label\n                defaultValue\n                options {\n                  text\n                  value\n                }\n                required\n              }\n              ... on TextMetaType {\n                fieldType\n                helperText\n                label\n                inputType\n                min\n                max\n                maxLength\n                minLength\n                required\n              }\n              ... on SwitchMetaType {\n                fieldType\n                label\n                disabled\n                required\n              }\n              ... on NestedMetaType {\n                parentValue {\n                  __typename\n                  ... on SwitchValueType {\n                    enabled\n                  }\n                  ... on TextValueType {\n                    text\n                  }\n                  ... on ChoiceValueType {\n                    id\n                  }\n                }\n                ownMeta {\n                  __typename\n                  ... on ChoiceMetaType {\n                    fieldType\n                    helperText\n                    label\n                    defaultValue\n                    options {\n                      text\n                      value\n                    }\n                    required\n                  }\n                  ... on TextMetaType {\n                    fieldType\n                    helperText\n                    label\n                    inputType\n                    min\n                    max\n                    maxLength\n                    minLength\n                    required\n                  }\n                  ... on SwitchMetaType {\n                    fieldType\n                    label\n                    disabled\n                    required\n                  }\n                }\n                childrenMeta {\n                  fieldType\n                  parentValue {\n                    __typename\n                    ... on SwitchValueType {\n                      enabled\n                    }\n                    ... on TextValueType {\n                      text\n                    }\n                    ... on ChoiceValueType {\n                      id\n                    }\n                  }\n                  ownMeta {\n                    __typename\n                    ... on ChoiceMetaType {\n                      fieldType\n                      helperText\n                      label\n                      defaultValue\n                      options {\n                        text\n                        value\n                      }\n                      required\n                    }\n                    ... on TextMetaType {\n                      fieldType\n                      helperText\n                      label\n                      inputType\n                      min\n                      max\n                      maxLength\n                      minLength\n                      required\n                    }\n                    ... on SwitchMetaType {\n                      fieldType\n                      label\n                      disabled\n                      required\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      value {\n        ownValue {\n          __typename\n          ... on SwitchValueType {\n            enabled\n          }\n          ... on TextValueType {\n            text\n          }\n          ... on ChoiceValueType {\n            id\n          }\n        }\n        childrenValue {\n          ownValue {\n            __typename\n            ... on SwitchValueType {\n              enabled\n            }\n            ... on TextValueType {\n              text\n            }\n            ... on ChoiceValueType {\n              id\n            }\n          }\n          childrenValue {\n            ownValue {\n              __typename\n              ... on SwitchValueType {\n                enabled\n              }\n              ... on TextValueType {\n                text\n              }\n              ... on ChoiceValueType {\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"count\",\n            \"type\": \"Int!\",\n            \"defaultValue\": null\n        } as any),\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"after\",\n            \"type\": \"String\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v2 = [\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"after\",\n            \"variableName\": \"after\"\n        } as any),\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"first\",\n            \"variableName\": \"count\"\n        } as any)\n    ], v3 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"__typename\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v4 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"fieldId\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v5 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"fieldType\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v6 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"label\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v7 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"disabled\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v8 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"required\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v9 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"max\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v10 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"min\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v11 = [\n        (v5 /*: any*/),\n        (v6 /*: any*/),\n        (v7 /*: any*/),\n        (v8 /*: any*/)\n    ], v12 = [\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"enabled\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any)\n    ], v13 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"helperText\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v14 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"text\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v15 = [\n        (v5 /*: any*/),\n        (v13 /*: any*/),\n        (v6 /*: any*/),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"defaultValue\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        ({\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"options\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"ChoiceOptionsMetaType\",\n            \"plural\": true,\n            \"selections\": [\n                (v14 /*: any*/),\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"value\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        } as any),\n        (v8 /*: any*/)\n    ], v16 = [\n        (v1 /*: any*/)\n    ], v17 = [\n        (v5 /*: any*/),\n        (v13 /*: any*/),\n        (v6 /*: any*/),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"inputType\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        (v10 /*: any*/),\n        (v9 /*: any*/),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"maxLength\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"minLength\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        (v8 /*: any*/)\n    ], v18 = [\n        (v14 /*: any*/)\n    ], v19 = [\n        (v3 /*: any*/),\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"SwitchValueType\",\n            \"selections\": (v12 /*: any*/)\n        } as any),\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"TextValueType\",\n            \"selections\": (v18 /*: any*/)\n        } as any),\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"ChoiceValueType\",\n            \"selections\": (v16 /*: any*/)\n        } as any)\n    ], v20 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"parentValue\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": (v19 /*: any*/)\n    } as any), v21 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"ChoiceMetaType\",\n        \"selections\": (v15 /*: any*/)\n    } as any), v22 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"TextMetaType\",\n        \"selections\": (v17 /*: any*/)\n    } as any), v23 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"SwitchMetaType\",\n        \"selections\": (v11 /*: any*/)\n    } as any), v24 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownMeta\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            (v3 /*: any*/),\n            (v21 /*: any*/),\n            (v22 /*: any*/),\n            (v23 /*: any*/)\n        ]\n    } as any), v25 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownMeta\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            (v3 /*: any*/),\n            (v21 /*: any*/),\n            (v22 /*: any*/),\n            (v23 /*: any*/),\n            {\n                \"kind\": \"InlineFragment\",\n                \"type\": \"NestedMetaType\",\n                \"selections\": [\n                    (v20 /*: any*/),\n                    (v24 /*: any*/),\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"childrenMeta\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NestedMetaType\",\n                        \"plural\": true,\n                        \"selections\": [\n                            (v5 /*: any*/),\n                            (v20 /*: any*/),\n                            (v24 /*: any*/)\n                        ]\n                    }\n                ]\n            }\n        ]\n    } as any), v26 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownValue\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": (v19 /*: any*/)\n    } as any);\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"useTaskListPaginationQuery\",\n            \"type\": \"QueryType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"app\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"AppType\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"taskList\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"TaskListType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                {\n                                    \"kind\": \"FragmentSpread\",\n                                    \"name\": \"useTaskListPagination\",\n                                    \"args\": null\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"useTaskListPaginationQuery\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"app\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"AppType\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"taskList\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"TaskListType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                (v1 /*: any*/),\n                                {\n                                    \"kind\": \"LinkedField\",\n                                    \"alias\": null,\n                                    \"name\": \"list\",\n                                    \"storageKey\": null,\n                                    \"args\": (v2 /*: any*/),\n                                    \"concreteType\": \"TaskTypeConnection\",\n                                    \"plural\": false,\n                                    \"selections\": [\n                                        {\n                                            \"kind\": \"LinkedField\",\n                                            \"alias\": null,\n                                            \"name\": \"edges\",\n                                            \"storageKey\": null,\n                                            \"args\": null,\n                                            \"concreteType\": \"TaskTypeEdge\",\n                                            \"plural\": true,\n                                            \"selections\": [\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"cursor\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                },\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"node\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"TaskType\",\n                                                    \"plural\": false,\n                                                    \"selections\": [\n                                                        (v1 /*: any*/),\n                                                        {\n                                                            \"kind\": \"ScalarField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"taskType\",\n                                                            \"args\": null,\n                                                            \"storageKey\": null\n                                                        },\n                                                        {\n                                                            \"kind\": \"LinkedField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"fields\",\n                                                            \"storageKey\": null,\n                                                            \"args\": null,\n                                                            \"concreteType\": null,\n                                                            \"plural\": true,\n                                                            \"selections\": [\n                                                                (v3 /*: any*/),\n                                                                (v1 /*: any*/),\n                                                                {\n                                                                    \"kind\": \"InlineFragment\",\n                                                                    \"type\": \"SliderFieldType\",\n                                                                    \"selections\": [\n                                                                        (v4 /*: any*/),\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"meta\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"SliderMetaType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": [\n                                                                                (v5 /*: any*/),\n                                                                                (v6 /*: any*/),\n                                                                                (v7 /*: any*/),\n                                                                                (v8 /*: any*/),\n                                                                                (v9 /*: any*/),\n                                                                                (v10 /*: any*/),\n                                                                                {\n                                                                                    \"kind\": \"ScalarField\",\n                                                                                    \"alias\": null,\n                                                                                    \"name\": \"step\",\n                                                                                    \"args\": null,\n                                                                                    \"storageKey\": null\n                                                                                }\n                                                                            ]\n                                                                        },\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"value\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"SliderValueType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": [\n                                                                                {\n                                                                                    \"kind\": \"ScalarField\",\n                                                                                    \"alias\": null,\n                                                                                    \"name\": \"progress\",\n                                                                                    \"args\": null,\n                                                                                    \"storageKey\": null\n                                                                                }\n                                                                            ]\n                                                                        }\n                                                                    ]\n                                                                },\n                                                                {\n                                                                    \"kind\": \"InlineFragment\",\n                                                                    \"type\": \"SwitchFieldType\",\n                                                                    \"selections\": [\n                                                                        (v4 /*: any*/),\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"meta\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"SwitchMetaType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": (v11 /*: any*/)\n                                                                        },\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"value\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"SwitchValueType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": (v12 /*: any*/)\n                                                                        }\n                                                                    ]\n                                                                },\n                                                                {\n                                                                    \"kind\": \"InlineFragment\",\n                                                                    \"type\": \"ChoiceFieldType\",\n                                                                    \"selections\": [\n                                                                        (v4 /*: any*/),\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"meta\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"ChoiceMetaType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": (v15 /*: any*/)\n                                                                        },\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"value\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"ChoiceValueType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": (v16 /*: any*/)\n                                                                        }\n                                                                    ]\n                                                                },\n                                                                {\n                                                                    \"kind\": \"InlineFragment\",\n                                                                    \"type\": \"TextFieldType\",\n                                                                    \"selections\": [\n                                                                        (v4 /*: any*/),\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"meta\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"TextMetaType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": (v17 /*: any*/)\n                                                                        },\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"value\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"TextValueType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": (v18 /*: any*/)\n                                                                        }\n                                                                    ]\n                                                                },\n                                                                {\n                                                                    \"kind\": \"InlineFragment\",\n                                                                    \"type\": \"NestedFieldType\",\n                                                                    \"selections\": [\n                                                                        (v4 /*: any*/),\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"meta\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"NestedMetaType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": [\n                                                                                (v5 /*: any*/),\n                                                                                (v20 /*: any*/),\n                                                                                (v24 /*: any*/),\n                                                                                {\n                                                                                    \"kind\": \"LinkedField\",\n                                                                                    \"alias\": null,\n                                                                                    \"name\": \"childrenMeta\",\n                                                                                    \"storageKey\": null,\n                                                                                    \"args\": null,\n                                                                                    \"concreteType\": \"NestedMetaType\",\n                                                                                    \"plural\": true,\n                                                                                    \"selections\": [\n                                                                                        (v5 /*: any*/),\n                                                                                        (v20 /*: any*/),\n                                                                                        (v25 /*: any*/),\n                                                                                        {\n                                                                                            \"kind\": \"LinkedField\",\n                                                                                            \"alias\": null,\n                                                                                            \"name\": \"childrenMeta\",\n                                                                                            \"storageKey\": null,\n                                                                                            \"args\": null,\n                                                                                            \"concreteType\": \"NestedMetaType\",\n                                                                                            \"plural\": true,\n                                                                                            \"selections\": [\n                                                                                                (v5 /*: any*/),\n                                                                                                (v20 /*: any*/),\n                                                                                                (v25 /*: any*/)\n                                                                                            ]\n                                                                                        }\n                                                                                    ]\n                                                                                }\n                                                                            ]\n                                                                        },\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"value\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"NestedValueType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": [\n                                                                                (v26 /*: any*/),\n                                                                                {\n                                                                                    \"kind\": \"LinkedField\",\n                                                                                    \"alias\": null,\n                                                                                    \"name\": \"childrenValue\",\n                                                                                    \"storageKey\": null,\n                                                                                    \"args\": null,\n                                                                                    \"concreteType\": \"NestedValueType\",\n                                                                                    \"plural\": false,\n                                                                                    \"selections\": [\n                                                                                        (v26 /*: any*/),\n                                                                                        {\n                                                                                            \"kind\": \"LinkedField\",\n                                                                                            \"alias\": null,\n                                                                                            \"name\": \"childrenValue\",\n                                                                                            \"storageKey\": null,\n                                                                                            \"args\": null,\n                                                                                            \"concreteType\": \"NestedValueType\",\n                                                                                            \"plural\": false,\n                                                                                            \"selections\": [\n                                                                                                (v26 /*: any*/)\n                                                                                            ]\n                                                                                        }\n                                                                                    ]\n                                                                                }\n                                                                            ]\n                                                                        }\n                                                                    ]\n                                                                }\n                                                            ]\n                                                        },\n                                                        (v3 /*: any*/)\n                                                    ]\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"kind\": \"LinkedField\",\n                                            \"alias\": null,\n                                            \"name\": \"pageInfo\",\n                                            \"storageKey\": null,\n                                            \"args\": null,\n                                            \"concreteType\": \"PageInfo\",\n                                            \"plural\": false,\n                                            \"selections\": [\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"hasNextPage\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                },\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"endCursor\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                },\n                                {\n                                    \"kind\": \"LinkedHandle\",\n                                    \"alias\": null,\n                                    \"name\": \"list\",\n                                    \"args\": (v2 /*: any*/),\n                                    \"handle\": \"connection\",\n                                    \"key\": \"TaskList_list\",\n                                    \"filters\": null\n                                }\n                            ]\n                        },\n                        (v1 /*: any*/)\n                    ]\n                }\n            ]\n        },\n        \"params\": {\n            \"operationKind\": \"query\",\n            \"name\": \"useTaskListPaginationQuery\",\n            \"id\": null,\n            \"text\": \"query useTaskListPaginationQuery(\\n  $count: Int!\\n  $after: String\\n) {\\n  app {\\n    taskList {\\n      ...useTaskListPagination\\n      id\\n    }\\n    id\\n  }\\n}\\n\\nfragment useTaskListPagination on TaskListType {\\n  id\\n  list(first: $count, after: $after) {\\n    edges {\\n      cursor\\n      node {\\n        id\\n        ...useTaskListFragment\\n        __typename\\n      }\\n    }\\n    pageInfo {\\n      hasNextPage\\n      endCursor\\n    }\\n  }\\n}\\n\\nfragment useTaskListFragment on TaskType {\\n  id\\n  taskType\\n  fields {\\n    __typename\\n    ... on SliderFieldType {\\n      id\\n      fieldId\\n      meta {\\n        fieldType\\n        label\\n        disabled\\n        required\\n        max\\n        min\\n        step\\n      }\\n      value {\\n        progress\\n      }\\n    }\\n    ... on SwitchFieldType {\\n      id\\n      fieldId\\n      meta {\\n        fieldType\\n        label\\n        disabled\\n        required\\n      }\\n      value {\\n        enabled\\n      }\\n    }\\n    ... on ChoiceFieldType {\\n      id\\n      fieldId\\n      meta {\\n        fieldType\\n        helperText\\n        label\\n        defaultValue\\n        options {\\n          text\\n          value\\n        }\\n        required\\n      }\\n      value {\\n        id\\n      }\\n    }\\n    ... on TextFieldType {\\n      id\\n      fieldId\\n      meta {\\n        fieldType\\n        helperText\\n        label\\n        inputType\\n        min\\n        max\\n        maxLength\\n        minLength\\n        required\\n      }\\n      value {\\n        text\\n      }\\n    }\\n    ... on NestedFieldType {\\n      id\\n      fieldId\\n      meta {\\n        fieldType\\n        parentValue {\\n          __typename\\n          ... on SwitchValueType {\\n            enabled\\n          }\\n          ... on TextValueType {\\n            text\\n          }\\n          ... on ChoiceValueType {\\n            id\\n          }\\n        }\\n        ownMeta {\\n          __typename\\n          ... on ChoiceMetaType {\\n            fieldType\\n            helperText\\n            label\\n            defaultValue\\n            options {\\n              text\\n              value\\n            }\\n            required\\n          }\\n          ... on TextMetaType {\\n            fieldType\\n            helperText\\n            label\\n            inputType\\n            min\\n            max\\n            maxLength\\n            minLength\\n            required\\n          }\\n          ... on SwitchMetaType {\\n            fieldType\\n            label\\n            disabled\\n            required\\n          }\\n        }\\n        childrenMeta {\\n          fieldType\\n          parentValue {\\n            __typename\\n            ... on SwitchValueType {\\n              enabled\\n            }\\n            ... on TextValueType {\\n              text\\n            }\\n            ... on ChoiceValueType {\\n              id\\n            }\\n          }\\n          ownMeta {\\n            __typename\\n            ... on ChoiceMetaType {\\n              fieldType\\n              helperText\\n              label\\n              defaultValue\\n              options {\\n                text\\n                value\\n              }\\n              required\\n            }\\n            ... on TextMetaType {\\n              fieldType\\n              helperText\\n              label\\n              inputType\\n              min\\n              max\\n              maxLength\\n              minLength\\n              required\\n            }\\n            ... on SwitchMetaType {\\n              fieldType\\n              label\\n              disabled\\n              required\\n            }\\n            ... on NestedMetaType {\\n              parentValue {\\n                __typename\\n                ... on SwitchValueType {\\n                  enabled\\n                }\\n                ... on TextValueType {\\n                  text\\n                }\\n                ... on ChoiceValueType {\\n                  id\\n                }\\n              }\\n              ownMeta {\\n                __typename\\n                ... on ChoiceMetaType {\\n                  fieldType\\n                  helperText\\n                  label\\n                  defaultValue\\n                  options {\\n                    text\\n                    value\\n                  }\\n                  required\\n                }\\n                ... on TextMetaType {\\n                  fieldType\\n                  helperText\\n                  label\\n                  inputType\\n                  min\\n                  max\\n                  maxLength\\n                  minLength\\n                  required\\n                }\\n                ... on SwitchMetaType {\\n                  fieldType\\n                  label\\n                  disabled\\n                  required\\n                }\\n              }\\n              childrenMeta {\\n                fieldType\\n                parentValue {\\n                  __typename\\n                  ... on SwitchValueType {\\n                    enabled\\n                  }\\n                  ... on TextValueType {\\n                    text\\n                  }\\n                  ... on ChoiceValueType {\\n                    id\\n                  }\\n                }\\n                ownMeta {\\n                  __typename\\n                  ... on ChoiceMetaType {\\n                    fieldType\\n                    helperText\\n                    label\\n                    defaultValue\\n                    options {\\n                      text\\n                      value\\n                    }\\n                    required\\n                  }\\n                  ... on TextMetaType {\\n                    fieldType\\n                    helperText\\n                    label\\n                    inputType\\n                    min\\n                    max\\n                    maxLength\\n                    minLength\\n                    required\\n                  }\\n                  ... on SwitchMetaType {\\n                    fieldType\\n                    label\\n                    disabled\\n                    required\\n                  }\\n                }\\n              }\\n            }\\n          }\\n          childrenMeta {\\n            fieldType\\n            parentValue {\\n              __typename\\n              ... on SwitchValueType {\\n                enabled\\n              }\\n              ... on TextValueType {\\n                text\\n              }\\n              ... on ChoiceValueType {\\n                id\\n              }\\n            }\\n            ownMeta {\\n              __typename\\n              ... on ChoiceMetaType {\\n                fieldType\\n                helperText\\n                label\\n                defaultValue\\n                options {\\n                  text\\n                  value\\n                }\\n                required\\n              }\\n              ... on TextMetaType {\\n                fieldType\\n                helperText\\n                label\\n                inputType\\n                min\\n                max\\n                maxLength\\n                minLength\\n                required\\n              }\\n              ... on SwitchMetaType {\\n                fieldType\\n                label\\n                disabled\\n                required\\n              }\\n              ... on NestedMetaType {\\n                parentValue {\\n                  __typename\\n                  ... on SwitchValueType {\\n                    enabled\\n                  }\\n                  ... on TextValueType {\\n                    text\\n                  }\\n                  ... on ChoiceValueType {\\n                    id\\n                  }\\n                }\\n                ownMeta {\\n                  __typename\\n                  ... on ChoiceMetaType {\\n                    fieldType\\n                    helperText\\n                    label\\n                    defaultValue\\n                    options {\\n                      text\\n                      value\\n                    }\\n                    required\\n                  }\\n                  ... on TextMetaType {\\n                    fieldType\\n                    helperText\\n                    label\\n                    inputType\\n                    min\\n                    max\\n                    maxLength\\n                    minLength\\n                    required\\n                  }\\n                  ... on SwitchMetaType {\\n                    fieldType\\n                    label\\n                    disabled\\n                    required\\n                  }\\n                }\\n                childrenMeta {\\n                  fieldType\\n                  parentValue {\\n                    __typename\\n                    ... on SwitchValueType {\\n                      enabled\\n                    }\\n                    ... on TextValueType {\\n                      text\\n                    }\\n                    ... on ChoiceValueType {\\n                      id\\n                    }\\n                  }\\n                  ownMeta {\\n                    __typename\\n                    ... on ChoiceMetaType {\\n                      fieldType\\n                      helperText\\n                      label\\n                      defaultValue\\n                      options {\\n                        text\\n                        value\\n                      }\\n                      required\\n                    }\\n                    ... on TextMetaType {\\n                      fieldType\\n                      helperText\\n                      label\\n                      inputType\\n                      min\\n                      max\\n                      maxLength\\n                      minLength\\n                      required\\n                    }\\n                    ... on SwitchMetaType {\\n                      fieldType\\n                      label\\n                      disabled\\n                      required\\n                    }\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n      value {\\n        ownValue {\\n          __typename\\n          ... on SwitchValueType {\\n            enabled\\n          }\\n          ... on TextValueType {\\n            text\\n          }\\n          ... on ChoiceValueType {\\n            id\\n          }\\n        }\\n        childrenValue {\\n          ownValue {\\n            __typename\\n            ... on SwitchValueType {\\n              enabled\\n            }\\n            ... on TextValueType {\\n              text\\n            }\\n            ... on ChoiceValueType {\\n              id\\n            }\\n          }\\n          childrenValue {\\n            ownValue {\\n              __typename\\n              ... on SwitchValueType {\\n                enabled\\n              }\\n              ... on TextValueType {\\n                text\\n              }\\n              ... on ChoiceValueType {\\n                id\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n    ... on Node {\\n      id\\n    }\\n  }\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = 'a6f8ee2c6d89f76eeaf010d5e6cb1be5';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\ntype useTaskListPagination$ref = any;\nexport type TaskTypeEnum = \"EVENT\" | \"GOAL\" | \"MEETING\" | \"ROUTINE\" | \"TODO\" | \"%future added value\";\nexport type useTaskListQueryVariables = {\n    readonly count: number;\n    readonly after?: string | null;\n};\nexport type useTaskListQueryResponse = {\n    readonly app: {\n        readonly taskList: {\n            readonly \" $fragmentRefs\": useTaskListPagination$ref;\n        };\n        readonly settings: {\n            readonly id: string;\n            readonly taskList: {\n                readonly filters: {\n                    readonly title: string;\n                    readonly taskType: ReadonlyArray<TaskTypeEnum>;\n                    readonly status: string | null;\n                };\n            };\n        };\n    };\n};\nexport type useTaskListQuery = {\n    readonly response: useTaskListQueryResponse;\n    readonly variables: useTaskListQueryVariables;\n};\n\n\n\n/*\nquery useTaskListQuery(\n  $count: Int!\n  $after: String\n) {\n  app {\n    taskList {\n      ...useTaskListPagination\n      id\n    }\n    settings {\n      id\n      taskList {\n        filters {\n          title\n          taskType\n          status\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment useTaskListPagination on TaskListType {\n  id\n  list(first: $count, after: $after) {\n    edges {\n      cursor\n      node {\n        id\n        ...useTaskListFragment\n        __typename\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n\nfragment useTaskListFragment on TaskType {\n  id\n  taskType\n  fields {\n    __typename\n    ... on SliderFieldType {\n      id\n      fieldId\n      meta {\n        fieldType\n        label\n        disabled\n        required\n        max\n        min\n        step\n      }\n      value {\n        progress\n      }\n    }\n    ... on SwitchFieldType {\n      id\n      fieldId\n      meta {\n        fieldType\n        label\n        disabled\n        required\n      }\n      value {\n        enabled\n      }\n    }\n    ... on ChoiceFieldType {\n      id\n      fieldId\n      meta {\n        fieldType\n        helperText\n        label\n        defaultValue\n        options {\n          text\n          value\n        }\n        required\n      }\n      value {\n        id\n      }\n    }\n    ... on TextFieldType {\n      id\n      fieldId\n      meta {\n        fieldType\n        helperText\n        label\n        inputType\n        min\n        max\n        maxLength\n        minLength\n        required\n      }\n      value {\n        text\n      }\n    }\n    ... on NestedFieldType {\n      id\n      fieldId\n      meta {\n        fieldType\n        parentValue {\n          __typename\n          ... on SwitchValueType {\n            enabled\n          }\n          ... on TextValueType {\n            text\n          }\n          ... on ChoiceValueType {\n            id\n          }\n        }\n        ownMeta {\n          __typename\n          ... on ChoiceMetaType {\n            fieldType\n            helperText\n            label\n            defaultValue\n            options {\n              text\n              value\n            }\n            required\n          }\n          ... on TextMetaType {\n            fieldType\n            helperText\n            label\n            inputType\n            min\n            max\n            maxLength\n            minLength\n            required\n          }\n          ... on SwitchMetaType {\n            fieldType\n            label\n            disabled\n            required\n          }\n        }\n        childrenMeta {\n          fieldType\n          parentValue {\n            __typename\n            ... on SwitchValueType {\n              enabled\n            }\n            ... on TextValueType {\n              text\n            }\n            ... on ChoiceValueType {\n              id\n            }\n          }\n          ownMeta {\n            __typename\n            ... on ChoiceMetaType {\n              fieldType\n              helperText\n              label\n              defaultValue\n              options {\n                text\n                value\n              }\n              required\n            }\n            ... on TextMetaType {\n              fieldType\n              helperText\n              label\n              inputType\n              min\n              max\n              maxLength\n              minLength\n              required\n            }\n            ... on SwitchMetaType {\n              fieldType\n              label\n              disabled\n              required\n            }\n            ... on NestedMetaType {\n              parentValue {\n                __typename\n                ... on SwitchValueType {\n                  enabled\n                }\n                ... on TextValueType {\n                  text\n                }\n                ... on ChoiceValueType {\n                  id\n                }\n              }\n              ownMeta {\n                __typename\n                ... on ChoiceMetaType {\n                  fieldType\n                  helperText\n                  label\n                  defaultValue\n                  options {\n                    text\n                    value\n                  }\n                  required\n                }\n                ... on TextMetaType {\n                  fieldType\n                  helperText\n                  label\n                  inputType\n                  min\n                  max\n                  maxLength\n                  minLength\n                  required\n                }\n                ... on SwitchMetaType {\n                  fieldType\n                  label\n                  disabled\n                  required\n                }\n              }\n              childrenMeta {\n                fieldType\n                parentValue {\n                  __typename\n                  ... on SwitchValueType {\n                    enabled\n                  }\n                  ... on TextValueType {\n                    text\n                  }\n                  ... on ChoiceValueType {\n                    id\n                  }\n                }\n                ownMeta {\n                  __typename\n                  ... on ChoiceMetaType {\n                    fieldType\n                    helperText\n                    label\n                    defaultValue\n                    options {\n                      text\n                      value\n                    }\n                    required\n                  }\n                  ... on TextMetaType {\n                    fieldType\n                    helperText\n                    label\n                    inputType\n                    min\n                    max\n                    maxLength\n                    minLength\n                    required\n                  }\n                  ... on SwitchMetaType {\n                    fieldType\n                    label\n                    disabled\n                    required\n                  }\n                }\n              }\n            }\n          }\n          childrenMeta {\n            fieldType\n            parentValue {\n              __typename\n              ... on SwitchValueType {\n                enabled\n              }\n              ... on TextValueType {\n                text\n              }\n              ... on ChoiceValueType {\n                id\n              }\n            }\n            ownMeta {\n              __typename\n              ... on ChoiceMetaType {\n                fieldType\n                helperText\n                label\n                defaultValue\n                options {\n                  text\n                  value\n                }\n                required\n              }\n              ... on TextMetaType {\n                fieldType\n                helperText\n                label\n                inputType\n                min\n                max\n                maxLength\n                minLength\n                required\n              }\n              ... on SwitchMetaType {\n                fieldType\n                label\n                disabled\n                required\n              }\n              ... on NestedMetaType {\n                parentValue {\n                  __typename\n                  ... on SwitchValueType {\n                    enabled\n                  }\n                  ... on TextValueType {\n                    text\n                  }\n                  ... on ChoiceValueType {\n                    id\n                  }\n                }\n                ownMeta {\n                  __typename\n                  ... on ChoiceMetaType {\n                    fieldType\n                    helperText\n                    label\n                    defaultValue\n                    options {\n                      text\n                      value\n                    }\n                    required\n                  }\n                  ... on TextMetaType {\n                    fieldType\n                    helperText\n                    label\n                    inputType\n                    min\n                    max\n                    maxLength\n                    minLength\n                    required\n                  }\n                  ... on SwitchMetaType {\n                    fieldType\n                    label\n                    disabled\n                    required\n                  }\n                }\n                childrenMeta {\n                  fieldType\n                  parentValue {\n                    __typename\n                    ... on SwitchValueType {\n                      enabled\n                    }\n                    ... on TextValueType {\n                      text\n                    }\n                    ... on ChoiceValueType {\n                      id\n                    }\n                  }\n                  ownMeta {\n                    __typename\n                    ... on ChoiceMetaType {\n                      fieldType\n                      helperText\n                      label\n                      defaultValue\n                      options {\n                        text\n                        value\n                      }\n                      required\n                    }\n                    ... on TextMetaType {\n                      fieldType\n                      helperText\n                      label\n                      inputType\n                      min\n                      max\n                      maxLength\n                      minLength\n                      required\n                    }\n                    ... on SwitchMetaType {\n                      fieldType\n                      label\n                      disabled\n                      required\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      value {\n        ownValue {\n          __typename\n          ... on SwitchValueType {\n            enabled\n          }\n          ... on TextValueType {\n            text\n          }\n          ... on ChoiceValueType {\n            id\n          }\n        }\n        childrenValue {\n          ownValue {\n            __typename\n            ... on SwitchValueType {\n              enabled\n            }\n            ... on TextValueType {\n              text\n            }\n            ... on ChoiceValueType {\n              id\n            }\n          }\n          childrenValue {\n            ownValue {\n              __typename\n              ... on SwitchValueType {\n                enabled\n              }\n              ... on TextValueType {\n                text\n              }\n              ... on ChoiceValueType {\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"count\",\n            \"type\": \"Int!\",\n            \"defaultValue\": null\n        } as any),\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"after\",\n            \"type\": \"String\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v2 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"taskType\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v3 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"settings\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"SettingsType\",\n        \"plural\": false,\n        \"selections\": [\n            (v1 /*: any*/),\n            {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"taskList\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"TaskListSettingsType\",\n                \"plural\": false,\n                \"selections\": [\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"filters\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"TaskListFiltersSettingsType\",\n                        \"plural\": false,\n                        \"selections\": [\n                            {\n                                \"kind\": \"ScalarField\",\n                                \"alias\": null,\n                                \"name\": \"title\",\n                                \"args\": null,\n                                \"storageKey\": null\n                            },\n                            (v2 /*: any*/),\n                            {\n                                \"kind\": \"ScalarField\",\n                                \"alias\": null,\n                                \"name\": \"status\",\n                                \"args\": null,\n                                \"storageKey\": null\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    } as any), v4 = [\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"after\",\n            \"variableName\": \"after\"\n        } as any),\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"first\",\n            \"variableName\": \"count\"\n        } as any)\n    ], v5 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"__typename\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v6 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"fieldId\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v7 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"fieldType\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v8 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"label\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v9 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"disabled\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v10 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"required\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v11 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"max\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v12 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"min\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v13 = [\n        (v7 /*: any*/),\n        (v8 /*: any*/),\n        (v9 /*: any*/),\n        (v10 /*: any*/)\n    ], v14 = [\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"enabled\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any)\n    ], v15 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"helperText\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v16 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"text\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v17 = [\n        (v7 /*: any*/),\n        (v15 /*: any*/),\n        (v8 /*: any*/),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"defaultValue\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        ({\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"options\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"ChoiceOptionsMetaType\",\n            \"plural\": true,\n            \"selections\": [\n                (v16 /*: any*/),\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"value\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        } as any),\n        (v10 /*: any*/)\n    ], v18 = [\n        (v1 /*: any*/)\n    ], v19 = [\n        (v7 /*: any*/),\n        (v15 /*: any*/),\n        (v8 /*: any*/),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"inputType\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        (v12 /*: any*/),\n        (v11 /*: any*/),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"maxLength\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"minLength\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        (v10 /*: any*/)\n    ], v20 = [\n        (v16 /*: any*/)\n    ], v21 = [\n        (v5 /*: any*/),\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"SwitchValueType\",\n            \"selections\": (v14 /*: any*/)\n        } as any),\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"TextValueType\",\n            \"selections\": (v20 /*: any*/)\n        } as any),\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"ChoiceValueType\",\n            \"selections\": (v18 /*: any*/)\n        } as any)\n    ], v22 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"parentValue\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": (v21 /*: any*/)\n    } as any), v23 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"ChoiceMetaType\",\n        \"selections\": (v17 /*: any*/)\n    } as any), v24 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"TextMetaType\",\n        \"selections\": (v19 /*: any*/)\n    } as any), v25 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"SwitchMetaType\",\n        \"selections\": (v13 /*: any*/)\n    } as any), v26 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownMeta\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            (v5 /*: any*/),\n            (v23 /*: any*/),\n            (v24 /*: any*/),\n            (v25 /*: any*/)\n        ]\n    } as any), v27 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownMeta\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            (v5 /*: any*/),\n            (v23 /*: any*/),\n            (v24 /*: any*/),\n            (v25 /*: any*/),\n            {\n                \"kind\": \"InlineFragment\",\n                \"type\": \"NestedMetaType\",\n                \"selections\": [\n                    (v22 /*: any*/),\n                    (v26 /*: any*/),\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"childrenMeta\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NestedMetaType\",\n                        \"plural\": true,\n                        \"selections\": [\n                            (v7 /*: any*/),\n                            (v22 /*: any*/),\n                            (v26 /*: any*/)\n                        ]\n                    }\n                ]\n            }\n        ]\n    } as any), v28 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownValue\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": (v21 /*: any*/)\n    } as any);\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"useTaskListQuery\",\n            \"type\": \"QueryType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"app\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"AppType\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"taskList\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"TaskListType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                {\n                                    \"kind\": \"FragmentSpread\",\n                                    \"name\": \"useTaskListPagination\",\n                                    \"args\": null\n                                }\n                            ]\n                        },\n                        (v3 /*: any*/)\n                    ]\n                }\n            ]\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"useTaskListQuery\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"app\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"AppType\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"taskList\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"TaskListType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                (v1 /*: any*/),\n                                {\n                                    \"kind\": \"LinkedField\",\n                                    \"alias\": null,\n                                    \"name\": \"list\",\n                                    \"storageKey\": null,\n                                    \"args\": (v4 /*: any*/),\n                                    \"concreteType\": \"TaskTypeConnection\",\n                                    \"plural\": false,\n                                    \"selections\": [\n                                        {\n                                            \"kind\": \"LinkedField\",\n                                            \"alias\": null,\n                                            \"name\": \"edges\",\n                                            \"storageKey\": null,\n                                            \"args\": null,\n                                            \"concreteType\": \"TaskTypeEdge\",\n                                            \"plural\": true,\n                                            \"selections\": [\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"cursor\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                },\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"node\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"TaskType\",\n                                                    \"plural\": false,\n                                                    \"selections\": [\n                                                        (v1 /*: any*/),\n                                                        (v2 /*: any*/),\n                                                        {\n                                                            \"kind\": \"LinkedField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"fields\",\n                                                            \"storageKey\": null,\n                                                            \"args\": null,\n                                                            \"concreteType\": null,\n                                                            \"plural\": true,\n                                                            \"selections\": [\n                                                                (v5 /*: any*/),\n                                                                (v1 /*: any*/),\n                                                                {\n                                                                    \"kind\": \"InlineFragment\",\n                                                                    \"type\": \"SliderFieldType\",\n                                                                    \"selections\": [\n                                                                        (v6 /*: any*/),\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"meta\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"SliderMetaType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": [\n                                                                                (v7 /*: any*/),\n                                                                                (v8 /*: any*/),\n                                                                                (v9 /*: any*/),\n                                                                                (v10 /*: any*/),\n                                                                                (v11 /*: any*/),\n                                                                                (v12 /*: any*/),\n                                                                                {\n                                                                                    \"kind\": \"ScalarField\",\n                                                                                    \"alias\": null,\n                                                                                    \"name\": \"step\",\n                                                                                    \"args\": null,\n                                                                                    \"storageKey\": null\n                                                                                }\n                                                                            ]\n                                                                        },\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"value\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"SliderValueType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": [\n                                                                                {\n                                                                                    \"kind\": \"ScalarField\",\n                                                                                    \"alias\": null,\n                                                                                    \"name\": \"progress\",\n                                                                                    \"args\": null,\n                                                                                    \"storageKey\": null\n                                                                                }\n                                                                            ]\n                                                                        }\n                                                                    ]\n                                                                },\n                                                                {\n                                                                    \"kind\": \"InlineFragment\",\n                                                                    \"type\": \"SwitchFieldType\",\n                                                                    \"selections\": [\n                                                                        (v6 /*: any*/),\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"meta\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"SwitchMetaType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": (v13 /*: any*/)\n                                                                        },\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"value\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"SwitchValueType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": (v14 /*: any*/)\n                                                                        }\n                                                                    ]\n                                                                },\n                                                                {\n                                                                    \"kind\": \"InlineFragment\",\n                                                                    \"type\": \"ChoiceFieldType\",\n                                                                    \"selections\": [\n                                                                        (v6 /*: any*/),\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"meta\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"ChoiceMetaType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": (v17 /*: any*/)\n                                                                        },\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"value\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"ChoiceValueType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": (v18 /*: any*/)\n                                                                        }\n                                                                    ]\n                                                                },\n                                                                {\n                                                                    \"kind\": \"InlineFragment\",\n                                                                    \"type\": \"TextFieldType\",\n                                                                    \"selections\": [\n                                                                        (v6 /*: any*/),\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"meta\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"TextMetaType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": (v19 /*: any*/)\n                                                                        },\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"value\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"TextValueType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": (v20 /*: any*/)\n                                                                        }\n                                                                    ]\n                                                                },\n                                                                {\n                                                                    \"kind\": \"InlineFragment\",\n                                                                    \"type\": \"NestedFieldType\",\n                                                                    \"selections\": [\n                                                                        (v6 /*: any*/),\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"meta\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"NestedMetaType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": [\n                                                                                (v7 /*: any*/),\n                                                                                (v22 /*: any*/),\n                                                                                (v26 /*: any*/),\n                                                                                {\n                                                                                    \"kind\": \"LinkedField\",\n                                                                                    \"alias\": null,\n                                                                                    \"name\": \"childrenMeta\",\n                                                                                    \"storageKey\": null,\n                                                                                    \"args\": null,\n                                                                                    \"concreteType\": \"NestedMetaType\",\n                                                                                    \"plural\": true,\n                                                                                    \"selections\": [\n                                                                                        (v7 /*: any*/),\n                                                                                        (v22 /*: any*/),\n                                                                                        (v27 /*: any*/),\n                                                                                        {\n                                                                                            \"kind\": \"LinkedField\",\n                                                                                            \"alias\": null,\n                                                                                            \"name\": \"childrenMeta\",\n                                                                                            \"storageKey\": null,\n                                                                                            \"args\": null,\n                                                                                            \"concreteType\": \"NestedMetaType\",\n                                                                                            \"plural\": true,\n                                                                                            \"selections\": [\n                                                                                                (v7 /*: any*/),\n                                                                                                (v22 /*: any*/),\n                                                                                                (v27 /*: any*/)\n                                                                                            ]\n                                                                                        }\n                                                                                    ]\n                                                                                }\n                                                                            ]\n                                                                        },\n                                                                        {\n                                                                            \"kind\": \"LinkedField\",\n                                                                            \"alias\": null,\n                                                                            \"name\": \"value\",\n                                                                            \"storageKey\": null,\n                                                                            \"args\": null,\n                                                                            \"concreteType\": \"NestedValueType\",\n                                                                            \"plural\": false,\n                                                                            \"selections\": [\n                                                                                (v28 /*: any*/),\n                                                                                {\n                                                                                    \"kind\": \"LinkedField\",\n                                                                                    \"alias\": null,\n                                                                                    \"name\": \"childrenValue\",\n                                                                                    \"storageKey\": null,\n                                                                                    \"args\": null,\n                                                                                    \"concreteType\": \"NestedValueType\",\n                                                                                    \"plural\": false,\n                                                                                    \"selections\": [\n                                                                                        (v28 /*: any*/),\n                                                                                        {\n                                                                                            \"kind\": \"LinkedField\",\n                                                                                            \"alias\": null,\n                                                                                            \"name\": \"childrenValue\",\n                                                                                            \"storageKey\": null,\n                                                                                            \"args\": null,\n                                                                                            \"concreteType\": \"NestedValueType\",\n                                                                                            \"plural\": false,\n                                                                                            \"selections\": [\n                                                                                                (v28 /*: any*/)\n                                                                                            ]\n                                                                                        }\n                                                                                    ]\n                                                                                }\n                                                                            ]\n                                                                        }\n                                                                    ]\n                                                                }\n                                                            ]\n                                                        },\n                                                        (v5 /*: any*/)\n                                                    ]\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"kind\": \"LinkedField\",\n                                            \"alias\": null,\n                                            \"name\": \"pageInfo\",\n                                            \"storageKey\": null,\n                                            \"args\": null,\n                                            \"concreteType\": \"PageInfo\",\n                                            \"plural\": false,\n                                            \"selections\": [\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"hasNextPage\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                },\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"endCursor\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                },\n                                {\n                                    \"kind\": \"LinkedHandle\",\n                                    \"alias\": null,\n                                    \"name\": \"list\",\n                                    \"args\": (v4 /*: any*/),\n                                    \"handle\": \"connection\",\n                                    \"key\": \"TaskList_list\",\n                                    \"filters\": null\n                                }\n                            ]\n                        },\n                        (v3 /*: any*/),\n                        (v1 /*: any*/)\n                    ]\n                }\n            ]\n        },\n        \"params\": {\n            \"operationKind\": \"query\",\n            \"name\": \"useTaskListQuery\",\n            \"id\": null,\n            \"text\": \"query useTaskListQuery(\\n  $count: Int!\\n  $after: String\\n) {\\n  app {\\n    taskList {\\n      ...useTaskListPagination\\n      id\\n    }\\n    settings {\\n      id\\n      taskList {\\n        filters {\\n          title\\n          taskType\\n          status\\n        }\\n      }\\n    }\\n    id\\n  }\\n}\\n\\nfragment useTaskListPagination on TaskListType {\\n  id\\n  list(first: $count, after: $after) {\\n    edges {\\n      cursor\\n      node {\\n        id\\n        ...useTaskListFragment\\n        __typename\\n      }\\n    }\\n    pageInfo {\\n      hasNextPage\\n      endCursor\\n    }\\n  }\\n}\\n\\nfragment useTaskListFragment on TaskType {\\n  id\\n  taskType\\n  fields {\\n    __typename\\n    ... on SliderFieldType {\\n      id\\n      fieldId\\n      meta {\\n        fieldType\\n        label\\n        disabled\\n        required\\n        max\\n        min\\n        step\\n      }\\n      value {\\n        progress\\n      }\\n    }\\n    ... on SwitchFieldType {\\n      id\\n      fieldId\\n      meta {\\n        fieldType\\n        label\\n        disabled\\n        required\\n      }\\n      value {\\n        enabled\\n      }\\n    }\\n    ... on ChoiceFieldType {\\n      id\\n      fieldId\\n      meta {\\n        fieldType\\n        helperText\\n        label\\n        defaultValue\\n        options {\\n          text\\n          value\\n        }\\n        required\\n      }\\n      value {\\n        id\\n      }\\n    }\\n    ... on TextFieldType {\\n      id\\n      fieldId\\n      meta {\\n        fieldType\\n        helperText\\n        label\\n        inputType\\n        min\\n        max\\n        maxLength\\n        minLength\\n        required\\n      }\\n      value {\\n        text\\n      }\\n    }\\n    ... on NestedFieldType {\\n      id\\n      fieldId\\n      meta {\\n        fieldType\\n        parentValue {\\n          __typename\\n          ... on SwitchValueType {\\n            enabled\\n          }\\n          ... on TextValueType {\\n            text\\n          }\\n          ... on ChoiceValueType {\\n            id\\n          }\\n        }\\n        ownMeta {\\n          __typename\\n          ... on ChoiceMetaType {\\n            fieldType\\n            helperText\\n            label\\n            defaultValue\\n            options {\\n              text\\n              value\\n            }\\n            required\\n          }\\n          ... on TextMetaType {\\n            fieldType\\n            helperText\\n            label\\n            inputType\\n            min\\n            max\\n            maxLength\\n            minLength\\n            required\\n          }\\n          ... on SwitchMetaType {\\n            fieldType\\n            label\\n            disabled\\n            required\\n          }\\n        }\\n        childrenMeta {\\n          fieldType\\n          parentValue {\\n            __typename\\n            ... on SwitchValueType {\\n              enabled\\n            }\\n            ... on TextValueType {\\n              text\\n            }\\n            ... on ChoiceValueType {\\n              id\\n            }\\n          }\\n          ownMeta {\\n            __typename\\n            ... on ChoiceMetaType {\\n              fieldType\\n              helperText\\n              label\\n              defaultValue\\n              options {\\n                text\\n                value\\n              }\\n              required\\n            }\\n            ... on TextMetaType {\\n              fieldType\\n              helperText\\n              label\\n              inputType\\n              min\\n              max\\n              maxLength\\n              minLength\\n              required\\n            }\\n            ... on SwitchMetaType {\\n              fieldType\\n              label\\n              disabled\\n              required\\n            }\\n            ... on NestedMetaType {\\n              parentValue {\\n                __typename\\n                ... on SwitchValueType {\\n                  enabled\\n                }\\n                ... on TextValueType {\\n                  text\\n                }\\n                ... on ChoiceValueType {\\n                  id\\n                }\\n              }\\n              ownMeta {\\n                __typename\\n                ... on ChoiceMetaType {\\n                  fieldType\\n                  helperText\\n                  label\\n                  defaultValue\\n                  options {\\n                    text\\n                    value\\n                  }\\n                  required\\n                }\\n                ... on TextMetaType {\\n                  fieldType\\n                  helperText\\n                  label\\n                  inputType\\n                  min\\n                  max\\n                  maxLength\\n                  minLength\\n                  required\\n                }\\n                ... on SwitchMetaType {\\n                  fieldType\\n                  label\\n                  disabled\\n                  required\\n                }\\n              }\\n              childrenMeta {\\n                fieldType\\n                parentValue {\\n                  __typename\\n                  ... on SwitchValueType {\\n                    enabled\\n                  }\\n                  ... on TextValueType {\\n                    text\\n                  }\\n                  ... on ChoiceValueType {\\n                    id\\n                  }\\n                }\\n                ownMeta {\\n                  __typename\\n                  ... on ChoiceMetaType {\\n                    fieldType\\n                    helperText\\n                    label\\n                    defaultValue\\n                    options {\\n                      text\\n                      value\\n                    }\\n                    required\\n                  }\\n                  ... on TextMetaType {\\n                    fieldType\\n                    helperText\\n                    label\\n                    inputType\\n                    min\\n                    max\\n                    maxLength\\n                    minLength\\n                    required\\n                  }\\n                  ... on SwitchMetaType {\\n                    fieldType\\n                    label\\n                    disabled\\n                    required\\n                  }\\n                }\\n              }\\n            }\\n          }\\n          childrenMeta {\\n            fieldType\\n            parentValue {\\n              __typename\\n              ... on SwitchValueType {\\n                enabled\\n              }\\n              ... on TextValueType {\\n                text\\n              }\\n              ... on ChoiceValueType {\\n                id\\n              }\\n            }\\n            ownMeta {\\n              __typename\\n              ... on ChoiceMetaType {\\n                fieldType\\n                helperText\\n                label\\n                defaultValue\\n                options {\\n                  text\\n                  value\\n                }\\n                required\\n              }\\n              ... on TextMetaType {\\n                fieldType\\n                helperText\\n                label\\n                inputType\\n                min\\n                max\\n                maxLength\\n                minLength\\n                required\\n              }\\n              ... on SwitchMetaType {\\n                fieldType\\n                label\\n                disabled\\n                required\\n              }\\n              ... on NestedMetaType {\\n                parentValue {\\n                  __typename\\n                  ... on SwitchValueType {\\n                    enabled\\n                  }\\n                  ... on TextValueType {\\n                    text\\n                  }\\n                  ... on ChoiceValueType {\\n                    id\\n                  }\\n                }\\n                ownMeta {\\n                  __typename\\n                  ... on ChoiceMetaType {\\n                    fieldType\\n                    helperText\\n                    label\\n                    defaultValue\\n                    options {\\n                      text\\n                      value\\n                    }\\n                    required\\n                  }\\n                  ... on TextMetaType {\\n                    fieldType\\n                    helperText\\n                    label\\n                    inputType\\n                    min\\n                    max\\n                    maxLength\\n                    minLength\\n                    required\\n                  }\\n                  ... on SwitchMetaType {\\n                    fieldType\\n                    label\\n                    disabled\\n                    required\\n                  }\\n                }\\n                childrenMeta {\\n                  fieldType\\n                  parentValue {\\n                    __typename\\n                    ... on SwitchValueType {\\n                      enabled\\n                    }\\n                    ... on TextValueType {\\n                      text\\n                    }\\n                    ... on ChoiceValueType {\\n                      id\\n                    }\\n                  }\\n                  ownMeta {\\n                    __typename\\n                    ... on ChoiceMetaType {\\n                      fieldType\\n                      helperText\\n                      label\\n                      defaultValue\\n                      options {\\n                        text\\n                        value\\n                      }\\n                      required\\n                    }\\n                    ... on TextMetaType {\\n                      fieldType\\n                      helperText\\n                      label\\n                      inputType\\n                      min\\n                      max\\n                      maxLength\\n                      minLength\\n                      required\\n                    }\\n                    ... on SwitchMetaType {\\n                      fieldType\\n                      label\\n                      disabled\\n                      required\\n                    }\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n      value {\\n        ownValue {\\n          __typename\\n          ... on SwitchValueType {\\n            enabled\\n          }\\n          ... on TextValueType {\\n            text\\n          }\\n          ... on ChoiceValueType {\\n            id\\n          }\\n        }\\n        childrenValue {\\n          ownValue {\\n            __typename\\n            ... on SwitchValueType {\\n              enabled\\n            }\\n            ... on TextValueType {\\n              text\\n            }\\n            ... on ChoiceValueType {\\n              id\\n            }\\n          }\\n          childrenValue {\\n            ownValue {\\n              __typename\\n              ... on SwitchValueType {\\n                enabled\\n              }\\n              ... on TextValueType {\\n                text\\n              }\\n              ... on ChoiceValueType {\\n                id\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n    ... on Node {\\n      id\\n    }\\n  }\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = 'c75080ba1ba638b99a92c5dc42811a84';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type TaskTypeEnum = \"EVENT\" | \"GOAL\" | \"MEETING\" | \"ROUTINE\" | \"TODO\" | \"%future added value\";\nexport type useTaskTypeFragment$ref = any;\nexport type useTaskTypeFragment = {\n    readonly id: string;\n    readonly typeId: TaskTypeEnum;\n    readonly label: string;\n    readonly description: string;\n    readonly \" $refType\": useTaskTypeFragment$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"useTaskTypeFragment\",\n    \"type\": \"TaskTypeType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"id\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"typeId\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"label\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"description\",\n            \"args\": null,\n            \"storageKey\": null\n        }\n    ]\n} as any);\n(node as any).hash = '406265357a2eb26cbdac9e1009cfbcb9';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\ntype useTaskTypeFragment$ref = any;\nexport type useTaskTypePagination$ref = any;\nexport type useTaskTypePagination = {\n    readonly id: string;\n    readonly list: {\n        readonly edges: ReadonlyArray<{\n            readonly node: {\n                readonly id: string;\n                readonly order: number;\n                readonly \" $fragmentRefs\": useTaskTypeFragment$ref;\n            } | null;\n        } | null> | null;\n    };\n    readonly \" $refType\": useTaskTypePagination$ref;\n};\n\n\n\nconst node: ReaderFragment = (function () {\n    var v0 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any);\n    return {\n        \"kind\": \"Fragment\",\n        \"name\": \"useTaskTypePagination\",\n        \"type\": \"TaskTypeListType\",\n        \"metadata\": {\n            \"connection\": [\n                {\n                    \"count\": \"count\",\n                    \"cursor\": \"after\",\n                    \"direction\": \"forward\",\n                    \"path\": [\n                        \"list\"\n                    ]\n                }\n            ]\n        },\n        \"argumentDefinitions\": [\n            {\n                \"kind\": \"RootArgument\",\n                \"name\": \"count\",\n                \"type\": \"Int\"\n            },\n            {\n                \"kind\": \"RootArgument\",\n                \"name\": \"after\",\n                \"type\": \"String\"\n            }\n        ],\n        \"selections\": [\n            (v0 /*: any*/),\n            {\n                \"kind\": \"LinkedField\",\n                \"alias\": \"list\",\n                \"name\": \"__TaskTypeList_list_connection\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"TaskTypeTypeConnection\",\n                \"plural\": false,\n                \"selections\": [\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"edges\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"TaskTypeTypeEdge\",\n                        \"plural\": true,\n                        \"selections\": [\n                            {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"node\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"TaskTypeType\",\n                                \"plural\": false,\n                                \"selections\": [\n                                    (v0 /*: any*/),\n                                    {\n                                        \"kind\": \"ScalarField\",\n                                        \"alias\": null,\n                                        \"name\": \"order\",\n                                        \"args\": null,\n                                        \"storageKey\": null\n                                    },\n                                    {\n                                        \"kind\": \"ScalarField\",\n                                        \"alias\": null,\n                                        \"name\": \"__typename\",\n                                        \"args\": null,\n                                        \"storageKey\": null\n                                    },\n                                    {\n                                        \"kind\": \"FragmentSpread\",\n                                        \"name\": \"useTaskTypeFragment\",\n                                        \"args\": null\n                                    }\n                                ]\n                            },\n                            {\n                                \"kind\": \"ScalarField\",\n                                \"alias\": null,\n                                \"name\": \"cursor\",\n                                \"args\": null,\n                                \"storageKey\": null\n                            }\n                        ]\n                    },\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"pageInfo\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"PageInfo\",\n                        \"plural\": false,\n                        \"selections\": [\n                            {\n                                \"kind\": \"ScalarField\",\n                                \"alias\": null,\n                                \"name\": \"endCursor\",\n                                \"args\": null,\n                                \"storageKey\": null\n                            },\n                            {\n                                \"kind\": \"ScalarField\",\n                                \"alias\": null,\n                                \"name\": \"hasNextPage\",\n                                \"args\": null,\n                                \"storageKey\": null\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    } as any;\n})();\n(node as any).hash = '7977ccbcaf8d2efc13fd6eb6f6d90ce5';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\ntype useTaskTypePagination$ref = any;\nexport type useTaskTypeListQueryVariables = {\n    readonly count: number;\n    readonly after?: string | null;\n};\nexport type useTaskTypeListQueryResponse = {\n    readonly app: {\n        readonly taskTypeList: {\n            readonly \" $fragmentRefs\": useTaskTypePagination$ref;\n        };\n    };\n};\nexport type useTaskTypeListQuery = {\n    readonly response: useTaskTypeListQueryResponse;\n    readonly variables: useTaskTypeListQueryVariables;\n};\n\n\n\n/*\nquery useTaskTypeListQuery(\n  $count: Int!\n  $after: String\n) {\n  app {\n    taskTypeList {\n      ...useTaskTypePagination\n      id\n    }\n    id\n  }\n}\n\nfragment useTaskTypePagination on TaskTypeListType {\n  id\n  list(first: $count, after: $after) {\n    edges {\n      node {\n        id\n        order\n        ...useTaskTypeFragment\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment useTaskTypeFragment on TaskTypeType {\n  id\n  typeId\n  label\n  description\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"count\",\n            \"type\": \"Int!\",\n            \"defaultValue\": null\n        } as any),\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"after\",\n            \"type\": \"String\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v2 = [\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"after\",\n            \"variableName\": \"after\"\n        } as any),\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"first\",\n            \"variableName\": \"count\"\n        } as any)\n    ];\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"useTaskTypeListQuery\",\n            \"type\": \"QueryType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"app\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"AppType\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"taskTypeList\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"TaskTypeListType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                {\n                                    \"kind\": \"FragmentSpread\",\n                                    \"name\": \"useTaskTypePagination\",\n                                    \"args\": null\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"useTaskTypeListQuery\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"app\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"AppType\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"taskTypeList\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"TaskTypeListType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                (v1 /*: any*/),\n                                {\n                                    \"kind\": \"LinkedField\",\n                                    \"alias\": null,\n                                    \"name\": \"list\",\n                                    \"storageKey\": null,\n                                    \"args\": (v2 /*: any*/),\n                                    \"concreteType\": \"TaskTypeTypeConnection\",\n                                    \"plural\": false,\n                                    \"selections\": [\n                                        {\n                                            \"kind\": \"LinkedField\",\n                                            \"alias\": null,\n                                            \"name\": \"edges\",\n                                            \"storageKey\": null,\n                                            \"args\": null,\n                                            \"concreteType\": \"TaskTypeTypeEdge\",\n                                            \"plural\": true,\n                                            \"selections\": [\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"node\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"TaskTypeType\",\n                                                    \"plural\": false,\n                                                    \"selections\": [\n                                                        (v1 /*: any*/),\n                                                        {\n                                                            \"kind\": \"ScalarField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"order\",\n                                                            \"args\": null,\n                                                            \"storageKey\": null\n                                                        },\n                                                        {\n                                                            \"kind\": \"ScalarField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"typeId\",\n                                                            \"args\": null,\n                                                            \"storageKey\": null\n                                                        },\n                                                        {\n                                                            \"kind\": \"ScalarField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"label\",\n                                                            \"args\": null,\n                                                            \"storageKey\": null\n                                                        },\n                                                        {\n                                                            \"kind\": \"ScalarField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"description\",\n                                                            \"args\": null,\n                                                            \"storageKey\": null\n                                                        },\n                                                        {\n                                                            \"kind\": \"ScalarField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"__typename\",\n                                                            \"args\": null,\n                                                            \"storageKey\": null\n                                                        }\n                                                    ]\n                                                },\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"cursor\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"kind\": \"LinkedField\",\n                                            \"alias\": null,\n                                            \"name\": \"pageInfo\",\n                                            \"storageKey\": null,\n                                            \"args\": null,\n                                            \"concreteType\": \"PageInfo\",\n                                            \"plural\": false,\n                                            \"selections\": [\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"endCursor\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                },\n                                                {\n                                                    \"kind\": \"ScalarField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"hasNextPage\",\n                                                    \"args\": null,\n                                                    \"storageKey\": null\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                },\n                                {\n                                    \"kind\": \"LinkedHandle\",\n                                    \"alias\": null,\n                                    \"name\": \"list\",\n                                    \"args\": (v2 /*: any*/),\n                                    \"handle\": \"connection\",\n                                    \"key\": \"TaskTypeList_list\",\n                                    \"filters\": null\n                                }\n                            ]\n                        },\n                        (v1 /*: any*/)\n                    ]\n                }\n            ]\n        },\n        \"params\": {\n            \"operationKind\": \"query\",\n            \"name\": \"useTaskTypeListQuery\",\n            \"id\": null,\n            \"text\": \"query useTaskTypeListQuery(\\n  $count: Int!\\n  $after: String\\n) {\\n  app {\\n    taskTypeList {\\n      ...useTaskTypePagination\\n      id\\n    }\\n    id\\n  }\\n}\\n\\nfragment useTaskTypePagination on TaskTypeListType {\\n  id\\n  list(first: $count, after: $after) {\\n    edges {\\n      node {\\n        id\\n        order\\n        ...useTaskTypeFragment\\n        __typename\\n      }\\n      cursor\\n    }\\n    pageInfo {\\n      endCursor\\n      hasNextPage\\n    }\\n  }\\n}\\n\\nfragment useTaskTypeFragment on TaskTypeType {\\n  id\\n  typeId\\n  label\\n  description\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = '0d29f34540f758214c365d80a8ec90e2';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type FieldIdEnum = \"ACTION\" | \"ACTIVE\" | \"CYCLE\" | \"DATE\" | \"DATE_TIME\" | \"DURATION\" | \"LOCATION\" | \"NOTE\" | \"NOTIFICATIONS\" | \"PERSON\" | \"PRIORITY\" | \"PROGRESS\" | \"STATUS\" | \"TITLE\" | \"%future added value\";\nexport type updateTaskFieldMutationInput = {\n    readonly taskId: string;\n    readonly fieldId: FieldIdEnum;\n    readonly value: ValueInputType;\n    readonly clientMutationId?: string | null;\n};\nexport type ValueInputType = {\n    readonly enabled?: boolean | null;\n    readonly id?: string | null;\n    readonly text?: string | null;\n    readonly progress?: number | null;\n    readonly ownValue?: ValueInputType | null;\n    readonly childrenValue?: NestedValueInputType | null;\n};\nexport type NestedValueInputType = {\n    readonly ownValue?: ValueInputType | null;\n    readonly childrenValue?: NestedValueInputType | null;\n};\nexport type updateTaskFieldMutationVariables = {\n    readonly input: updateTaskFieldMutationInput;\n};\nexport type updateTaskFieldMutationResponse = {\n    readonly updateTaskField: {\n        readonly fieldId: FieldIdEnum;\n        readonly taskId: string;\n        readonly updatedValue: {\n            readonly id?: string;\n            readonly ownValue?: {\n                readonly enabled?: boolean;\n                readonly text?: string;\n                readonly id?: string;\n            } | null;\n            readonly childrenValue?: {\n                readonly ownValue: {\n                    readonly enabled?: boolean;\n                    readonly text?: string;\n                    readonly id?: string;\n                } | null;\n                readonly childrenValue: {\n                    readonly ownValue: {\n                        readonly enabled?: boolean;\n                        readonly text?: string;\n                        readonly id?: string;\n                    } | null;\n                } | null;\n            } | null;\n            readonly enabled?: boolean;\n            readonly progress?: number;\n            readonly text?: string;\n        };\n    } | null;\n};\nexport type updateTaskFieldMutation = {\n    readonly response: updateTaskFieldMutationResponse;\n    readonly variables: updateTaskFieldMutationVariables;\n};\n\n\n\n/*\nmutation updateTaskFieldMutation(\n  $input: updateTaskFieldMutationInput!\n) {\n  updateTaskField(input: $input) {\n    fieldId\n    taskId\n    updatedValue {\n      __typename\n      ... on ChoiceValueType {\n        id\n      }\n      ... on NestedValueType {\n        ownValue {\n          __typename\n          ... on SwitchValueType {\n            enabled\n          }\n          ... on TextValueType {\n            text\n          }\n          ... on ChoiceValueType {\n            id\n          }\n        }\n        childrenValue {\n          ownValue {\n            __typename\n            ... on SwitchValueType {\n              enabled\n            }\n            ... on TextValueType {\n              text\n            }\n            ... on ChoiceValueType {\n              id\n            }\n          }\n          childrenValue {\n            ownValue {\n              __typename\n              ... on SwitchValueType {\n                enabled\n              }\n              ... on TextValueType {\n                text\n              }\n              ... on ChoiceValueType {\n                id\n              }\n            }\n          }\n        }\n      }\n      ... on SwitchValueType {\n        enabled\n      }\n      ... on SliderValueType {\n        progress\n      }\n      ... on TextValueType {\n        text\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"input\",\n            \"type\": \"updateTaskFieldMutationInput!\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = [\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"input\",\n            \"variableName\": \"input\"\n        } as any)\n    ], v2 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"fieldId\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v3 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"taskId\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v4 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"ChoiceValueType\",\n        \"selections\": [\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"id\",\n                \"args\": null,\n                \"storageKey\": null\n            }\n        ]\n    } as any), v5 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"SwitchValueType\",\n        \"selections\": [\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"enabled\",\n                \"args\": null,\n                \"storageKey\": null\n            }\n        ]\n    } as any), v6 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"TextValueType\",\n        \"selections\": [\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"text\",\n                \"args\": null,\n                \"storageKey\": null\n            }\n        ]\n    } as any), v7 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownValue\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            (v5 /*: any*/),\n            (v6 /*: any*/),\n            (v4 /*: any*/)\n        ]\n    } as any), v8 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"SliderValueType\",\n        \"selections\": [\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"progress\",\n                \"args\": null,\n                \"storageKey\": null\n            }\n        ]\n    } as any), v9 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"__typename\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v10 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownValue\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            (v9 /*: any*/),\n            (v5 /*: any*/),\n            (v6 /*: any*/),\n            (v4 /*: any*/)\n        ]\n    } as any);\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"updateTaskFieldMutation\",\n            \"type\": \"MutationType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"updateTaskField\",\n                    \"storageKey\": null,\n                    \"args\": (v1 /*: any*/),\n                    \"concreteType\": \"updateTaskFieldMutationPayload\",\n                    \"plural\": false,\n                    \"selections\": [\n                        (v2 /*: any*/),\n                        (v3 /*: any*/),\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"updatedValue\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": null,\n                            \"plural\": false,\n                            \"selections\": [\n                                (v4 /*: any*/),\n                                {\n                                    \"kind\": \"InlineFragment\",\n                                    \"type\": \"NestedValueType\",\n                                    \"selections\": [\n                                        (v7 /*: any*/),\n                                        {\n                                            \"kind\": \"LinkedField\",\n                                            \"alias\": null,\n                                            \"name\": \"childrenValue\",\n                                            \"storageKey\": null,\n                                            \"args\": null,\n                                            \"concreteType\": \"NestedValueType\",\n                                            \"plural\": false,\n                                            \"selections\": [\n                                                (v7 /*: any*/),\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"childrenValue\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"NestedValueType\",\n                                                    \"plural\": false,\n                                                    \"selections\": [\n                                                        (v7 /*: any*/)\n                                                    ]\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                },\n                                (v5 /*: any*/),\n                                (v8 /*: any*/),\n                                (v6 /*: any*/)\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"updateTaskFieldMutation\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"updateTaskField\",\n                    \"storageKey\": null,\n                    \"args\": (v1 /*: any*/),\n                    \"concreteType\": \"updateTaskFieldMutationPayload\",\n                    \"plural\": false,\n                    \"selections\": [\n                        (v2 /*: any*/),\n                        (v3 /*: any*/),\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"updatedValue\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": null,\n                            \"plural\": false,\n                            \"selections\": [\n                                (v9 /*: any*/),\n                                (v4 /*: any*/),\n                                {\n                                    \"kind\": \"InlineFragment\",\n                                    \"type\": \"NestedValueType\",\n                                    \"selections\": [\n                                        (v10 /*: any*/),\n                                        {\n                                            \"kind\": \"LinkedField\",\n                                            \"alias\": null,\n                                            \"name\": \"childrenValue\",\n                                            \"storageKey\": null,\n                                            \"args\": null,\n                                            \"concreteType\": \"NestedValueType\",\n                                            \"plural\": false,\n                                            \"selections\": [\n                                                (v10 /*: any*/),\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"childrenValue\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"NestedValueType\",\n                                                    \"plural\": false,\n                                                    \"selections\": [\n                                                        (v10 /*: any*/)\n                                                    ]\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                },\n                                (v5 /*: any*/),\n                                (v8 /*: any*/),\n                                (v6 /*: any*/)\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        \"params\": {\n            \"operationKind\": \"mutation\",\n            \"name\": \"updateTaskFieldMutation\",\n            \"id\": null,\n            \"text\": \"mutation updateTaskFieldMutation(\\n  $input: updateTaskFieldMutationInput!\\n) {\\n  updateTaskField(input: $input) {\\n    fieldId\\n    taskId\\n    updatedValue {\\n      __typename\\n      ... on ChoiceValueType {\\n        id\\n      }\\n      ... on NestedValueType {\\n        ownValue {\\n          __typename\\n          ... on SwitchValueType {\\n            enabled\\n          }\\n          ... on TextValueType {\\n            text\\n          }\\n          ... on ChoiceValueType {\\n            id\\n          }\\n        }\\n        childrenValue {\\n          ownValue {\\n            __typename\\n            ... on SwitchValueType {\\n              enabled\\n            }\\n            ... on TextValueType {\\n              text\\n            }\\n            ... on ChoiceValueType {\\n              id\\n            }\\n          }\\n          childrenValue {\\n            ownValue {\\n              __typename\\n              ... on SwitchValueType {\\n                enabled\\n              }\\n              ... on TextValueType {\\n                text\\n              }\\n              ... on ChoiceValueType {\\n                id\\n              }\\n            }\\n          }\\n        }\\n      }\\n      ... on SwitchValueType {\\n        enabled\\n      }\\n      ... on SliderValueType {\\n        progress\\n      }\\n      ... on TextValueType {\\n        text\\n      }\\n    }\\n  }\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = '17ae42212d680ce1965021030a774083';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type FieldTypeEnum = \"CHOICE\" | \"NESTED\" | \"SLIDER\" | \"SWITCH\" | \"TEXT\" | \"%future added value\";\nexport type ChoiceFieldFragmentMeta$ref = any;\nexport type ChoiceFieldFragmentMeta = {\n    readonly fieldType: FieldTypeEnum;\n    readonly helperText: string;\n    readonly label: string;\n    readonly defaultValue: string | null;\n    readonly options: ReadonlyArray<{\n        readonly text: string;\n        readonly value: string;\n    } | null>;\n    readonly required: boolean;\n    readonly \" $refType\": ChoiceFieldFragmentMeta$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"ChoiceFieldFragmentMeta\",\n    \"type\": \"ChoiceMetaType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"fieldType\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"helperText\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"label\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"defaultValue\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"options\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"ChoiceOptionsMetaType\",\n            \"plural\": true,\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"text\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"value\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"required\",\n            \"args\": null,\n            \"storageKey\": null\n        }\n    ]\n} as any);\n(node as any).hash = '67aefad39d8993dd090362047881e34b';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type ChoiceFieldFragmentValue$ref = any;\nexport type ChoiceFieldFragmentValue = {\n    readonly id: string;\n    readonly \" $refType\": ChoiceFieldFragmentValue$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"ChoiceFieldFragmentValue\",\n    \"type\": \"ChoiceValueType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"id\",\n            \"args\": null,\n            \"storageKey\": null\n        }\n    ]\n} as any);\n(node as any).hash = '3d615c0ba97941ad82833ff5ccf4f3f8';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type FieldIdEnum = \"ACTION\" | \"ACTIVE\" | \"CYCLE\" | \"DATE\" | \"DATE_TIME\" | \"DURATION\" | \"LOCATION\" | \"NOTE\" | \"NOTIFICATIONS\" | \"PERSON\" | \"PRIORITY\" | \"PROGRESS\" | \"STATUS\" | \"TITLE\" | \"%future added value\";\nexport type FieldTypeEnum = \"CHOICE\" | \"NESTED\" | \"SLIDER\" | \"SWITCH\" | \"TEXT\" | \"%future added value\";\nexport type ChoiceFieldFragment_data$ref = any;\nexport type ChoiceFieldFragment_data = {\n    readonly id: string;\n    readonly fieldId: FieldIdEnum;\n    readonly meta: {\n        readonly fieldType: FieldTypeEnum;\n        readonly helperText: string;\n        readonly label: string;\n        readonly defaultValue: string | null;\n        readonly options: ReadonlyArray<{\n            readonly text: string;\n            readonly value: string;\n        } | null>;\n        readonly required: boolean;\n    };\n    readonly value: {\n        readonly id: string;\n    };\n    readonly \" $refType\": ChoiceFieldFragment_data$ref;\n};\n\n\n\nconst node: ReaderFragment = (function () {\n    var v0 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any);\n    return {\n        \"kind\": \"Fragment\",\n        \"name\": \"ChoiceFieldFragment_data\",\n        \"type\": \"ChoiceFieldType\",\n        \"metadata\": null,\n        \"argumentDefinitions\": [],\n        \"selections\": [\n            (v0 /*: any*/),\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"fieldId\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"meta\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"ChoiceMetaType\",\n                \"plural\": false,\n                \"selections\": [\n                    {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"fieldType\",\n                        \"args\": null,\n                        \"storageKey\": null\n                    },\n                    {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"helperText\",\n                        \"args\": null,\n                        \"storageKey\": null\n                    },\n                    {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"label\",\n                        \"args\": null,\n                        \"storageKey\": null\n                    },\n                    {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"defaultValue\",\n                        \"args\": null,\n                        \"storageKey\": null\n                    },\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"options\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"ChoiceOptionsMetaType\",\n                        \"plural\": true,\n                        \"selections\": [\n                            {\n                                \"kind\": \"ScalarField\",\n                                \"alias\": null,\n                                \"name\": \"text\",\n                                \"args\": null,\n                                \"storageKey\": null\n                            },\n                            {\n                                \"kind\": \"ScalarField\",\n                                \"alias\": null,\n                                \"name\": \"value\",\n                                \"args\": null,\n                                \"storageKey\": null\n                            }\n                        ]\n                    },\n                    {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"required\",\n                        \"args\": null,\n                        \"storageKey\": null\n                    }\n                ]\n            },\n            {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"value\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"ChoiceValueType\",\n                \"plural\": false,\n                \"selections\": [\n                    (v0 /*: any*/)\n                ]\n            }\n        ]\n    } as any;\n})();\n(node as any).hash = 'bbb82ec78dbedbac965f0d7a91b74151';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type FieldTypeEnum = \"CHOICE\" | \"NESTED\" | \"SLIDER\" | \"SWITCH\" | \"TEXT\" | \"%future added value\";\nexport type NestedFieldFragmentMeta$ref = any;\nexport type NestedFieldFragmentMeta = {\n    readonly fieldType: FieldTypeEnum;\n    readonly parentValue: {\n        readonly enabled?: boolean;\n        readonly text?: string;\n        readonly id?: string;\n    } | null;\n    readonly ownMeta: {\n        readonly fieldType?: FieldTypeEnum;\n        readonly helperText?: string;\n        readonly label?: string;\n        readonly defaultValue?: string | null;\n        readonly options?: ReadonlyArray<{\n            readonly text: string;\n            readonly value: string;\n        } | null>;\n        readonly required?: boolean;\n        readonly inputType?: string | null;\n        readonly min?: number | null;\n        readonly max?: number | null;\n        readonly maxLength?: number | null;\n        readonly minLength?: number | null;\n        readonly disabled?: boolean | null;\n    } | null;\n    readonly childrenMeta: ReadonlyArray<{\n        readonly fieldType: FieldTypeEnum;\n        readonly parentValue: {\n            readonly enabled?: boolean;\n            readonly text?: string;\n            readonly id?: string;\n        } | null;\n        readonly ownMeta: {\n            readonly fieldType?: FieldTypeEnum;\n            readonly helperText?: string;\n            readonly label?: string;\n            readonly defaultValue?: string | null;\n            readonly options?: ReadonlyArray<{\n                readonly text: string;\n                readonly value: string;\n            } | null>;\n            readonly required?: boolean;\n            readonly inputType?: string | null;\n            readonly min?: number | null;\n            readonly max?: number | null;\n            readonly maxLength?: number | null;\n            readonly minLength?: number | null;\n            readonly disabled?: boolean | null;\n            readonly parentValue?: {\n                readonly enabled?: boolean;\n                readonly text?: string;\n                readonly id?: string;\n            } | null;\n            readonly ownMeta?: {\n                readonly fieldType?: FieldTypeEnum;\n                readonly helperText?: string;\n                readonly label?: string;\n                readonly defaultValue?: string | null;\n                readonly options?: ReadonlyArray<{\n                    readonly text: string;\n                    readonly value: string;\n                } | null>;\n                readonly required?: boolean;\n                readonly inputType?: string | null;\n                readonly min?: number | null;\n                readonly max?: number | null;\n                readonly maxLength?: number | null;\n                readonly minLength?: number | null;\n                readonly disabled?: boolean | null;\n            } | null;\n            readonly childrenMeta?: ReadonlyArray<{\n                readonly fieldType: FieldTypeEnum;\n                readonly parentValue: {\n                    readonly enabled?: boolean;\n                    readonly text?: string;\n                    readonly id?: string;\n                } | null;\n                readonly ownMeta: {\n                    readonly fieldType?: FieldTypeEnum;\n                    readonly helperText?: string;\n                    readonly label?: string;\n                    readonly defaultValue?: string | null;\n                    readonly options?: ReadonlyArray<{\n                        readonly text: string;\n                        readonly value: string;\n                    } | null>;\n                    readonly required?: boolean;\n                    readonly inputType?: string | null;\n                    readonly min?: number | null;\n                    readonly max?: number | null;\n                    readonly maxLength?: number | null;\n                    readonly minLength?: number | null;\n                    readonly disabled?: boolean | null;\n                } | null;\n            } | null> | null;\n        } | null;\n        readonly childrenMeta: ReadonlyArray<{\n            readonly fieldType: FieldTypeEnum;\n            readonly parentValue: {\n                readonly enabled?: boolean;\n                readonly text?: string;\n                readonly id?: string;\n            } | null;\n            readonly ownMeta: {\n                readonly fieldType?: FieldTypeEnum;\n                readonly helperText?: string;\n                readonly label?: string;\n                readonly defaultValue?: string | null;\n                readonly options?: ReadonlyArray<{\n                    readonly text: string;\n                    readonly value: string;\n                } | null>;\n                readonly required?: boolean;\n                readonly inputType?: string | null;\n                readonly min?: number | null;\n                readonly max?: number | null;\n                readonly maxLength?: number | null;\n                readonly minLength?: number | null;\n                readonly disabled?: boolean | null;\n                readonly parentValue?: {\n                    readonly enabled?: boolean;\n                    readonly text?: string;\n                    readonly id?: string;\n                } | null;\n                readonly ownMeta?: {\n                    readonly fieldType?: FieldTypeEnum;\n                    readonly helperText?: string;\n                    readonly label?: string;\n                    readonly defaultValue?: string | null;\n                    readonly options?: ReadonlyArray<{\n                        readonly text: string;\n                        readonly value: string;\n                    } | null>;\n                    readonly required?: boolean;\n                    readonly inputType?: string | null;\n                    readonly min?: number | null;\n                    readonly max?: number | null;\n                    readonly maxLength?: number | null;\n                    readonly minLength?: number | null;\n                    readonly disabled?: boolean | null;\n                } | null;\n                readonly childrenMeta?: ReadonlyArray<{\n                    readonly fieldType: FieldTypeEnum;\n                    readonly parentValue: {\n                        readonly enabled?: boolean;\n                        readonly text?: string;\n                        readonly id?: string;\n                    } | null;\n                    readonly ownMeta: {\n                        readonly fieldType?: FieldTypeEnum;\n                        readonly helperText?: string;\n                        readonly label?: string;\n                        readonly defaultValue?: string | null;\n                        readonly options?: ReadonlyArray<{\n                            readonly text: string;\n                            readonly value: string;\n                        } | null>;\n                        readonly required?: boolean;\n                        readonly inputType?: string | null;\n                        readonly min?: number | null;\n                        readonly max?: number | null;\n                        readonly maxLength?: number | null;\n                        readonly minLength?: number | null;\n                        readonly disabled?: boolean | null;\n                    } | null;\n                } | null> | null;\n            } | null;\n        } | null> | null;\n    } | null> | null;\n    readonly \" $refType\": NestedFieldFragmentMeta$ref;\n};\n\n\n\nconst node: ReaderFragment = (function () {\n    var v0 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"fieldType\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v1 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"text\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v2 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"parentValue\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            {\n                \"kind\": \"InlineFragment\",\n                \"type\": \"SwitchValueType\",\n                \"selections\": [\n                    {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"enabled\",\n                        \"args\": null,\n                        \"storageKey\": null\n                    }\n                ]\n            },\n            {\n                \"kind\": \"InlineFragment\",\n                \"type\": \"TextValueType\",\n                \"selections\": [\n                    (v1 /*: any*/)\n                ]\n            },\n            {\n                \"kind\": \"InlineFragment\",\n                \"type\": \"ChoiceValueType\",\n                \"selections\": [\n                    {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"id\",\n                        \"args\": null,\n                        \"storageKey\": null\n                    }\n                ]\n            }\n        ]\n    } as any), v3 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"helperText\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v4 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"label\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v5 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"required\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v6 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"ChoiceMetaType\",\n        \"selections\": [\n            (v0 /*: any*/),\n            (v3 /*: any*/),\n            (v4 /*: any*/),\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"defaultValue\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"options\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"ChoiceOptionsMetaType\",\n                \"plural\": true,\n                \"selections\": [\n                    (v1 /*: any*/),\n                    {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"value\",\n                        \"args\": null,\n                        \"storageKey\": null\n                    }\n                ]\n            },\n            (v5 /*: any*/)\n        ]\n    } as any), v7 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"TextMetaType\",\n        \"selections\": [\n            (v0 /*: any*/),\n            (v3 /*: any*/),\n            (v4 /*: any*/),\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"inputType\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"min\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"max\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"maxLength\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"minLength\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            (v5 /*: any*/)\n        ]\n    } as any), v8 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"SwitchMetaType\",\n        \"selections\": [\n            (v0 /*: any*/),\n            (v4 /*: any*/),\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"disabled\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            (v5 /*: any*/)\n        ]\n    } as any), v9 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownMeta\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            (v6 /*: any*/),\n            (v7 /*: any*/),\n            (v8 /*: any*/)\n        ]\n    } as any), v10 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownMeta\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            (v6 /*: any*/),\n            (v7 /*: any*/),\n            (v8 /*: any*/),\n            {\n                \"kind\": \"InlineFragment\",\n                \"type\": \"NestedMetaType\",\n                \"selections\": [\n                    (v2 /*: any*/),\n                    (v9 /*: any*/),\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"childrenMeta\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NestedMetaType\",\n                        \"plural\": true,\n                        \"selections\": [\n                            (v0 /*: any*/),\n                            (v2 /*: any*/),\n                            (v9 /*: any*/)\n                        ]\n                    }\n                ]\n            }\n        ]\n    } as any);\n    return {\n        \"kind\": \"Fragment\",\n        \"name\": \"NestedFieldFragmentMeta\",\n        \"type\": \"NestedMetaType\",\n        \"metadata\": null,\n        \"argumentDefinitions\": [],\n        \"selections\": [\n            (v0 /*: any*/),\n            (v2 /*: any*/),\n            (v9 /*: any*/),\n            {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"childrenMeta\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"NestedMetaType\",\n                \"plural\": true,\n                \"selections\": [\n                    (v0 /*: any*/),\n                    (v2 /*: any*/),\n                    (v10 /*: any*/),\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"childrenMeta\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NestedMetaType\",\n                        \"plural\": true,\n                        \"selections\": [\n                            (v0 /*: any*/),\n                            (v2 /*: any*/),\n                            (v10 /*: any*/)\n                        ]\n                    }\n                ]\n            }\n        ]\n    } as any;\n})();\n(node as any).hash = 'fa9433dfdc330f49d0c2f7cc33664d68';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type NestedFieldFragmentValue$ref = any;\nexport type NestedFieldFragmentValue = {\n    readonly ownValue: {\n        readonly enabled?: boolean;\n        readonly text?: string;\n        readonly id?: string;\n    } | null;\n    readonly childrenValue: {\n        readonly ownValue: {\n            readonly enabled?: boolean;\n            readonly text?: string;\n            readonly id?: string;\n        } | null;\n        readonly childrenValue: {\n            readonly ownValue: {\n                readonly enabled?: boolean;\n                readonly text?: string;\n                readonly id?: string;\n            } | null;\n        } | null;\n    } | null;\n    readonly \" $refType\": NestedFieldFragmentValue$ref;\n};\n\n\n\nconst node: ReaderFragment = (function () {\n    var v0 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownValue\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            {\n                \"kind\": \"InlineFragment\",\n                \"type\": \"SwitchValueType\",\n                \"selections\": [\n                    {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"enabled\",\n                        \"args\": null,\n                        \"storageKey\": null\n                    }\n                ]\n            },\n            {\n                \"kind\": \"InlineFragment\",\n                \"type\": \"TextValueType\",\n                \"selections\": [\n                    {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"text\",\n                        \"args\": null,\n                        \"storageKey\": null\n                    }\n                ]\n            },\n            {\n                \"kind\": \"InlineFragment\",\n                \"type\": \"ChoiceValueType\",\n                \"selections\": [\n                    {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"id\",\n                        \"args\": null,\n                        \"storageKey\": null\n                    }\n                ]\n            }\n        ]\n    } as any);\n    return {\n        \"kind\": \"Fragment\",\n        \"name\": \"NestedFieldFragmentValue\",\n        \"type\": \"NestedValueType\",\n        \"metadata\": null,\n        \"argumentDefinitions\": [],\n        \"selections\": [\n            (v0 /*: any*/),\n            {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"childrenValue\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"NestedValueType\",\n                \"plural\": false,\n                \"selections\": [\n                    (v0 /*: any*/),\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"childrenValue\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NestedValueType\",\n                        \"plural\": false,\n                        \"selections\": [\n                            (v0 /*: any*/)\n                        ]\n                    }\n                ]\n            }\n        ]\n    } as any;\n})();\n(node as any).hash = '673fdf3c1d674c895c7f6d2a97f5fc54';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type FieldIdEnum = \"ACTION\" | \"ACTIVE\" | \"CYCLE\" | \"DATE\" | \"DATE_TIME\" | \"DURATION\" | \"LOCATION\" | \"NOTE\" | \"NOTIFICATIONS\" | \"PERSON\" | \"PRIORITY\" | \"PROGRESS\" | \"STATUS\" | \"TITLE\" | \"%future added value\";\nexport type FieldTypeEnum = \"CHOICE\" | \"NESTED\" | \"SLIDER\" | \"SWITCH\" | \"TEXT\" | \"%future added value\";\nexport type NestedFieldFragment_data$ref = any;\nexport type NestedFieldFragment_data = {\n    readonly id: string;\n    readonly fieldId: FieldIdEnum;\n    readonly meta: {\n        readonly fieldType: FieldTypeEnum;\n        readonly parentValue: {\n            readonly enabled?: boolean;\n            readonly text?: string;\n            readonly id?: string;\n        } | null;\n        readonly ownMeta: {\n            readonly fieldType?: FieldTypeEnum;\n            readonly helperText?: string;\n            readonly label?: string;\n            readonly defaultValue?: string | null;\n            readonly options?: ReadonlyArray<{\n                readonly text: string;\n                readonly value: string;\n            } | null>;\n            readonly required?: boolean;\n            readonly inputType?: string | null;\n            readonly min?: number | null;\n            readonly max?: number | null;\n            readonly maxLength?: number | null;\n            readonly minLength?: number | null;\n            readonly disabled?: boolean | null;\n        } | null;\n        readonly childrenMeta: ReadonlyArray<{\n            readonly fieldType: FieldTypeEnum;\n            readonly parentValue: {\n                readonly enabled?: boolean;\n                readonly text?: string;\n                readonly id?: string;\n            } | null;\n            readonly ownMeta: {\n                readonly fieldType?: FieldTypeEnum;\n                readonly helperText?: string;\n                readonly label?: string;\n                readonly defaultValue?: string | null;\n                readonly options?: ReadonlyArray<{\n                    readonly text: string;\n                    readonly value: string;\n                } | null>;\n                readonly required?: boolean;\n                readonly inputType?: string | null;\n                readonly min?: number | null;\n                readonly max?: number | null;\n                readonly maxLength?: number | null;\n                readonly minLength?: number | null;\n                readonly disabled?: boolean | null;\n                readonly parentValue?: {\n                    readonly enabled?: boolean;\n                    readonly text?: string;\n                    readonly id?: string;\n                } | null;\n                readonly ownMeta?: {\n                    readonly fieldType?: FieldTypeEnum;\n                    readonly helperText?: string;\n                    readonly label?: string;\n                    readonly defaultValue?: string | null;\n                    readonly options?: ReadonlyArray<{\n                        readonly text: string;\n                        readonly value: string;\n                    } | null>;\n                    readonly required?: boolean;\n                    readonly inputType?: string | null;\n                    readonly min?: number | null;\n                    readonly max?: number | null;\n                    readonly maxLength?: number | null;\n                    readonly minLength?: number | null;\n                    readonly disabled?: boolean | null;\n                } | null;\n                readonly childrenMeta?: ReadonlyArray<{\n                    readonly fieldType: FieldTypeEnum;\n                    readonly parentValue: {\n                        readonly enabled?: boolean;\n                        readonly text?: string;\n                        readonly id?: string;\n                    } | null;\n                    readonly ownMeta: {\n                        readonly fieldType?: FieldTypeEnum;\n                        readonly helperText?: string;\n                        readonly label?: string;\n                        readonly defaultValue?: string | null;\n                        readonly options?: ReadonlyArray<{\n                            readonly text: string;\n                            readonly value: string;\n                        } | null>;\n                        readonly required?: boolean;\n                        readonly inputType?: string | null;\n                        readonly min?: number | null;\n                        readonly max?: number | null;\n                        readonly maxLength?: number | null;\n                        readonly minLength?: number | null;\n                        readonly disabled?: boolean | null;\n                    } | null;\n                } | null> | null;\n            } | null;\n            readonly childrenMeta: ReadonlyArray<{\n                readonly fieldType: FieldTypeEnum;\n                readonly parentValue: {\n                    readonly enabled?: boolean;\n                    readonly text?: string;\n                    readonly id?: string;\n                } | null;\n                readonly ownMeta: {\n                    readonly fieldType?: FieldTypeEnum;\n                    readonly helperText?: string;\n                    readonly label?: string;\n                    readonly defaultValue?: string | null;\n                    readonly options?: ReadonlyArray<{\n                        readonly text: string;\n                        readonly value: string;\n                    } | null>;\n                    readonly required?: boolean;\n                    readonly inputType?: string | null;\n                    readonly min?: number | null;\n                    readonly max?: number | null;\n                    readonly maxLength?: number | null;\n                    readonly minLength?: number | null;\n                    readonly disabled?: boolean | null;\n                    readonly parentValue?: {\n                        readonly enabled?: boolean;\n                        readonly text?: string;\n                        readonly id?: string;\n                    } | null;\n                    readonly ownMeta?: {\n                        readonly fieldType?: FieldTypeEnum;\n                        readonly helperText?: string;\n                        readonly label?: string;\n                        readonly defaultValue?: string | null;\n                        readonly options?: ReadonlyArray<{\n                            readonly text: string;\n                            readonly value: string;\n                        } | null>;\n                        readonly required?: boolean;\n                        readonly inputType?: string | null;\n                        readonly min?: number | null;\n                        readonly max?: number | null;\n                        readonly maxLength?: number | null;\n                        readonly minLength?: number | null;\n                        readonly disabled?: boolean | null;\n                    } | null;\n                    readonly childrenMeta?: ReadonlyArray<{\n                        readonly fieldType: FieldTypeEnum;\n                        readonly parentValue: {\n                            readonly enabled?: boolean;\n                            readonly text?: string;\n                            readonly id?: string;\n                        } | null;\n                        readonly ownMeta: {\n                            readonly fieldType?: FieldTypeEnum;\n                            readonly helperText?: string;\n                            readonly label?: string;\n                            readonly defaultValue?: string | null;\n                            readonly options?: ReadonlyArray<{\n                                readonly text: string;\n                                readonly value: string;\n                            } | null>;\n                            readonly required?: boolean;\n                            readonly inputType?: string | null;\n                            readonly min?: number | null;\n                            readonly max?: number | null;\n                            readonly maxLength?: number | null;\n                            readonly minLength?: number | null;\n                            readonly disabled?: boolean | null;\n                        } | null;\n                    } | null> | null;\n                } | null;\n            } | null> | null;\n        } | null> | null;\n    };\n    readonly value: {\n        readonly ownValue: {\n            readonly enabled?: boolean;\n            readonly text?: string;\n            readonly id?: string;\n        } | null;\n        readonly childrenValue: {\n            readonly ownValue: {\n                readonly enabled?: boolean;\n                readonly text?: string;\n                readonly id?: string;\n            } | null;\n            readonly childrenValue: {\n                readonly ownValue: {\n                    readonly enabled?: boolean;\n                    readonly text?: string;\n                    readonly id?: string;\n                } | null;\n            } | null;\n        } | null;\n    };\n    readonly \" $refType\": NestedFieldFragment_data$ref;\n};\n\n\n\nconst node: ReaderFragment = (function () {\n    var v0 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v1 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"fieldType\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v2 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"text\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v3 = [\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"SwitchValueType\",\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"enabled\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        } as any),\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"TextValueType\",\n            \"selections\": [\n                (v2 /*: any*/)\n            ]\n        } as any),\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"ChoiceValueType\",\n            \"selections\": [\n                (v0 /*: any*/)\n            ]\n        } as any)\n    ], v4 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"parentValue\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": (v3 /*: any*/)\n    } as any), v5 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"helperText\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v6 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"label\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v7 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"required\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v8 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"ChoiceMetaType\",\n        \"selections\": [\n            (v1 /*: any*/),\n            (v5 /*: any*/),\n            (v6 /*: any*/),\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"defaultValue\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"options\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"ChoiceOptionsMetaType\",\n                \"plural\": true,\n                \"selections\": [\n                    (v2 /*: any*/),\n                    {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"value\",\n                        \"args\": null,\n                        \"storageKey\": null\n                    }\n                ]\n            },\n            (v7 /*: any*/)\n        ]\n    } as any), v9 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"TextMetaType\",\n        \"selections\": [\n            (v1 /*: any*/),\n            (v5 /*: any*/),\n            (v6 /*: any*/),\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"inputType\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"min\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"max\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"maxLength\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"minLength\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            (v7 /*: any*/)\n        ]\n    } as any), v10 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"SwitchMetaType\",\n        \"selections\": [\n            (v1 /*: any*/),\n            (v6 /*: any*/),\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"disabled\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            (v7 /*: any*/)\n        ]\n    } as any), v11 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownMeta\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            (v8 /*: any*/),\n            (v9 /*: any*/),\n            (v10 /*: any*/)\n        ]\n    } as any), v12 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownMeta\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            (v8 /*: any*/),\n            (v9 /*: any*/),\n            (v10 /*: any*/),\n            {\n                \"kind\": \"InlineFragment\",\n                \"type\": \"NestedMetaType\",\n                \"selections\": [\n                    (v4 /*: any*/),\n                    (v11 /*: any*/),\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"childrenMeta\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NestedMetaType\",\n                        \"plural\": true,\n                        \"selections\": [\n                            (v1 /*: any*/),\n                            (v4 /*: any*/),\n                            (v11 /*: any*/)\n                        ]\n                    }\n                ]\n            }\n        ]\n    } as any), v13 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownValue\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": (v3 /*: any*/)\n    } as any);\n    return {\n        \"kind\": \"Fragment\",\n        \"name\": \"NestedFieldFragment_data\",\n        \"type\": \"NestedFieldType\",\n        \"metadata\": null,\n        \"argumentDefinitions\": [],\n        \"selections\": [\n            (v0 /*: any*/),\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"fieldId\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"meta\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"NestedMetaType\",\n                \"plural\": false,\n                \"selections\": [\n                    (v1 /*: any*/),\n                    (v4 /*: any*/),\n                    (v11 /*: any*/),\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"childrenMeta\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NestedMetaType\",\n                        \"plural\": true,\n                        \"selections\": [\n                            (v1 /*: any*/),\n                            (v4 /*: any*/),\n                            (v12 /*: any*/),\n                            {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"childrenMeta\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"NestedMetaType\",\n                                \"plural\": true,\n                                \"selections\": [\n                                    (v1 /*: any*/),\n                                    (v4 /*: any*/),\n                                    (v12 /*: any*/)\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"value\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"NestedValueType\",\n                \"plural\": false,\n                \"selections\": [\n                    (v13 /*: any*/),\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"childrenValue\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NestedValueType\",\n                        \"plural\": false,\n                        \"selections\": [\n                            (v13 /*: any*/),\n                            {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"childrenValue\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"NestedValueType\",\n                                \"plural\": false,\n                                \"selections\": [\n                                    (v13 /*: any*/)\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    } as any;\n})();\n(node as any).hash = '5f1bfa3e294061936955636aacf01cbc';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type FieldTypeEnum = \"CHOICE\" | \"NESTED\" | \"SLIDER\" | \"SWITCH\" | \"TEXT\" | \"%future added value\";\nexport type SliderFieldFragmentMeta$ref = any;\nexport type SliderFieldFragmentMeta = {\n    readonly fieldType: FieldTypeEnum;\n    readonly label: string;\n    readonly disabled: boolean | null;\n    readonly required: boolean;\n    readonly max: number | null;\n    readonly min: number | null;\n    readonly step: number | null;\n    readonly \" $refType\": SliderFieldFragmentMeta$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"SliderFieldFragmentMeta\",\n    \"type\": \"SliderMetaType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"fieldType\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"label\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"disabled\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"required\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"max\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"min\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"step\",\n            \"args\": null,\n            \"storageKey\": null\n        }\n    ]\n} as any);\n(node as any).hash = '36b66358d3aea5cc5a05f342f1021d78';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type SliderFieldFragmentValue$ref = any;\nexport type SliderFieldFragmentValue = {\n    readonly progress: number;\n    readonly \" $refType\": SliderFieldFragmentValue$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"SliderFieldFragmentValue\",\n    \"type\": \"SliderValueType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"progress\",\n            \"args\": null,\n            \"storageKey\": null\n        }\n    ]\n} as any);\n(node as any).hash = 'a5f3b7c0b50f8cb3f6b1099b426417dd';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type FieldIdEnum = \"ACTION\" | \"ACTIVE\" | \"CYCLE\" | \"DATE\" | \"DATE_TIME\" | \"DURATION\" | \"LOCATION\" | \"NOTE\" | \"NOTIFICATIONS\" | \"PERSON\" | \"PRIORITY\" | \"PROGRESS\" | \"STATUS\" | \"TITLE\" | \"%future added value\";\nexport type FieldTypeEnum = \"CHOICE\" | \"NESTED\" | \"SLIDER\" | \"SWITCH\" | \"TEXT\" | \"%future added value\";\nexport type SliderFieldFragment_data$ref = any;\nexport type SliderFieldFragment_data = {\n    readonly id: string;\n    readonly fieldId: FieldIdEnum;\n    readonly meta: {\n        readonly fieldType: FieldTypeEnum;\n        readonly label: string;\n        readonly disabled: boolean | null;\n        readonly required: boolean;\n        readonly max: number | null;\n        readonly min: number | null;\n        readonly step: number | null;\n    };\n    readonly value: {\n        readonly progress: number;\n    };\n    readonly \" $refType\": SliderFieldFragment_data$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"SliderFieldFragment_data\",\n    \"type\": \"SliderFieldType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"id\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"fieldId\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"meta\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"SliderMetaType\",\n            \"plural\": false,\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"fieldType\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"label\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"disabled\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"required\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"max\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"min\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"step\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        },\n        {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"value\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"SliderValueType\",\n            \"plural\": false,\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"progress\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        }\n    ]\n} as any);\n(node as any).hash = 'd89fb29867df7e3d986515cd4da9dd62';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type FieldTypeEnum = \"CHOICE\" | \"NESTED\" | \"SLIDER\" | \"SWITCH\" | \"TEXT\" | \"%future added value\";\nexport type SwitchFieldFragmentMeta$ref = any;\nexport type SwitchFieldFragmentMeta = {\n    readonly fieldType: FieldTypeEnum;\n    readonly label: string;\n    readonly disabled: boolean | null;\n    readonly required: boolean;\n    readonly \" $refType\": SwitchFieldFragmentMeta$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"SwitchFieldFragmentMeta\",\n    \"type\": \"SwitchMetaType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"fieldType\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"label\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"disabled\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"required\",\n            \"args\": null,\n            \"storageKey\": null\n        }\n    ]\n} as any);\n(node as any).hash = '749b930d69930046f29aa01f911d63b6';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type SwitchFieldFragmentValue$ref = any;\nexport type SwitchFieldFragmentValue = {\n    readonly enabled: boolean;\n    readonly \" $refType\": SwitchFieldFragmentValue$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"SwitchFieldFragmentValue\",\n    \"type\": \"SwitchValueType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"enabled\",\n            \"args\": null,\n            \"storageKey\": null\n        }\n    ]\n} as any);\n(node as any).hash = '17b2b5f676ec23834c8e625601aa96b6';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type FieldIdEnum = \"ACTION\" | \"ACTIVE\" | \"CYCLE\" | \"DATE\" | \"DATE_TIME\" | \"DURATION\" | \"LOCATION\" | \"NOTE\" | \"NOTIFICATIONS\" | \"PERSON\" | \"PRIORITY\" | \"PROGRESS\" | \"STATUS\" | \"TITLE\" | \"%future added value\";\nexport type FieldTypeEnum = \"CHOICE\" | \"NESTED\" | \"SLIDER\" | \"SWITCH\" | \"TEXT\" | \"%future added value\";\nexport type SwitchFieldFragment_data$ref = any;\nexport type SwitchFieldFragment_data = {\n    readonly id: string;\n    readonly fieldId: FieldIdEnum;\n    readonly meta: {\n        readonly fieldType: FieldTypeEnum;\n        readonly label: string;\n        readonly disabled: boolean | null;\n        readonly required: boolean;\n    };\n    readonly value: {\n        readonly enabled: boolean;\n    };\n    readonly \" $refType\": SwitchFieldFragment_data$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"SwitchFieldFragment_data\",\n    \"type\": \"SwitchFieldType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"id\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"fieldId\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"meta\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"SwitchMetaType\",\n            \"plural\": false,\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"fieldType\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"label\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"disabled\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"required\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        },\n        {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"value\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"SwitchValueType\",\n            \"plural\": false,\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"enabled\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        }\n    ]\n} as any);\n(node as any).hash = 'ece959f676ef97be1b514ae8aa9625f6';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type FieldTypeEnum = \"CHOICE\" | \"NESTED\" | \"SLIDER\" | \"SWITCH\" | \"TEXT\" | \"%future added value\";\nexport type TextFieldFragmentMeta$ref = any;\nexport type TextFieldFragmentMeta = {\n    readonly fieldType: FieldTypeEnum;\n    readonly helperText: string;\n    readonly label: string;\n    readonly inputType: string | null;\n    readonly min: number | null;\n    readonly max: number | null;\n    readonly maxLength: number | null;\n    readonly minLength: number | null;\n    readonly required: boolean;\n    readonly \" $refType\": TextFieldFragmentMeta$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"TextFieldFragmentMeta\",\n    \"type\": \"TextMetaType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"fieldType\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"helperText\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"label\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"inputType\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"min\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"max\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"maxLength\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"minLength\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"required\",\n            \"args\": null,\n            \"storageKey\": null\n        }\n    ]\n} as any);\n(node as any).hash = 'b79748c916fe0880fad9817ca83f6371';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type TextFieldFragmentValue$ref = any;\nexport type TextFieldFragmentValue = {\n    readonly text: string;\n    readonly \" $refType\": TextFieldFragmentValue$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"TextFieldFragmentValue\",\n    \"type\": \"TextValueType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"text\",\n            \"args\": null,\n            \"storageKey\": null\n        }\n    ]\n} as any);\n(node as any).hash = '4aea032a5f6e70fe4d383564ab0496e7';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nexport type FieldIdEnum = \"ACTION\" | \"ACTIVE\" | \"CYCLE\" | \"DATE\" | \"DATE_TIME\" | \"DURATION\" | \"LOCATION\" | \"NOTE\" | \"NOTIFICATIONS\" | \"PERSON\" | \"PRIORITY\" | \"PROGRESS\" | \"STATUS\" | \"TITLE\" | \"%future added value\";\nexport type FieldTypeEnum = \"CHOICE\" | \"NESTED\" | \"SLIDER\" | \"SWITCH\" | \"TEXT\" | \"%future added value\";\nexport type TextFieldFragment_data$ref = any;\nexport type TextFieldFragment_data = {\n    readonly id: string;\n    readonly fieldId: FieldIdEnum;\n    readonly meta: {\n        readonly fieldType: FieldTypeEnum;\n        readonly helperText: string;\n        readonly label: string;\n        readonly inputType: string | null;\n        readonly min: number | null;\n        readonly max: number | null;\n        readonly maxLength: number | null;\n        readonly minLength: number | null;\n        readonly required: boolean;\n    };\n    readonly value: {\n        readonly text: string;\n    };\n    readonly \" $refType\": TextFieldFragment_data$ref;\n};\n\n\n\nconst node: ReaderFragment = ({\n    \"kind\": \"Fragment\",\n    \"name\": \"TextFieldFragment_data\",\n    \"type\": \"TextFieldType\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"id\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"fieldId\",\n            \"args\": null,\n            \"storageKey\": null\n        },\n        {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"meta\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"TextMetaType\",\n            \"plural\": false,\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"fieldType\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"helperText\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"label\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"inputType\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"min\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"max\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"maxLength\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"minLength\",\n                    \"args\": null,\n                    \"storageKey\": null\n                },\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"required\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        },\n        {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"value\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"TextValueType\",\n            \"plural\": false,\n            \"selections\": [\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"text\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        }\n    ]\n} as any);\n(node as any).hash = 'e8e3451dc4f68b6c18bbb58baf3ea0ec';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\ntype ChoiceFieldFragment_data$ref = any;\ntype NestedFieldFragment_data$ref = any;\ntype SliderFieldFragment_data$ref = any;\ntype SwitchFieldFragment_data$ref = any;\ntype TextFieldFragment_data$ref = any;\nexport type FieldIdEnum = \"ACTION\" | \"ACTIVE\" | \"CYCLE\" | \"DATE\" | \"DATE_TIME\" | \"DURATION\" | \"LOCATION\" | \"NOTE\" | \"NOTIFICATIONS\" | \"PERSON\" | \"PRIORITY\" | \"PROGRESS\" | \"STATUS\" | \"TITLE\" | \"%future added value\";\nexport type FieldTypeEnum = \"CHOICE\" | \"NESTED\" | \"SLIDER\" | \"SWITCH\" | \"TEXT\" | \"%future added value\";\nexport type useTaskFragment$ref = any;\nexport type useTaskFragment = {\n    readonly id: string;\n    readonly fields: ReadonlyArray<{\n        readonly __typename: string;\n        readonly fieldId?: FieldIdEnum;\n        readonly fieldType?: FieldTypeEnum;\n        readonly order?: number;\n        readonly \" $fragmentRefs\": SliderFieldFragment_data$ref & SwitchFieldFragment_data$ref & ChoiceFieldFragment_data$ref & TextFieldFragment_data$ref & NestedFieldFragment_data$ref;\n    }>;\n    readonly \" $refType\": useTaskFragment$ref;\n};\n\n\n\nconst node: ReaderFragment = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"fieldId\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"fieldType\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"order\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any)\n    ];\n    return {\n        \"kind\": \"Fragment\",\n        \"name\": \"useTaskFragment\",\n        \"type\": \"TaskType\",\n        \"metadata\": null,\n        \"argumentDefinitions\": [],\n        \"selections\": [\n            {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"id\",\n                \"args\": null,\n                \"storageKey\": null\n            },\n            {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"fields\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": null,\n                \"plural\": true,\n                \"selections\": [\n                    {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"__typename\",\n                        \"args\": null,\n                        \"storageKey\": null\n                    },\n                    {\n                        \"kind\": \"InlineFragment\",\n                        \"type\": \"ChoiceFieldType\",\n                        \"selections\": (v0 /*: any*/)\n                    },\n                    {\n                        \"kind\": \"InlineFragment\",\n                        \"type\": \"SwitchFieldType\",\n                        \"selections\": (v0 /*: any*/)\n                    },\n                    {\n                        \"kind\": \"InlineFragment\",\n                        \"type\": \"SliderFieldType\",\n                        \"selections\": (v0 /*: any*/)\n                    },\n                    {\n                        \"kind\": \"InlineFragment\",\n                        \"type\": \"NestedFieldType\",\n                        \"selections\": (v0 /*: any*/)\n                    },\n                    {\n                        \"kind\": \"InlineFragment\",\n                        \"type\": \"TextFieldType\",\n                        \"selections\": (v0 /*: any*/)\n                    },\n                    {\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"SliderFieldFragment_data\",\n                        \"args\": null\n                    },\n                    {\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"SwitchFieldFragment_data\",\n                        \"args\": null\n                    },\n                    {\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"ChoiceFieldFragment_data\",\n                        \"args\": null\n                    },\n                    {\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"TextFieldFragment_data\",\n                        \"args\": null\n                    },\n                    {\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"NestedFieldFragment_data\",\n                        \"args\": null\n                    }\n                ]\n            }\n        ]\n    } as any;\n})();\n(node as any).hash = '530ae61e2de5f5a2c286623ddc04ca36';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\ntype useTaskFragment$ref = any;\nexport type useTaskQueryVariables = {\n    readonly id?: string | null;\n    readonly type?: string | null;\n};\nexport type useTaskQueryResponse = {\n    readonly app: {\n        readonly task: {\n            readonly id: string;\n            readonly \" $fragmentRefs\": useTaskFragment$ref;\n        } | null;\n        readonly taskList: {\n            readonly id: string;\n        };\n    };\n};\nexport type useTaskQuery = {\n    readonly response: useTaskQueryResponse;\n    readonly variables: useTaskQueryVariables;\n};\n\n\n\n/*\nquery useTaskQuery(\n  $id: ID\n  $type: String\n) {\n  app {\n    task(id: $id, type: $type) {\n      id\n      ...useTaskFragment\n    }\n    taskList {\n      id\n    }\n    id\n  }\n}\n\nfragment useTaskFragment on TaskType {\n  id\n  fields {\n    __typename\n    ... on ChoiceFieldType {\n      fieldId\n      fieldType\n      order\n    }\n    ... on SwitchFieldType {\n      fieldId\n      fieldType\n      order\n    }\n    ... on SliderFieldType {\n      fieldId\n      fieldType\n      order\n    }\n    ... on NestedFieldType {\n      fieldId\n      fieldType\n      order\n    }\n    ... on TextFieldType {\n      fieldId\n      fieldType\n      order\n    }\n    ...SliderFieldFragment_data\n    ...SwitchFieldFragment_data\n    ...ChoiceFieldFragment_data\n    ...TextFieldFragment_data\n    ...NestedFieldFragment_data\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment SliderFieldFragment_data on SliderFieldType {\n  id\n  fieldId\n  meta {\n    fieldType\n    label\n    disabled\n    required\n    max\n    min\n    step\n  }\n  value {\n    progress\n  }\n}\n\nfragment SwitchFieldFragment_data on SwitchFieldType {\n  id\n  fieldId\n  meta {\n    fieldType\n    label\n    disabled\n    required\n  }\n  value {\n    enabled\n  }\n}\n\nfragment ChoiceFieldFragment_data on ChoiceFieldType {\n  id\n  fieldId\n  meta {\n    fieldType\n    helperText\n    label\n    defaultValue\n    options {\n      text\n      value\n    }\n    required\n  }\n  value {\n    id\n  }\n}\n\nfragment TextFieldFragment_data on TextFieldType {\n  id\n  fieldId\n  meta {\n    fieldType\n    helperText\n    label\n    inputType\n    min\n    max\n    maxLength\n    minLength\n    required\n  }\n  value {\n    text\n  }\n}\n\nfragment NestedFieldFragment_data on NestedFieldType {\n  id\n  fieldId\n  meta {\n    fieldType\n    parentValue {\n      __typename\n      ... on SwitchValueType {\n        enabled\n      }\n      ... on TextValueType {\n        text\n      }\n      ... on ChoiceValueType {\n        id\n      }\n    }\n    ownMeta {\n      __typename\n      ... on ChoiceMetaType {\n        fieldType\n        helperText\n        label\n        defaultValue\n        options {\n          text\n          value\n        }\n        required\n      }\n      ... on TextMetaType {\n        fieldType\n        helperText\n        label\n        inputType\n        min\n        max\n        maxLength\n        minLength\n        required\n      }\n      ... on SwitchMetaType {\n        fieldType\n        label\n        disabled\n        required\n      }\n    }\n    childrenMeta {\n      fieldType\n      parentValue {\n        __typename\n        ... on SwitchValueType {\n          enabled\n        }\n        ... on TextValueType {\n          text\n        }\n        ... on ChoiceValueType {\n          id\n        }\n      }\n      ownMeta {\n        __typename\n        ... on ChoiceMetaType {\n          fieldType\n          helperText\n          label\n          defaultValue\n          options {\n            text\n            value\n          }\n          required\n        }\n        ... on TextMetaType {\n          fieldType\n          helperText\n          label\n          inputType\n          min\n          max\n          maxLength\n          minLength\n          required\n        }\n        ... on SwitchMetaType {\n          fieldType\n          label\n          disabled\n          required\n        }\n        ... on NestedMetaType {\n          parentValue {\n            __typename\n            ... on SwitchValueType {\n              enabled\n            }\n            ... on TextValueType {\n              text\n            }\n            ... on ChoiceValueType {\n              id\n            }\n          }\n          ownMeta {\n            __typename\n            ... on ChoiceMetaType {\n              fieldType\n              helperText\n              label\n              defaultValue\n              options {\n                text\n                value\n              }\n              required\n            }\n            ... on TextMetaType {\n              fieldType\n              helperText\n              label\n              inputType\n              min\n              max\n              maxLength\n              minLength\n              required\n            }\n            ... on SwitchMetaType {\n              fieldType\n              label\n              disabled\n              required\n            }\n          }\n          childrenMeta {\n            fieldType\n            parentValue {\n              __typename\n              ... on SwitchValueType {\n                enabled\n              }\n              ... on TextValueType {\n                text\n              }\n              ... on ChoiceValueType {\n                id\n              }\n            }\n            ownMeta {\n              __typename\n              ... on ChoiceMetaType {\n                fieldType\n                helperText\n                label\n                defaultValue\n                options {\n                  text\n                  value\n                }\n                required\n              }\n              ... on TextMetaType {\n                fieldType\n                helperText\n                label\n                inputType\n                min\n                max\n                maxLength\n                minLength\n                required\n              }\n              ... on SwitchMetaType {\n                fieldType\n                label\n                disabled\n                required\n              }\n            }\n          }\n        }\n      }\n      childrenMeta {\n        fieldType\n        parentValue {\n          __typename\n          ... on SwitchValueType {\n            enabled\n          }\n          ... on TextValueType {\n            text\n          }\n          ... on ChoiceValueType {\n            id\n          }\n        }\n        ownMeta {\n          __typename\n          ... on ChoiceMetaType {\n            fieldType\n            helperText\n            label\n            defaultValue\n            options {\n              text\n              value\n            }\n            required\n          }\n          ... on TextMetaType {\n            fieldType\n            helperText\n            label\n            inputType\n            min\n            max\n            maxLength\n            minLength\n            required\n          }\n          ... on SwitchMetaType {\n            fieldType\n            label\n            disabled\n            required\n          }\n          ... on NestedMetaType {\n            parentValue {\n              __typename\n              ... on SwitchValueType {\n                enabled\n              }\n              ... on TextValueType {\n                text\n              }\n              ... on ChoiceValueType {\n                id\n              }\n            }\n            ownMeta {\n              __typename\n              ... on ChoiceMetaType {\n                fieldType\n                helperText\n                label\n                defaultValue\n                options {\n                  text\n                  value\n                }\n                required\n              }\n              ... on TextMetaType {\n                fieldType\n                helperText\n                label\n                inputType\n                min\n                max\n                maxLength\n                minLength\n                required\n              }\n              ... on SwitchMetaType {\n                fieldType\n                label\n                disabled\n                required\n              }\n            }\n            childrenMeta {\n              fieldType\n              parentValue {\n                __typename\n                ... on SwitchValueType {\n                  enabled\n                }\n                ... on TextValueType {\n                  text\n                }\n                ... on ChoiceValueType {\n                  id\n                }\n              }\n              ownMeta {\n                __typename\n                ... on ChoiceMetaType {\n                  fieldType\n                  helperText\n                  label\n                  defaultValue\n                  options {\n                    text\n                    value\n                  }\n                  required\n                }\n                ... on TextMetaType {\n                  fieldType\n                  helperText\n                  label\n                  inputType\n                  min\n                  max\n                  maxLength\n                  minLength\n                  required\n                }\n                ... on SwitchMetaType {\n                  fieldType\n                  label\n                  disabled\n                  required\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  value {\n    ownValue {\n      __typename\n      ... on SwitchValueType {\n        enabled\n      }\n      ... on TextValueType {\n        text\n      }\n      ... on ChoiceValueType {\n        id\n      }\n    }\n    childrenValue {\n      ownValue {\n        __typename\n        ... on SwitchValueType {\n          enabled\n        }\n        ... on TextValueType {\n          text\n        }\n        ... on ChoiceValueType {\n          id\n        }\n      }\n      childrenValue {\n        ownValue {\n          __typename\n          ... on SwitchValueType {\n            enabled\n          }\n          ... on TextValueType {\n            text\n          }\n          ... on ChoiceValueType {\n            id\n          }\n        }\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function () {\n    var v0 = [\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"id\",\n            \"type\": \"ID\",\n            \"defaultValue\": null\n        } as any),\n        ({\n            \"kind\": \"LocalArgument\",\n            \"name\": \"type\",\n            \"type\": \"String\",\n            \"defaultValue\": null\n        } as any)\n    ], v1 = [\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"id\",\n            \"variableName\": \"id\"\n        } as any),\n        ({\n            \"kind\": \"Variable\",\n            \"name\": \"type\",\n            \"variableName\": \"type\"\n        } as any)\n    ], v2 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v3 = [\n        (v2 /*: any*/)\n    ], v4 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"taskList\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"TaskListType\",\n        \"plural\": false,\n        \"selections\": (v3 /*: any*/)\n    } as any), v5 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"__typename\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v6 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"fieldId\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v7 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"fieldType\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v8 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"order\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v9 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"helperText\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v10 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"label\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v11 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"text\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v12 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"required\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v13 = [\n        (v7 /*: any*/),\n        (v9 /*: any*/),\n        (v10 /*: any*/),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"defaultValue\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        ({\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"options\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"ChoiceOptionsMetaType\",\n            \"plural\": true,\n            \"selections\": [\n                (v11 /*: any*/),\n                {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"value\",\n                    \"args\": null,\n                    \"storageKey\": null\n                }\n            ]\n        } as any),\n        (v12 /*: any*/)\n    ], v14 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"disabled\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v15 = [\n        (v7 /*: any*/),\n        (v10 /*: any*/),\n        (v14 /*: any*/),\n        (v12 /*: any*/)\n    ], v16 = [\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"enabled\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any)\n    ], v17 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"max\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v18 = ({\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"min\",\n        \"args\": null,\n        \"storageKey\": null\n    } as any), v19 = [\n        (v11 /*: any*/)\n    ], v20 = [\n        (v5 /*: any*/),\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"SwitchValueType\",\n            \"selections\": (v16 /*: any*/)\n        } as any),\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"TextValueType\",\n            \"selections\": (v19 /*: any*/)\n        } as any),\n        ({\n            \"kind\": \"InlineFragment\",\n            \"type\": \"ChoiceValueType\",\n            \"selections\": (v3 /*: any*/)\n        } as any)\n    ], v21 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"parentValue\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": (v20 /*: any*/)\n    } as any), v22 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"ChoiceMetaType\",\n        \"selections\": (v13 /*: any*/)\n    } as any), v23 = [\n        (v7 /*: any*/),\n        (v9 /*: any*/),\n        (v10 /*: any*/),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"inputType\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        (v18 /*: any*/),\n        (v17 /*: any*/),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"maxLength\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        ({\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"minLength\",\n            \"args\": null,\n            \"storageKey\": null\n        } as any),\n        (v12 /*: any*/)\n    ], v24 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"TextMetaType\",\n        \"selections\": (v23 /*: any*/)\n    } as any), v25 = ({\n        \"kind\": \"InlineFragment\",\n        \"type\": \"SwitchMetaType\",\n        \"selections\": (v15 /*: any*/)\n    } as any), v26 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownMeta\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            (v5 /*: any*/),\n            (v22 /*: any*/),\n            (v24 /*: any*/),\n            (v25 /*: any*/)\n        ]\n    } as any), v27 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownMeta\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n            (v5 /*: any*/),\n            (v22 /*: any*/),\n            (v24 /*: any*/),\n            (v25 /*: any*/),\n            {\n                \"kind\": \"InlineFragment\",\n                \"type\": \"NestedMetaType\",\n                \"selections\": [\n                    (v21 /*: any*/),\n                    (v26 /*: any*/),\n                    {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"childrenMeta\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NestedMetaType\",\n                        \"plural\": true,\n                        \"selections\": [\n                            (v7 /*: any*/),\n                            (v21 /*: any*/),\n                            (v26 /*: any*/)\n                        ]\n                    }\n                ]\n            }\n        ]\n    } as any), v28 = ({\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"ownValue\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": (v20 /*: any*/)\n    } as any);\n    return {\n        \"kind\": \"Request\",\n        \"fragment\": {\n            \"kind\": \"Fragment\",\n            \"name\": \"useTaskQuery\",\n            \"type\": \"QueryType\",\n            \"metadata\": null,\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"app\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"AppType\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"task\",\n                            \"storageKey\": null,\n                            \"args\": (v1 /*: any*/),\n                            \"concreteType\": \"TaskType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                (v2 /*: any*/),\n                                {\n                                    \"kind\": \"FragmentSpread\",\n                                    \"name\": \"useTaskFragment\",\n                                    \"args\": null\n                                }\n                            ]\n                        },\n                        (v4 /*: any*/)\n                    ]\n                }\n            ]\n        },\n        \"operation\": {\n            \"kind\": \"Operation\",\n            \"name\": \"useTaskQuery\",\n            \"argumentDefinitions\": (v0 /*: any*/),\n            \"selections\": [\n                {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"app\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"AppType\",\n                    \"plural\": false,\n                    \"selections\": [\n                        {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"task\",\n                            \"storageKey\": null,\n                            \"args\": (v1 /*: any*/),\n                            \"concreteType\": \"TaskType\",\n                            \"plural\": false,\n                            \"selections\": [\n                                (v2 /*: any*/),\n                                {\n                                    \"kind\": \"LinkedField\",\n                                    \"alias\": null,\n                                    \"name\": \"fields\",\n                                    \"storageKey\": null,\n                                    \"args\": null,\n                                    \"concreteType\": null,\n                                    \"plural\": true,\n                                    \"selections\": [\n                                        (v5 /*: any*/),\n                                        (v2 /*: any*/),\n                                        {\n                                            \"kind\": \"InlineFragment\",\n                                            \"type\": \"ChoiceFieldType\",\n                                            \"selections\": [\n                                                (v6 /*: any*/),\n                                                (v7 /*: any*/),\n                                                (v8 /*: any*/),\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"meta\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"ChoiceMetaType\",\n                                                    \"plural\": false,\n                                                    \"selections\": (v13 /*: any*/)\n                                                },\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"value\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"ChoiceValueType\",\n                                                    \"plural\": false,\n                                                    \"selections\": (v3 /*: any*/)\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"kind\": \"InlineFragment\",\n                                            \"type\": \"SwitchFieldType\",\n                                            \"selections\": [\n                                                (v6 /*: any*/),\n                                                (v7 /*: any*/),\n                                                (v8 /*: any*/),\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"meta\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"SwitchMetaType\",\n                                                    \"plural\": false,\n                                                    \"selections\": (v15 /*: any*/)\n                                                },\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"value\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"SwitchValueType\",\n                                                    \"plural\": false,\n                                                    \"selections\": (v16 /*: any*/)\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"kind\": \"InlineFragment\",\n                                            \"type\": \"SliderFieldType\",\n                                            \"selections\": [\n                                                (v6 /*: any*/),\n                                                (v7 /*: any*/),\n                                                (v8 /*: any*/),\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"meta\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"SliderMetaType\",\n                                                    \"plural\": false,\n                                                    \"selections\": [\n                                                        (v7 /*: any*/),\n                                                        (v10 /*: any*/),\n                                                        (v14 /*: any*/),\n                                                        (v12 /*: any*/),\n                                                        (v17 /*: any*/),\n                                                        (v18 /*: any*/),\n                                                        {\n                                                            \"kind\": \"ScalarField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"step\",\n                                                            \"args\": null,\n                                                            \"storageKey\": null\n                                                        }\n                                                    ]\n                                                },\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"value\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"SliderValueType\",\n                                                    \"plural\": false,\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"ScalarField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"progress\",\n                                                            \"args\": null,\n                                                            \"storageKey\": null\n                                                        }\n                                                    ]\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"kind\": \"InlineFragment\",\n                                            \"type\": \"NestedFieldType\",\n                                            \"selections\": [\n                                                (v6 /*: any*/),\n                                                (v7 /*: any*/),\n                                                (v8 /*: any*/),\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"meta\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"NestedMetaType\",\n                                                    \"plural\": false,\n                                                    \"selections\": [\n                                                        (v7 /*: any*/),\n                                                        (v21 /*: any*/),\n                                                        (v26 /*: any*/),\n                                                        {\n                                                            \"kind\": \"LinkedField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"childrenMeta\",\n                                                            \"storageKey\": null,\n                                                            \"args\": null,\n                                                            \"concreteType\": \"NestedMetaType\",\n                                                            \"plural\": true,\n                                                            \"selections\": [\n                                                                (v7 /*: any*/),\n                                                                (v21 /*: any*/),\n                                                                (v27 /*: any*/),\n                                                                {\n                                                                    \"kind\": \"LinkedField\",\n                                                                    \"alias\": null,\n                                                                    \"name\": \"childrenMeta\",\n                                                                    \"storageKey\": null,\n                                                                    \"args\": null,\n                                                                    \"concreteType\": \"NestedMetaType\",\n                                                                    \"plural\": true,\n                                                                    \"selections\": [\n                                                                        (v7 /*: any*/),\n                                                                        (v21 /*: any*/),\n                                                                        (v27 /*: any*/)\n                                                                    ]\n                                                                }\n                                                            ]\n                                                        }\n                                                    ]\n                                                },\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"value\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"NestedValueType\",\n                                                    \"plural\": false,\n                                                    \"selections\": [\n                                                        (v28 /*: any*/),\n                                                        {\n                                                            \"kind\": \"LinkedField\",\n                                                            \"alias\": null,\n                                                            \"name\": \"childrenValue\",\n                                                            \"storageKey\": null,\n                                                            \"args\": null,\n                                                            \"concreteType\": \"NestedValueType\",\n                                                            \"plural\": false,\n                                                            \"selections\": [\n                                                                (v28 /*: any*/),\n                                                                {\n                                                                    \"kind\": \"LinkedField\",\n                                                                    \"alias\": null,\n                                                                    \"name\": \"childrenValue\",\n                                                                    \"storageKey\": null,\n                                                                    \"args\": null,\n                                                                    \"concreteType\": \"NestedValueType\",\n                                                                    \"plural\": false,\n                                                                    \"selections\": [\n                                                                        (v28 /*: any*/)\n                                                                    ]\n                                                                }\n                                                            ]\n                                                        }\n                                                    ]\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"kind\": \"InlineFragment\",\n                                            \"type\": \"TextFieldType\",\n                                            \"selections\": [\n                                                (v6 /*: any*/),\n                                                (v7 /*: any*/),\n                                                (v8 /*: any*/),\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"meta\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"TextMetaType\",\n                                                    \"plural\": false,\n                                                    \"selections\": (v23 /*: any*/)\n                                                },\n                                                {\n                                                    \"kind\": \"LinkedField\",\n                                                    \"alias\": null,\n                                                    \"name\": \"value\",\n                                                    \"storageKey\": null,\n                                                    \"args\": null,\n                                                    \"concreteType\": \"TextValueType\",\n                                                    \"plural\": false,\n                                                    \"selections\": (v19 /*: any*/)\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                }\n                            ]\n                        },\n                        (v4 /*: any*/),\n                        (v2 /*: any*/)\n                    ]\n                }\n            ]\n        },\n        \"params\": {\n            \"operationKind\": \"query\",\n            \"name\": \"useTaskQuery\",\n            \"id\": null,\n            \"text\": \"query useTaskQuery(\\n  $id: ID\\n  $type: String\\n) {\\n  app {\\n    task(id: $id, type: $type) {\\n      id\\n      ...useTaskFragment\\n    }\\n    taskList {\\n      id\\n    }\\n    id\\n  }\\n}\\n\\nfragment useTaskFragment on TaskType {\\n  id\\n  fields {\\n    __typename\\n    ... on ChoiceFieldType {\\n      fieldId\\n      fieldType\\n      order\\n    }\\n    ... on SwitchFieldType {\\n      fieldId\\n      fieldType\\n      order\\n    }\\n    ... on SliderFieldType {\\n      fieldId\\n      fieldType\\n      order\\n    }\\n    ... on NestedFieldType {\\n      fieldId\\n      fieldType\\n      order\\n    }\\n    ... on TextFieldType {\\n      fieldId\\n      fieldType\\n      order\\n    }\\n    ...SliderFieldFragment_data\\n    ...SwitchFieldFragment_data\\n    ...ChoiceFieldFragment_data\\n    ...TextFieldFragment_data\\n    ...NestedFieldFragment_data\\n    ... on Node {\\n      id\\n    }\\n  }\\n}\\n\\nfragment SliderFieldFragment_data on SliderFieldType {\\n  id\\n  fieldId\\n  meta {\\n    fieldType\\n    label\\n    disabled\\n    required\\n    max\\n    min\\n    step\\n  }\\n  value {\\n    progress\\n  }\\n}\\n\\nfragment SwitchFieldFragment_data on SwitchFieldType {\\n  id\\n  fieldId\\n  meta {\\n    fieldType\\n    label\\n    disabled\\n    required\\n  }\\n  value {\\n    enabled\\n  }\\n}\\n\\nfragment ChoiceFieldFragment_data on ChoiceFieldType {\\n  id\\n  fieldId\\n  meta {\\n    fieldType\\n    helperText\\n    label\\n    defaultValue\\n    options {\\n      text\\n      value\\n    }\\n    required\\n  }\\n  value {\\n    id\\n  }\\n}\\n\\nfragment TextFieldFragment_data on TextFieldType {\\n  id\\n  fieldId\\n  meta {\\n    fieldType\\n    helperText\\n    label\\n    inputType\\n    min\\n    max\\n    maxLength\\n    minLength\\n    required\\n  }\\n  value {\\n    text\\n  }\\n}\\n\\nfragment NestedFieldFragment_data on NestedFieldType {\\n  id\\n  fieldId\\n  meta {\\n    fieldType\\n    parentValue {\\n      __typename\\n      ... on SwitchValueType {\\n        enabled\\n      }\\n      ... on TextValueType {\\n        text\\n      }\\n      ... on ChoiceValueType {\\n        id\\n      }\\n    }\\n    ownMeta {\\n      __typename\\n      ... on ChoiceMetaType {\\n        fieldType\\n        helperText\\n        label\\n        defaultValue\\n        options {\\n          text\\n          value\\n        }\\n        required\\n      }\\n      ... on TextMetaType {\\n        fieldType\\n        helperText\\n        label\\n        inputType\\n        min\\n        max\\n        maxLength\\n        minLength\\n        required\\n      }\\n      ... on SwitchMetaType {\\n        fieldType\\n        label\\n        disabled\\n        required\\n      }\\n    }\\n    childrenMeta {\\n      fieldType\\n      parentValue {\\n        __typename\\n        ... on SwitchValueType {\\n          enabled\\n        }\\n        ... on TextValueType {\\n          text\\n        }\\n        ... on ChoiceValueType {\\n          id\\n        }\\n      }\\n      ownMeta {\\n        __typename\\n        ... on ChoiceMetaType {\\n          fieldType\\n          helperText\\n          label\\n          defaultValue\\n          options {\\n            text\\n            value\\n          }\\n          required\\n        }\\n        ... on TextMetaType {\\n          fieldType\\n          helperText\\n          label\\n          inputType\\n          min\\n          max\\n          maxLength\\n          minLength\\n          required\\n        }\\n        ... on SwitchMetaType {\\n          fieldType\\n          label\\n          disabled\\n          required\\n        }\\n        ... on NestedMetaType {\\n          parentValue {\\n            __typename\\n            ... on SwitchValueType {\\n              enabled\\n            }\\n            ... on TextValueType {\\n              text\\n            }\\n            ... on ChoiceValueType {\\n              id\\n            }\\n          }\\n          ownMeta {\\n            __typename\\n            ... on ChoiceMetaType {\\n              fieldType\\n              helperText\\n              label\\n              defaultValue\\n              options {\\n                text\\n                value\\n              }\\n              required\\n            }\\n            ... on TextMetaType {\\n              fieldType\\n              helperText\\n              label\\n              inputType\\n              min\\n              max\\n              maxLength\\n              minLength\\n              required\\n            }\\n            ... on SwitchMetaType {\\n              fieldType\\n              label\\n              disabled\\n              required\\n            }\\n          }\\n          childrenMeta {\\n            fieldType\\n            parentValue {\\n              __typename\\n              ... on SwitchValueType {\\n                enabled\\n              }\\n              ... on TextValueType {\\n                text\\n              }\\n              ... on ChoiceValueType {\\n                id\\n              }\\n            }\\n            ownMeta {\\n              __typename\\n              ... on ChoiceMetaType {\\n                fieldType\\n                helperText\\n                label\\n                defaultValue\\n                options {\\n                  text\\n                  value\\n                }\\n                required\\n              }\\n              ... on TextMetaType {\\n                fieldType\\n                helperText\\n                label\\n                inputType\\n                min\\n                max\\n                maxLength\\n                minLength\\n                required\\n              }\\n              ... on SwitchMetaType {\\n                fieldType\\n                label\\n                disabled\\n                required\\n              }\\n            }\\n          }\\n        }\\n      }\\n      childrenMeta {\\n        fieldType\\n        parentValue {\\n          __typename\\n          ... on SwitchValueType {\\n            enabled\\n          }\\n          ... on TextValueType {\\n            text\\n          }\\n          ... on ChoiceValueType {\\n            id\\n          }\\n        }\\n        ownMeta {\\n          __typename\\n          ... on ChoiceMetaType {\\n            fieldType\\n            helperText\\n            label\\n            defaultValue\\n            options {\\n              text\\n              value\\n            }\\n            required\\n          }\\n          ... on TextMetaType {\\n            fieldType\\n            helperText\\n            label\\n            inputType\\n            min\\n            max\\n            maxLength\\n            minLength\\n            required\\n          }\\n          ... on SwitchMetaType {\\n            fieldType\\n            label\\n            disabled\\n            required\\n          }\\n          ... on NestedMetaType {\\n            parentValue {\\n              __typename\\n              ... on SwitchValueType {\\n                enabled\\n              }\\n              ... on TextValueType {\\n                text\\n              }\\n              ... on ChoiceValueType {\\n                id\\n              }\\n            }\\n            ownMeta {\\n              __typename\\n              ... on ChoiceMetaType {\\n                fieldType\\n                helperText\\n                label\\n                defaultValue\\n                options {\\n                  text\\n                  value\\n                }\\n                required\\n              }\\n              ... on TextMetaType {\\n                fieldType\\n                helperText\\n                label\\n                inputType\\n                min\\n                max\\n                maxLength\\n                minLength\\n                required\\n              }\\n              ... on SwitchMetaType {\\n                fieldType\\n                label\\n                disabled\\n                required\\n              }\\n            }\\n            childrenMeta {\\n              fieldType\\n              parentValue {\\n                __typename\\n                ... on SwitchValueType {\\n                  enabled\\n                }\\n                ... on TextValueType {\\n                  text\\n                }\\n                ... on ChoiceValueType {\\n                  id\\n                }\\n              }\\n              ownMeta {\\n                __typename\\n                ... on ChoiceMetaType {\\n                  fieldType\\n                  helperText\\n                  label\\n                  defaultValue\\n                  options {\\n                    text\\n                    value\\n                  }\\n                  required\\n                }\\n                ... on TextMetaType {\\n                  fieldType\\n                  helperText\\n                  label\\n                  inputType\\n                  min\\n                  max\\n                  maxLength\\n                  minLength\\n                  required\\n                }\\n                ... on SwitchMetaType {\\n                  fieldType\\n                  label\\n                  disabled\\n                  required\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n  value {\\n    ownValue {\\n      __typename\\n      ... on SwitchValueType {\\n        enabled\\n      }\\n      ... on TextValueType {\\n        text\\n      }\\n      ... on ChoiceValueType {\\n        id\\n      }\\n    }\\n    childrenValue {\\n      ownValue {\\n        __typename\\n        ... on SwitchValueType {\\n          enabled\\n        }\\n        ... on TextValueType {\\n          text\\n        }\\n        ... on ChoiceValueType {\\n          id\\n        }\\n      }\\n      childrenValue {\\n        ownValue {\\n          __typename\\n          ... on SwitchValueType {\\n            enabled\\n          }\\n          ... on TextValueType {\\n            text\\n          }\\n          ... on ChoiceValueType {\\n            id\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\n            \"metadata\": {}\n        }\n    } as any;\n})();\n(node as any).hash = 'ed225d47aecc17d1f1a60fd157f7e42e';\nexport default node;\n","import { FieldTypeEnum as FieldType } from './components/modules/task/fields/__generated__/ChoiceFieldFragmentMeta.graphql';\nimport { FieldIdEnum as FieldId } from './components/modules/task/fragment/__generated__/useTaskFragment.graphql';\nimport { TaskTypeEnum as TaskType } from './components/modules/task-type-list/fragment/__generated__/useTaskTypeFragment.graphql';\nimport { TaskStatusEnum as TaskStatus } from './mutations/__generated__/updateTaskListStatusFilterSettingMutation.graphql';\n\nexport type ExcludeFutureAdded<T> = Omit<T, '%future added value'>;\nexport type UnionKeyToValue<U extends string, V = U> = {\n  [K in U]: V;\n};\n\ntype KEYOF_TYPE_VALUE_MAP<T, V> = {\n  [K in keyof T]: V;\n};\n\nexport type MODULE = 'settings' | 'task' | 'taskList' | 'taskTypeList';\n\nexport const ITEMS_PER_PAGE = 5;\n\nexport const MODULES_IDS: { [key: string]: MODULE } = {\n  SETTINGS: 'settings',\n  TASK: 'task',\n  TASK_LIST: 'taskList',\n  TASK_TYPE_LIST: 'taskTypeList',\n};\n\nexport const FIELD_ID: ExcludeFutureAdded<UnionKeyToValue<FieldId>> = {\n  TITLE: 'TITLE',\n  PRIORITY: 'PRIORITY',\n  PROGRESS: 'PROGRESS',\n  ACTIVE: 'ACTIVE',\n  STATUS: 'STATUS',\n  DATE: 'DATE',\n  DATE_TIME: 'DATE_TIME',\n  DURATION: 'DURATION',\n  LOCATION: 'LOCATION',\n  PERSON: 'PERSON',\n  NOTE: 'NOTE',\n  ACTION: 'ACTION',\n  CYCLE: 'CYCLE',\n  NOTIFICATIONS: 'NOTIFICATIONS',\n};\n\nexport const FIELD_TYPE: ExcludeFutureAdded<UnionKeyToValue<FieldType>> = {\n  CHOICE: 'CHOICE',\n  SLIDER: 'SLIDER',\n  SWITCH: 'SWITCH',\n  TEXT: 'TEXT',\n  NESTED: 'NESTED',\n};\n\nexport type FIELD_TYPE_VALUE_MAP<V> = KEYOF_TYPE_VALUE_MAP<typeof FIELD_TYPE, V>;\n\nexport type DEVICE = 'desktop' | 'mobile' | '';\n\nexport const DEVICES: { [key: string]: DEVICE } = {\n  DESKTOP: 'desktop',\n  MOBILE: 'mobile',\n  OTHER: '',\n};\n\nexport type STATUS = '201' | '408' | '410';\n\nexport const STATUSES: { [key: string]: STATUS } = {\n  OK: '201',\n  REQUEST_TIMEOUT: '408',\n  NOT_REGISTERED: '410',\n};\n\nexport const TASK_TYPE: ExcludeFutureAdded<UnionKeyToValue<TaskType>> = {\n  EVENT: 'EVENT',\n  GOAL: 'GOAL',\n  MEETING: 'MEETING',\n  ROUTINE: 'ROUTINE',\n  TODO: 'TODO',\n};\n\nexport type TASK_TYPE_VALUE_MAP<V> = KEYOF_TYPE_VALUE_MAP<typeof TASK_TYPE, V>;\n\nexport const TASK_STATUSES: ExcludeFutureAdded<UnionKeyToValue<TaskStatus>> = {\n  TODO: 'TODO',\n  IN_PROGRESS: 'IN_PROGRESS',\n  DONE: 'DONE',\n};\n\nexport type FieldTypeEnum = FieldType;\nexport type FieldIdEnum = FieldId;\nexport type TaskTypeEnum = TaskType;\nexport type TaskStatusEnum = TaskStatus;\n\nexport const DATE_TIME_FORMAT = `YYYY-MM-DDTHH:mm`;\n\n// eslint-disable-next-line no-undef\nexport const HOST = process.env.REACT_APP_GRAPHQL_HOST\n  ? // eslint-disable-next-line no-undef\n    process.env.REACT_APP_GRAPHQL_HOST.slice(0, -8)\n  : '';\n","import { createContext } from 'react';\nimport { TaskTypeEnum } from '../constans';\n\nexport interface TaskParams {\n  taskType: TaskTypeEnum;\n  taskId: string;\n}\n\nexport interface AppContextValue {\n  openedTasksParams: TaskParams[];\n}\n\nexport interface AppContextProps {\n  value: AppContextValue;\n\n  addTaskParam(taskParams: TaskParams): void;\n  removeTaskParam(taskParams: TaskParams): void;\n}\n\nconst AppContext = createContext<AppContextProps>({\n  value: {\n    openedTasksParams: [],\n  },\n\n  addTaskParam(_taskParams: TaskParams): void {\n    return;\n  },\n  removeTaskParam(_taskParams: TaskParams): void {\n    return;\n  },\n});\n\nexport default AppContext;\n","import { createStyles } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles(() =>\n  createStyles({\n    remove: {\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      cursor: 'pointer',\n    },\n    zoom: {\n      position: 'absolute',\n      top: 0,\n      cursor: 'pointer',\n    },\n  }),\n);\n","import { IconButton } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { Clear, ZoomIn } from '@material-ui/icons';\nimport React, { Children, FC, useCallback, useState } from 'react';\nimport { Layout, Layouts, Responsive, WidthProvider } from 'react-grid-layout';\nimport { useHistory } from 'react-router-dom';\nimport useResponsiveGridStyles from './useResponsiveGridStyles';\n\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nfunction getFromLS(key: string): Layouts | null {\n  let ls = {};\n\n  if (localStorage) {\n    try {\n      ls = JSON.parse(localStorage.getItem('rgl-8') || '') || {};\n    } catch (e) {\n      /*Ignore*/\n    }\n  }\n\n  return ls[key];\n}\n\nfunction saveToLS(key: string, value: Layouts) {\n  if (localStorage) {\n    localStorage.setItem(\n      'rgl-8',\n      JSON.stringify({\n        [key]: value,\n      }),\n    );\n  }\n}\n\nconst ResponsiveGrid: FC = props => {\n  const { children } = props;\n  const [layouts, setLayouts] = useState(JSON.parse(JSON.stringify(getFromLS('layouts') || {})));\n\n  const resetLayout = useCallback(() => {\n    setLayouts({});\n  }, [setLayouts]);\n\n  const onLayoutChange = useCallback(\n    (_currentLayout: Layout[], allLayouts: Layouts) => {\n      saveToLS('layouts', allLayouts);\n      setLayouts(allLayouts);\n    },\n    [setLayouts],\n  );\n\n  return (\n    <div>\n      <button onClick={resetLayout}>Reset Layout</button>\n      <ResponsiveReactGridLayout\n        className=\"layout\"\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={50}\n        layouts={layouts}\n        onLayoutChange={onLayoutChange}\n      >\n        {Children.map(children, (node, index) => (\n          <Paper\n            key={index}\n            style={{ overflow: 'scroll' }}\n            data-grid={{ w: 2, h: 3, x: index * 2, y: 0, minW: 2, minH: 3 }}\n          >\n            {node}\n          </Paper>\n        ))}\n      </ResponsiveReactGridLayout>\n    </div>\n  );\n};\n\nexport interface ResponsiveGridItemProps {\n  path: string;\n  fixed?: boolean;\n\n  onRemove(moduleId: string): void;\n}\n\nexport const ResponsiveGridItem: FC<ResponsiveGridItemProps> = props => {\n  const { children, path, fixed, onRemove } = props;\n  const history = useHistory();\n  const classes = useResponsiveGridStyles();\n\n  const handleRemove = useCallback(() => {\n    onRemove(path);\n  }, [path, onRemove]);\n\n  const handleZoom = useCallback(() => {\n    history.push(path);\n  }, [history, path]);\n\n  return (\n    <div>\n      {children}\n      {!fixed && (\n        <IconButton className={classes.remove} onClick={handleRemove}>\n          <Clear />\n        </IconButton>\n      )}\n      <IconButton className={classes.zoom} onClick={handleZoom}>\n        <ZoomIn />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default ResponsiveGrid;\n","import { IconButton, Menu, MenuItem } from '@material-ui/core';\nimport { MoreVert } from '@material-ui/icons';\nimport React, { FC, MouseEvent, useState } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { MODULES_IDS } from '../../../constans';\n\nconst AppMenu: FC = () => {\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = useState<MouseEvent<HTMLButtonElement>['currentTarget'] | null>(\n    null,\n  );\n  const { isExact: gridView } = useRouteMatch('/dashboard') || {};\n\n  const handleClick = (event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const actions = [\n    {\n      label: 'Log out',\n      action: () => {\n        history.push('/login');\n      },\n    },\n    {\n      label: gridView ? 'Hide grid' : 'Show grid',\n      action: () => {\n        history.push(gridView ? `/app/${MODULES_IDS.TASK_LIST}` : '/dashboard');\n      },\n    },\n    {\n      label: 'Show settings',\n      action: () => {\n        history.push(`/app/${MODULES_IDS.SETTINGS}`);\n      },\n    },\n  ];\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        right: 10,\n        zIndex: 9,\n      }}\n    >\n      <IconButton\n        aria-label=\"More\"\n        aria-haspopup=\"true\"\n        aria-owns={anchorEl ? 'long-menu' : undefined}\n        onClick={handleClick}\n      >\n        <MoreVert />\n      </IconButton>\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose}>\n        {actions.map(({ label, action }) => (\n          <MenuItem key={label} onClick={action}>\n            {label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default AppMenu;\n","import graphql from 'babel-plugin-relay/macro';\nimport { commitMutation } from 'react-relay';\nimport environment from '../environment';\nimport {\n  cleanApplicationMutation,\n  cleanApplicationMutationInput,\n  cleanApplicationMutationResponse,\n} from './__generated__/cleanApplicationMutation.graphql';\n\nconst mutation = graphql`\n  mutation cleanApplicationMutation($input: cleanApplicationMutationInput!) {\n    cleanApplication(input: $input) {\n      clientMutationId\n      navigationUrl\n    }\n  }\n`;\n\nexport default ({\n  ownerId,\n}: cleanApplicationMutationInput): Promise<cleanApplicationMutationResponse> =>\n  new Promise((onCompleted, onError): void => {\n    const variables = { input: { ownerId } };\n\n    commitMutation<cleanApplicationMutation>(environment, {\n      mutation,\n      variables,\n      onCompleted,\n      onError,\n    });\n  });\n","import graphql from 'babel-plugin-relay/macro';\nimport { commitMutation, DeclarativeMutationConfig } from 'react-relay';\nimport environment from '../environment';\nimport {\n  deleteSubscriptionMutation,\n  deleteSubscriptionMutationInput,\n  deleteSubscriptionMutationResponse,\n} from './__generated__/deleteSubscriptionMutation.graphql';\n\nconst mutation = graphql`\n  mutation deleteSubscriptionMutation($input: deleteSubscriptionMutationInput!) {\n    deleteSubscription(input: $input) {\n      clientMutationId\n      subscriptionId\n    }\n  }\n`;\n\nexport default ({\n  parentID,\n  subscriptionId,\n}: deleteSubscriptionMutationInput & { parentID: string }): Promise<\n  deleteSubscriptionMutationResponse\n> =>\n  new Promise((onCompleted, onError): void => {\n    const variables = { input: { subscriptionId } };\n    const configs: DeclarativeMutationConfig[] = [\n      {\n        type: 'RANGE_DELETE',\n        parentID,\n        connectionKeys: [\n          {\n            key: 'Notifications_subscriptions',\n          },\n        ],\n        pathToConnection: ['notifications', 'subscriptions'],\n        deletedIDFieldName: 'subscriptionId',\n      },\n    ];\n\n    commitMutation<deleteSubscriptionMutation>(environment, {\n      configs,\n      mutation,\n      variables,\n      onCompleted,\n      onError,\n    });\n  });\n","import graphql from 'babel-plugin-relay/macro';\nimport { commitMutation } from 'react-relay';\nimport environment from '../environment';\nimport {\n  saveNotificationsGeneralSettingMutation,\n  saveNotificationsGeneralSettingMutationInput,\n  saveNotificationsGeneralSettingMutationResponse,\n} from './__generated__/saveNotificationsGeneralSettingMutation.graphql';\n\nconst mutation = graphql`\n  mutation saveNotificationsGeneralSettingMutation(\n    $input: saveNotificationsGeneralSettingMutationInput!\n  ) {\n    saveNotificationsGeneralSetting(input: $input) {\n      clientMutationId\n      savedGeneral {\n        ...NotificationsGeneralFragment_data\n      }\n    }\n  }\n`;\n\nexport default ({\n  general,\n}: saveNotificationsGeneralSettingMutationInput): Promise<\n  saveNotificationsGeneralSettingMutationResponse\n> =>\n  new Promise((onCompleted, onError): void => {\n    const variables = { input: { general } };\n\n    commitMutation<saveNotificationsGeneralSettingMutation>(environment, {\n      mutation,\n      variables,\n      onCompleted,\n      onError,\n    });\n  });\n","import { createStyles, Theme } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    wrapper: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    list: {\n      width: '100%',\n    },\n  }),\n);\n","import {\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  Switch,\n  Typography,\n} from '@material-ui/core';\nimport { ExpandMore, Slideshow, Vibration } from '@material-ui/icons';\nimport graphql from 'babel-plugin-relay/macro';\nimport React, { ChangeEvent, FC } from 'react';\nimport { createFragmentContainer } from 'react-relay';\nimport saveNotificationsGeneralSettingMutation from '../../../../../mutations/saveNotificationsGeneralSettingMutation';\n// eslint-disable-next-line @typescript-eslint/camelcase\nimport { NotificationsGeneralFragment_data } from './__generated__/NotificationsGeneralFragment_data.graphql';\nimport useNotificationsGeneralFragmentStyles from './useNotificationsGeneralFragmentStyles';\n\ninterface NotificationsGeneralProps {\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  data: NotificationsGeneralFragment_data;\n}\n\nconst NotificationsGeneral: FC<NotificationsGeneralProps> = props => {\n  const {\n    data: { show, vibrate },\n  } = props;\n  const classes = useNotificationsGeneralFragmentStyles();\n\n  const handleShowChange = async (\n    _: ChangeEvent<HTMLInputElement>,\n    show: boolean,\n  ): Promise<void> => {\n    await saveNotificationsGeneralSettingMutation({\n      general: {\n        ...props.data,\n        show,\n      },\n    });\n  };\n\n  const handleVibrateChange = async (\n    _: ChangeEvent<HTMLInputElement>,\n    vibrate: boolean,\n  ): Promise<void> => {\n    await saveNotificationsGeneralSettingMutation({\n      general: {\n        ...props.data,\n        vibrate,\n      },\n    });\n  };\n\n  return (\n    <ExpansionPanel className={classes.wrapper}>\n      <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n        <Typography>General</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <List className={classes.list}>\n          <ListItem>\n            <ListItemIcon>\n              <Slideshow />\n            </ListItemIcon>\n            <ListItemText primary=\"Show\" />\n            <ListItemSecondaryAction>\n              <Switch onChange={handleShowChange} checked={show} />\n            </ListItemSecondaryAction>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <Vibration />\n            </ListItemIcon>\n            <ListItemText primary=\"Vibrate\" />\n            <ListItemSecondaryAction>\n              <Switch onChange={handleVibrateChange} checked={vibrate} />\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n};\n\nexport default createFragmentContainer(NotificationsGeneral, {\n  data: graphql`\n    fragment NotificationsGeneralFragment_data on NotificationsGeneralSettingType {\n      show\n      vibrate\n    }\n  `,\n});\n","import graphql from 'babel-plugin-relay/macro';\nimport { commitMutation } from 'react-relay';\nimport environment from '../environment';\nimport {\n  saveNotificationsTypesSettingMutation,\n  saveNotificationsTypesSettingMutationInput,\n  saveNotificationsTypesSettingMutationResponse,\n} from './__generated__/saveNotificationsTypesSettingMutation.graphql';\n\nconst mutation = graphql`\n  mutation saveNotificationsTypesSettingMutation(\n    $input: saveNotificationsTypesSettingMutationInput!\n  ) {\n    saveNotificationsTypesSetting(input: $input) {\n      savedTypes {\n        ...NotificationsTypesFragment_data\n      }\n    }\n  }\n`;\n\nexport default ({\n  types,\n}: saveNotificationsTypesSettingMutationInput): Promise<\n  saveNotificationsTypesSettingMutationResponse\n> =>\n  new Promise((onCompleted, onError): void => {\n    const variables = { input: { types } };\n\n    commitMutation<saveNotificationsTypesSettingMutation>(environment, {\n      mutation,\n      variables,\n      onCompleted,\n      onError,\n    });\n  });\n","import { createStyles, Theme } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    icon: {\n      fontSize: theme.spacing(3),\n    },\n  }),\n);\n","import { SvgIconProps } from '@material-ui/core/SvgIcon';\nimport { DateRange, Group, LocalOffer, Settings, Update } from '@material-ui/icons';\nimport classNames from 'classnames';\nimport React, { FC } from 'react';\nimport { TASK_TYPE_VALUE_MAP, TaskTypeEnum } from '../../../constans';\nimport useTaskTypeIconStyles from './useTaskTypeIconStyles';\n\nconst ICONS: TASK_TYPE_VALUE_MAP<React.ComponentType<SvgIconProps>> = {\n  GOAL: Settings,\n  TODO: LocalOffer,\n  ROUTINE: Update,\n  MEETING: Group,\n  EVENT: DateRange,\n};\n\nexport interface TaskTypeIconProps {\n  className?: string;\n  type: TaskTypeEnum;\n}\n\nconst TaskTypeIcon: FC<TaskTypeIconProps> = props => {\n  const { className, type } = props;\n  const classes = useTaskTypeIconStyles();\n  const Icon = ICONS[type];\n\n  return <Icon className={classNames(classes.icon, className)} />;\n};\n\nexport default TaskTypeIcon;\n","import { createStyles, Theme } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    wrapper: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    list: {\n      width: '100%',\n    },\n  }),\n);\n","import {\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  Switch,\n  Typography,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport graphql from 'babel-plugin-relay/macro';\nimport React, { ChangeEvent, FC } from 'react';\nimport { createFragmentContainer } from 'react-relay';\nimport { TASK_TYPE, TaskTypeEnum } from '../../../../../constans';\nimport saveNotificationsTypesSettingMutation from '../../../../../mutations/saveNotificationsTypesSettingMutation';\nimport TaskTypeIcon from '../../../../display/task-type-icon/TaskTypeIcon';\n// eslint-disable-next-line @typescript-eslint/camelcase\nimport { NotificationsTypesFragment_data } from './__generated__/NotificationsTypesFragment_data.graphql';\nimport useNotificationsTypesFragmentStyles from './useNotificationsTypesFragmentStyles';\n\ninterface NotificationsTypesProps {\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  data: NotificationsTypesFragment_data;\n}\n\nconst NotificationsTypes: FC<NotificationsTypesProps> = props => {\n  const { data } = props;\n  const classes = useNotificationsTypesFragmentStyles();\n  const getChangeHandler = (key: string) => async (\n    _: ChangeEvent<HTMLInputElement>,\n    checked: boolean,\n  ): Promise<void> => {\n    await saveNotificationsTypesSettingMutation({\n      types: {\n        ...props.data,\n        ...{\n          [key]: checked,\n        },\n      },\n    });\n  };\n\n  return (\n    <ExpansionPanel className={classes.wrapper}>\n      <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n        <Typography>Types</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <List className={classes.list}>\n          {Object.keys(TASK_TYPE).map(key => (\n            <ListItem key={key}>\n              <ListItemIcon>\n                <TaskTypeIcon type={key as TaskTypeEnum} />\n              </ListItemIcon>\n              <ListItemText primary={key.toLowerCase()} />\n              <ListItemSecondaryAction>\n                <Switch\n                  onChange={getChangeHandler(`${key.toLowerCase()}s`)}\n                  checked={data[`${key.toLowerCase()}s`]}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n};\n\nexport default createFragmentContainer(NotificationsTypes, {\n  data: graphql`\n    fragment NotificationsTypesFragment_data on NotificationsTypesSettingType {\n      events\n      goals\n      meetings\n      routines\n      todos\n    }\n  `,\n});\n","import { createStyles, Theme } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    accountContent: {\n      display: 'flex',\n      justifyContent: 'center',\n    },\n    subscriptionsWrapper: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    list: {\n      width: '100%',\n    },\n    section: {\n      marginBottom: theme.spacing(2),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n    subscriptionButton: {\n      textAlign: 'right',\n      margin: theme.spacing(1),\n      padding: theme.spacing(1),\n    },\n    subscriptionsPaginationExpansionPanel: {\n      paddingRight: theme.spacing(1),\n    },\n    notificationsInfoWrapper: {\n      textAlign: 'right',\n      paddingRight: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n    doneButton: {\n      zIndex: 9,\n      position: 'fixed',\n      bottom: 20,\n      right: 20,\n    },\n    doneButtonIcon: {\n      color: '#8BC34A',\n      fontSize: 72,\n    },\n  }),\n);\n","import graphql from 'babel-plugin-relay/macro';\nimport { commitMutation } from 'react-relay';\nimport environment from '../environment';\nimport {\n  testSubscriptionMutation,\n  testSubscriptionMutationInput,\n  testSubscriptionMutationResponse,\n} from './__generated__/testSubscriptionMutation.graphql';\n\nconst mutation = graphql`\n  mutation testSubscriptionMutation($input: testSubscriptionMutationInput!) {\n    testSubscription(input: $input) {\n      clientMutationId\n      statusCode\n    }\n  }\n`;\n\nexport default ({\n  subscriptionId,\n}: testSubscriptionMutationInput): Promise<testSubscriptionMutationResponse> =>\n  new Promise((onCompleted, onError): void => {\n    const variables = { input: { subscriptionId } };\n\n    commitMutation<testSubscriptionMutation>(environment, {\n      mutation,\n      variables,\n      onCompleted,\n      onError,\n    });\n  });\n","import { createStyles } from '@material-ui/core';\nimport { green, red } from '@material-ui/core/colors';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles(() =>\n  createStyles({\n    green: {\n      color: green['500'],\n    },\n    red: {\n      color: red['500'],\n    },\n    listItem: {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    listItemIcon: {\n      marginRight: 0,\n    },\n  }),\n);\n","import {\n  IconButton,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n} from '@material-ui/core';\nimport {\n  CheckCircle,\n  Computer,\n  Delete,\n  DevicesOther,\n  HelpOutline,\n  HighlightOff,\n  Smartphone,\n} from '@material-ui/icons';\nimport CloudOffIcon from '@material-ui/icons/CloudOff';\nimport graphql from 'babel-plugin-relay/macro';\nimport React, { FC, useState } from 'react';\nimport { createFragmentContainer } from 'react-relay';\nimport { DEVICES, STATUSES } from '../../../../../constans';\nimport testSubscriptionMutation from '../../../../../mutations/testSubscriptionMutation';\n// eslint-disable-next-line @typescript-eslint/camelcase\nimport { SubscriptionFragment_data } from './__generated__/SubscriptionFragment_data.graphql';\nimport useSubscriptionFragmentStyles from '../pagination/useSubscriptionFragmentStyles';\n\nconst DEVICES_ICONS = {\n  [DEVICES.DESKTOP]: Computer,\n  [DEVICES.MOBILE]: Smartphone,\n  [DEVICES.OTHER]: DevicesOther,\n};\n\ninterface SubscriptionFragmentProps {\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  data: SubscriptionFragment_data;\n\n  onDelete(subscriptionId: string): void;\n}\n\nconst SubscriptionFragment: FC<SubscriptionFragmentProps> = props => {\n  const {\n    data: { id, userDeviceType, userAgent },\n  } = props;\n  const classes = useSubscriptionFragmentStyles();\n  const [statusCode, setStatusCode] = useState('');\n\n  const handleDelete = () => {\n    props.onDelete(props.data.id);\n  };\n\n  const handleTest = async () => {\n    const { testSubscription } = await testSubscriptionMutation({\n      subscriptionId: props.data.id,\n    });\n\n    if (testSubscription) {\n      setStatusCode(testSubscription.statusCode);\n    }\n  };\n\n  const UserDeviceTypeIcon = DEVICES_ICONS[userDeviceType] || DEVICES_ICONS[DEVICES.OTHER];\n\n  return (\n    <ListItem key={id} className={classes.listItem}>\n      <ListItemIcon className={classes.listItemIcon}>\n        <UserDeviceTypeIcon />\n      </ListItemIcon>\n      <ListItemText primary={userAgent} />\n      <ListItemSecondaryAction>\n        <IconButton onClick={handleDelete} aria-label=\"Delete\">\n          <Delete />\n        </IconButton>\n        <IconButton onClick={handleTest} aria-label=\"Test\">\n          {!statusCode && <HelpOutline />}\n          {statusCode === STATUSES.OK && <CheckCircle className={classes.green} />}\n          {statusCode === STATUSES.NOT_REGISTERED && <HighlightOff className={classes.red} />}\n          {statusCode === STATUSES.REQUEST_TIMEOUT && <CloudOffIcon />}\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default createFragmentContainer<SubscriptionFragmentProps>(SubscriptionFragment, {\n  data: graphql`\n    fragment SubscriptionFragment_data on SubscriptionType {\n      id\n      userAgent\n      userDeviceType\n    }\n  `,\n});\n","import { List } from '@material-ui/core';\nimport graphql from 'babel-plugin-relay/macro';\nimport React, { FC } from 'react';\nimport { createPaginationContainer, RelayPaginationProp } from 'react-relay';\nimport Loader from '../../../../display/loader/Loader';\n// eslint-disable-next-line @typescript-eslint/camelcase\nimport { SubscriptionsPagination_data } from './__generated__/SubscriptionsPagination_data.graphql';\nimport SubscriptionFragment from '../fragment/SubscriptionFragment';\n\ninterface SubscriptionsProps {\n  className?: string;\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  data: SubscriptionsPagination_data;\n  relay: RelayPaginationProp;\n\n  onDelete(subscriptionId: string): void;\n}\n\nconst Subscriptions: FC<SubscriptionsProps> = props => {\n  const { className, data, onDelete } = props;\n  const {\n    subscriptions: { edges },\n  } = data;\n\n  if (!edges) {\n    return <Loader />;\n  }\n\n  return (\n    <List className={className}>\n      {edges.map(\n        (edge): React.ReactNode =>\n          edge &&\n          edge.node && (\n            <SubscriptionFragment key={edge.node.id} data={edge.node} onDelete={onDelete} />\n          ),\n      )}\n    </List>\n  );\n};\n\nexport default createPaginationContainer<SubscriptionsProps>(\n  Subscriptions,\n  {\n    data: graphql`\n      fragment SubscriptionsPagination_data on NotificationsType {\n        subscriptions(first: $count, after: $after)\n          @connection(key: \"Notifications_subscriptions\") {\n          edges {\n            node {\n              id\n              ...SubscriptionFragment_data\n            }\n          }\n        }\n      }\n    `,\n  },\n  {\n    direction: 'forward',\n    getConnectionFromProps(props) {\n      return props.data && props.data.subscriptions;\n    },\n    getFragmentVariables(prevVars, totalCount) {\n      return {\n        ...prevVars,\n        count: totalCount,\n      };\n    },\n    getVariables(_props, { count, cursor }) {\n      return { count, cursor };\n    },\n    query: graphql`\n      query SubscriptionsPaginationQuery($count: Int!, $after: String) {\n        app {\n          settings {\n            notifications {\n              ...SubscriptionsPagination_data\n            }\n          }\n        }\n      }\n    `,\n  },\n);\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Grid,\n  IconButton,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { DeleteForever, Done, ExpandMore } from '@material-ui/icons';\nimport graphql from 'babel-plugin-relay/macro';\nimport React, { FC, useCallback, useState } from 'react';\nimport { createFragmentContainer } from 'react-relay';\nimport { useHistory } from 'react-router-dom';\nimport { MODULES_IDS } from '../../../../constans';\nimport cleanApplicationMutation from '../../../../mutations/cleanApplicationMutation';\nimport deleteSubscriptionMutation from '../../../../mutations/deleteSubscriptionMutation';\nimport registerUserSubscription from '../../../../service-worker/registerUserSubscription';\nimport NotificationsGeneralFragment from '../notifications/general/NotificationsGeneralFragment';\nimport NotificationsTypesFragment from '../notifications/types/NotificationsTypesFragment';\nimport useSettingsFragmentStyles from '../subscriptions/fragment/useSettingsFragmentStyles';\nimport SubscriptionsPagination from '../subscriptions/pagination/SubscriptionsPagination';\nimport { SettingsFragment_data as SettingsFragmentResponse } from './__generated__/SettingsFragment_data.graphql';\n\nexport interface SettingsFragmentProps {\n  data: SettingsFragmentResponse;\n}\n\nconst SettingsFragment: FC<SettingsFragmentProps> = props => {\n  const classes = useSettingsFragmentStyles();\n  const [cleanApplicationDialogOpen, setCleanApplicationDialogOpen] = useState(false);\n  const history = useHistory();\n\n  const handleDone = useCallback(() => {\n    history.push(`/app/${MODULES_IDS.TASK_LIST}`);\n  }, [history]);\n\n  const handleCleanApplicationDialogClose = () => {\n    setCleanApplicationDialogOpen(false);\n  };\n\n  const handleCleanApplicationDialogOpen = () => {\n    setCleanApplicationDialogOpen(true);\n  };\n\n  const handleCleanApplication = async () => {\n    const { cleanApplication } = await cleanApplicationMutation({\n      ownerId: props.data.ownerId,\n    });\n\n    window.location.href =\n      cleanApplication && cleanApplication.navigationUrl ? cleanApplication.navigationUrl : '';\n  };\n\n  const handleActivateNotifications = async () => {\n    try {\n      const registration = await navigator.serviceWorker.ready;\n\n      await registerUserSubscription(registration);\n\n      // this.forceUpdate();\n    } catch (e) {\n      console.error(['handleActivateNotifications.error'], e);\n      // this.forceUpdate();\n    }\n  };\n\n  const onDeleteSubscription = async (subscriptionId: string) => {\n    await deleteSubscriptionMutation({\n      subscriptionId,\n      parentID: props.data.notifications.id,\n    });\n  };\n\n  return (\n    <div>\n      <Paper className={classes.section}>\n        <Typography align=\"center\" variant=\"h4\">\n          Notifications\n        </Typography>\n        <Grid container spacing={1}>\n          <Grid item xs={12} md={6} lg={4}>\n            <NotificationsGeneralFragment data={props.data.notifications.general} />\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            <NotificationsTypesFragment data={props.data.notifications.types} />\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            <ExpansionPanel className={classes.subscriptionsWrapper}>\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <Typography>Subscriptions</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.subscriptionsPaginationExpansionPanel}>\n                <SubscriptionsPagination\n                  className={classes.list}\n                  data={props.data.notifications}\n                  onDelete={onDeleteSubscription}\n                />\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          </Grid>\n        </Grid>\n        {Notification.permission === 'granted' && (\n          <div className={classes.notificationsInfoWrapper}>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Notifications are active.\n            </Typography>\n          </div>\n        )}\n        {Notification.permission === 'default' && (\n          <div className={classes.notificationsInfoWrapper}>\n            <Button onClick={handleActivateNotifications}>Activate notifications</Button>\n          </div>\n        )}\n        {Notification.permission === 'denied' && (\n          <div className={classes.notificationsInfoWrapper}>\n            <Typography color=\"textSecondary\" gutterBottom>\n              You have denied notifications permission.\n              <br />\n              You can change it in your browser notifications options.\n            </Typography>\n          </div>\n        )}\n      </Paper>\n      <Paper className={classes.section}>\n        <Typography align=\"center\" variant=\"h4\">\n          Account\n        </Typography>\n        <div className={classes.accountContent}>\n          <Button color=\"secondary\" onClick={handleCleanApplicationDialogOpen}>\n            Delete account\n            <DeleteForever />\n          </Button>\n          <Dialog\n            open={cleanApplicationDialogOpen}\n            onClose={handleCleanApplicationDialogClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{'Clean application?'}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                It will erase all related data on database.\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCleanApplicationDialogClose} color=\"primary\">\n                Disagree\n              </Button>\n              <Button onClick={handleCleanApplication} color=\"primary\" autoFocus>\n                Agree\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </div>\n      </Paper>\n      <IconButton className={classes.doneButton} color=\"primary\" onClick={handleDone}>\n        <Done className={classes.doneButtonIcon} />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default createFragmentContainer<SettingsFragmentProps>(SettingsFragment, {\n  data: graphql`\n    fragment SettingsFragment_data on SettingsType {\n      id\n      ownerId\n      notifications {\n        id\n        general {\n          ...NotificationsGeneralFragment_data\n        }\n        types {\n          ...NotificationsTypesFragment_data\n        }\n        ...SubscriptionsPagination_data\n      }\n    }\n  `,\n});\n","import graphql from 'babel-plugin-relay/macro';\nimport React, { FC } from 'react';\nimport { QueryRenderer } from 'react-relay';\nimport { ITEMS_PER_PAGE } from '../../../constans';\nimport environment from '../../../environment';\nimport ErrorBoundary from '../../containers/error-boundary/ErrorBoundary';\nimport Loader from '../../display/loader/Loader';\nimport { SettingsQuery as ISettingsQuery } from './__generated__/SettingsQuery.graphql';\nimport SettingsFragment from './fragment/SettingsFragment';\n\nconst SettingsQuery: FC = props => (\n  <ErrorBoundary>\n    <QueryRenderer<ISettingsQuery>\n      variables={{\n        count: ITEMS_PER_PAGE * 10,\n      }}\n      environment={environment}\n      query={graphql`\n        query SettingsQuery($count: Int!, $after: String) {\n          app {\n            settings {\n              id\n              ...SettingsFragment_data\n            }\n          }\n        }\n      `}\n      render={response => {\n        if (response.error) {\n          return <div>{JSON.stringify(response.error)}</div>;\n        } else if (response.props && response.props.app.settings) {\n          return <SettingsFragment data={response.props.app.settings} {...props} />;\n        }\n\n        return <Loader />;\n      }}\n    />\n  </ErrorBoundary>\n);\n\nexport default SettingsQuery;\n","import graphql from 'babel-plugin-relay/macro';\nimport { commitMutation, DeclarativeMutationConfig } from 'react-relay';\nimport environment from '../environment';\nimport {\n  deleteTaskMutation,\n  deleteTaskMutationInput,\n  deleteTaskMutationResponse,\n} from './__generated__/deleteTaskMutation.graphql';\n\nconst mutation = graphql`\n  mutation deleteTaskMutation($input: deleteTaskMutationInput!) {\n    deleteTask(input: $input) {\n      # Aktualnie serwer zwraca null przez co za pewne nie działa jakiś mechanizm relay\n      clientMutationId\n      deletedTaskId\n    }\n  }\n`;\n\nexport default ({\n  id,\n  parentID,\n}: deleteTaskMutationInput & { parentID: string }): Promise<deleteTaskMutationResponse> =>\n  new Promise((onCompleted, onError): void => {\n    const variables = { input: { id } };\n    const configs: DeclarativeMutationConfig[] = [\n      {\n        type: 'RANGE_DELETE',\n        parentID,\n        connectionKeys: [\n          {\n            key: 'TaskList_list',\n          },\n        ],\n        pathToConnection: ['taskList', 'list'],\n        deletedIDFieldName: 'deletedTaskId',\n      },\n    ];\n\n    commitMutation<deleteTaskMutation>(environment, {\n      mutation,\n      configs,\n      variables,\n      onCompleted,\n      onError,\n    });\n  });\n","import graphql from 'babel-plugin-relay/macro';\nimport { commitMutation } from 'react-relay';\nimport { RecordSourceSelectorProxy } from 'relay-runtime';\nimport environment from '../environment';\nimport {\n  updateTaskListStatusFilterSettingMutation,\n  updateTaskListStatusFilterSettingMutationInput,\n  updateTaskListStatusFilterSettingMutationResponse,\n} from './__generated__/updateTaskListStatusFilterSettingMutation.graphql';\n\nconst mutation = graphql`\n  mutation updateTaskListStatusFilterSettingMutation(\n    $input: updateTaskListStatusFilterSettingMutationInput!\n  ) {\n    updateTaskListStatusFilterSetting(input: $input) {\n      clientMutationId\n      status\n    }\n  }\n`;\n\nexport default (\n  { status }: updateTaskListStatusFilterSettingMutationInput,\n  { parentID }: { parentID: string },\n): Promise<updateTaskListStatusFilterSettingMutationResponse> =>\n  new Promise((onCompleted, onError): void => {\n    const variables = { input: { status } };\n\n    commitMutation<updateTaskListStatusFilterSettingMutation>(environment, {\n      mutation,\n      variables,\n      onCompleted,\n      onError,\n      optimisticUpdater: (proxyStore: RecordSourceSelectorProxy) => {\n        const parentRecord = proxyStore.get(parentID);\n        const taskListRecord = parentRecord && parentRecord.getLinkedRecord('taskList');\n        const filtersRecord = taskListRecord && taskListRecord.getLinkedRecord('filters');\n\n        if (filtersRecord) {\n          filtersRecord.setValue(status, 'status');\n        }\n      },\n      updater: (store: RecordSourceSelectorProxy) => {\n        const mutationRecord = store.getRootField('updateTaskListStatusFilterSetting');\n        const parentRecord = store.get(parentID);\n        const taskListRecord = parentRecord && parentRecord.getLinkedRecord('taskList');\n        const filtersRecord = taskListRecord && taskListRecord.getLinkedRecord('filters');\n\n        if (filtersRecord && mutationRecord) {\n          filtersRecord.setValue(mutationRecord.getValue('status'), 'status');\n        }\n      },\n    });\n  });\n","import graphql from 'babel-plugin-relay/macro';\nimport { commitMutation } from 'react-relay';\nimport { RecordSourceSelectorProxy } from 'relay-runtime';\nimport environment from '../environment';\nimport {\n  updateTaskListTaskTypeFilterSettingMutation,\n  updateTaskListTaskTypeFilterSettingMutationInput,\n  updateTaskListTaskTypeFilterSettingMutationResponse,\n} from './__generated__/updateTaskListTaskTypeFilterSettingMutation.graphql';\n\nconst mutation = graphql`\n  mutation updateTaskListTaskTypeFilterSettingMutation(\n    $input: updateTaskListTaskTypeFilterSettingMutationInput!\n  ) {\n    updateTaskListTaskTypeFilterSetting(input: $input) {\n      clientMutationId\n      taskType\n    }\n  }\n`;\n\nexport default (\n  { taskType }: updateTaskListTaskTypeFilterSettingMutationInput,\n  { parentID }: { parentID: string },\n): Promise<updateTaskListTaskTypeFilterSettingMutationResponse> =>\n  new Promise((onCompleted, onError): void => {\n    const variables = { input: { taskType } };\n\n    commitMutation<updateTaskListTaskTypeFilterSettingMutation>(environment, {\n      mutation,\n      variables,\n      onCompleted,\n      onError,\n      optimisticUpdater: (proxyStore: RecordSourceSelectorProxy) => {\n        const parentRecord = proxyStore.get(parentID);\n        const taskListRecord = parentRecord && parentRecord.getLinkedRecord('taskList');\n        const filtersRecord = taskListRecord && taskListRecord.getLinkedRecord('filters');\n\n        if (filtersRecord) {\n          filtersRecord.setValue(taskType, 'taskType');\n        }\n      },\n      updater: (store: RecordSourceSelectorProxy) => {\n        const mutationRecord = store.getRootField('updateTaskListTaskTypeFilterSetting');\n        const parentRecord = store.get(parentID);\n        const taskListRecord = parentRecord && parentRecord.getLinkedRecord('taskList');\n        const filtersRecord = taskListRecord && taskListRecord.getLinkedRecord('filters');\n\n        if (filtersRecord && mutationRecord) {\n          filtersRecord.setValue(mutationRecord.getValue('taskType'), 'taskType');\n        }\n      },\n    });\n  });\n","import graphql from 'babel-plugin-relay/macro';\nimport { commitMutation } from 'react-relay';\nimport { RecordSourceSelectorProxy } from 'relay-runtime';\nimport environment from '../environment';\nimport {\n  updateTaskListTitleFilterSettingMutation,\n  updateTaskListTitleFilterSettingMutationInput,\n  updateTaskListTitleFilterSettingMutationResponse,\n} from './__generated__/updateTaskListTitleFilterSettingMutation.graphql';\n\nconst mutation = graphql`\n  mutation updateTaskListTitleFilterSettingMutation(\n    $input: updateTaskListTitleFilterSettingMutationInput!\n  ) {\n    updateTaskListTitleFilterSetting(input: $input) {\n      clientMutationId\n      title\n    }\n  }\n`;\n\nexport default (\n  { title }: updateTaskListTitleFilterSettingMutationInput,\n  { parentID }: { parentID: string },\n): Promise<updateTaskListTitleFilterSettingMutationResponse> =>\n  new Promise((onCompleted, onError): void => {\n    const variables = { input: { title } };\n\n    commitMutation<updateTaskListTitleFilterSettingMutation>(environment, {\n      mutation,\n      variables,\n      onCompleted,\n      onError,\n      optimisticUpdater: (proxyStore: RecordSourceSelectorProxy) => {\n        const parentRecord = proxyStore.get(parentID);\n        const taskListRecord = parentRecord && parentRecord.getLinkedRecord('taskList');\n        const filtersRecord = taskListRecord && taskListRecord.getLinkedRecord('filters');\n\n        if (filtersRecord) {\n          filtersRecord.setValue(title, 'title');\n        }\n      },\n      updater: (store: RecordSourceSelectorProxy) => {\n        const mutationRecord = store.getRootField('updateTaskListTitleFilterSetting');\n        const parentRecord = store.get(parentID);\n        const taskListRecord = parentRecord && parentRecord.getLinkedRecord('taskList');\n        const filtersRecord = taskListRecord && taskListRecord.getLinkedRecord('filters');\n\n        if (filtersRecord && mutationRecord) {\n          filtersRecord.setValue(mutationRecord.getValue('title'), 'title');\n        }\n      },\n    });\n  });\n","import { createStyles, Theme } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      marginRight: theme.spacing(2),\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    statusFilter: {\n      marginBottom: theme.spacing(3),\n      marginRight: theme.spacing(2),\n      minWidth: theme.spacing(20),\n    },\n    title: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(9),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n      width: '100%',\n    },\n    inputInput: {\n      paddingTop: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n      paddingLeft: theme.spacing(10),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 120,\n        '&:focus': {\n          width: 200,\n        },\n      },\n    },\n    wrapper: {\n      flexDirection: 'column',\n      [theme.breakpoints.up('md')]: {\n        flexDirection: 'row-reverse',\n      },\n    },\n    toolbar: {\n      overflow: 'scroll',\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n  }),\n);\n","import { FormControl, FormControlLabel, InputLabel, NativeSelect } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputBase from '@material-ui/core/InputBase';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { ChangeEvent, FC } from 'react';\nimport { TASK_STATUSES, TASK_TYPE, TaskTypeEnum } from '../../../constans';\nimport { useTaskListQuery } from '../../modules/task-list/__generated__/useTaskListQuery.graphql';\nimport useTaskListBarStyles from './useTaskListBarStyles';\n\nexport interface TaskListBarProps {\n  settings: useTaskListQuery['response']['app']['settings']['taskList'];\n\n  onFilterByTitle(event: ChangeEvent<HTMLInputElement>): void;\n  onFilterByType(event: ChangeEvent<HTMLInputElement>): void;\n  onFilterByStatus(event: ChangeEvent<HTMLSelectElement>): void;\n}\n\nconst TaskListBar: FC<TaskListBarProps> = props => {\n  const { settings, onFilterByTitle, onFilterByType, onFilterByStatus } = props;\n  const {\n    filters: { title, taskType, status },\n  } = settings;\n  const classes = useTaskListBarStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.wrapper}>\n        <Toolbar>\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              value={title}\n              onChange={onFilterByTitle}\n              placeholder=\"Filter by title...\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            />\n          </div>\n        </Toolbar>\n        <div className={classes.grow} />\n        <Toolbar className={classes.toolbar}>\n          <FormControl className={classes.statusFilter}>\n            <InputLabel htmlFor=\"status-filter\">Status</InputLabel>\n            <NativeSelect\n              value={status || ''}\n              onChange={onFilterByStatus}\n              input={<Input id=\"status-filter\" />}\n            >\n              <option value=\"\" />\n              {Object.keys(TASK_STATUSES).map(value => (\n                <option key={value} value={value}>\n                  {value}\n                </option>\n              ))}\n            </NativeSelect>\n          </FormControl>\n          {Object.keys(TASK_TYPE).map(key => (\n            <FormControlLabel\n              key={key}\n              control={\n                <Checkbox\n                  color=\"default\"\n                  checked={taskType.includes(key as TaskTypeEnum)}\n                  onChange={onFilterByType}\n                  value={key}\n                />\n              }\n              label={key}\n            />\n          ))}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default TaskListBar;\n","import { createStyles, Theme } from '@material-ui/core';\nimport { green, grey, red, yellow } from '@material-ui/core/colors';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    actions: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n    },\n    content: {\n      display: 'block',\n    },\n    heading: {\n      maxHeight: '1.8em',\n      overflow: 'scroll',\n      flex: 1,\n      textAlign: 'center',\n      fontSize: theme.typography.pxToRem(20),\n      fontWeight: theme.typography.fontWeightRegular,\n      marginTop: theme.spacing(1),\n    },\n    icon: {\n      fontSize: theme.spacing(5),\n    },\n    green: {\n      color: green[700],\n    },\n    grey: {\n      color: grey[700],\n    },\n    red: {\n      color: red[700],\n    },\n    taskTypeIcon: {\n      marginTop: theme.spacing(1) * 1.5,\n    },\n    yellow: {\n      color: yellow[700],\n    },\n  }),\n);\n","import { CheckBox, CheckBoxOutlineBlank, Slideshow } from '@material-ui/icons';\nimport classNames from 'classnames';\nimport React, { FC, forwardRef } from 'react';\nimport { TASK_STATUSES } from '../../../constans';\nimport { TaskStatusEnum } from '../../../mutations/__generated__/updateTaskListStatusFilterSettingMutation.graphql';\nimport useStatusIconStyles from './useStatusIconStyles';\n\nexport interface StatusIconProps {\n  status: TaskStatusEnum;\n}\n\nconst StatusIcon: FC<StatusIconProps> = props => {\n  const { status } = props;\n  const classes = useStatusIconStyles();\n\n  switch (status) {\n    case TASK_STATUSES.TODO: {\n      return <CheckBoxOutlineBlank className={classNames(classes.grey, classes.icon)} />;\n    }\n    case TASK_STATUSES.IN_PROGRESS: {\n      return <Slideshow className={classNames(classes.yellow, classes.icon)} />;\n    }\n    case TASK_STATUSES.DONE: {\n      return <CheckBox className={classNames(classes.green, classes.icon)} />;\n    }\n    default: {\n      throw new Error(`no status icon for status: ${status}`);\n    }\n  }\n};\n\nexport default forwardRef(StatusIcon);\n","// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport graphql from 'babel-plugin-relay/macro';\nimport { useFragment } from 'relay-hooks';\nimport {\n  useTaskListFragment,\n  useTaskListFragment$ref,\n} from './__generated__/useTaskListFragment.graphql';\n\nconst query = graphql`\n  fragment useTaskListFragment on TaskType {\n    id\n    taskType\n    fields {\n      ...SliderFieldFragment_data @relay(mask: false)\n      ...SwitchFieldFragment_data @relay(mask: false)\n      ...ChoiceFieldFragment_data @relay(mask: false)\n      ...TextFieldFragment_data @relay(mask: false)\n      ...NestedFieldFragment_data @relay(mask: false)\n    }\n  }\n`;\n\nexport default (data: useTaskListFragment$ref): Omit<useTaskListFragment, ' $refList'> =>\n  useFragment(query, data);\n","import { createStyles, Theme } from '@material-ui/core';\nimport { green, grey, red, yellow } from '@material-ui/core/colors';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    actions: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n    },\n    content: {\n      display: 'block',\n    },\n    heading: {\n      maxHeight: '1.8em',\n      overflow: 'scroll',\n      flex: 1,\n      textAlign: 'center',\n      fontSize: theme.typography.pxToRem(20),\n      fontWeight: theme.typography.fontWeightRegular,\n      marginTop: theme.spacing(1),\n    },\n    icon: {\n      fontSize: theme.spacing(5),\n    },\n    green: {\n      color: green[700],\n    },\n    grey: {\n      color: grey[700],\n    },\n    red: {\n      color: red[700],\n    },\n    taskTypeIcon: {\n      marginTop: theme.spacing(1) * 1.5,\n    },\n    yellow: {\n      color: yellow[700],\n    },\n  }),\n);\n","import {\n  Button,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport { ExpandMore, PriorityHigh } from '@material-ui/icons';\nimport classNames from 'classnames';\nimport React, { FC } from 'react';\nimport { FIELD_ID, TaskTypeEnum } from '../../../../constans';\nimport { TaskStatusEnum } from '../../../../mutations/__generated__/updateTaskListStatusFilterSettingMutation.graphql';\nimport StatusIcon from '../../../display/status-icon/StatusIcon';\nimport TaskTypeIcon from '../../../display/task-type-icon/TaskTypeIcon';\nimport { useTaskListFragment$ref } from './__generated__/useTaskListFragment.graphql';\nimport useTaskListFragment from './useTaskListFragment';\nimport useTaskListFragmentStyles from './useTaskListFragmentStyles';\n\nexport interface TaskListFragmentProps {\n  data: useTaskListFragment$ref;\n\n  onDelete(id: string): void;\n  onEdit(taskType: TaskTypeEnum, taskId: string): void;\n}\n\nconst TaskListFragment: FC<TaskListFragmentProps> = props => {\n  const { data, onDelete, onEdit } = props;\n  const { id, taskType, fields } = useTaskListFragment(data);\n  const titleField = fields.find(field => field.fieldId === FIELD_ID.TITLE);\n  const noteField = fields.find(field => field.fieldId === FIELD_ID.NOTE);\n  const priorityField = fields.find(field => field.fieldId === FIELD_ID.PRIORITY);\n  const statusField = fields.find(field => field.fieldId === FIELD_ID.STATUS);\n  const classes = useTaskListFragmentStyles();\n\n  return (\n    <ExpansionPanel>\n      <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n        <div>\n          {statusField && statusField.value && (\n            <Tooltip title={`Status: ${statusField.value.id as TaskStatusEnum}`}>\n              <StatusIcon status={statusField.value.id as TaskStatusEnum} />\n            </Tooltip>\n          )}\n          {priorityField && priorityField.value && priorityField.value.enabled && (\n            <Tooltip title=\"Important!\">\n              <PriorityHigh className={classNames(classes.red, classes.icon)} />\n            </Tooltip>\n          )}\n        </div>\n        <Typography className={classes.heading}>\n          {titleField && titleField.value && titleField.value.text}\n        </Typography>\n        <TaskTypeIcon type={taskType} className={classes.taskTypeIcon} />\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails className={classes.content}>\n        <div>{noteField && noteField.value && noteField.value.text}</div>\n        <div className={classes.actions}>\n          <Button onClick={() => onEdit(taskType, id)}>Edit</Button>\n          <Button onClick={() => onDelete(id)}>Delete</Button>\n        </div>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n};\n\nexport default TaskListFragment;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport graphql from 'babel-plugin-relay/macro';\nimport { usePagination } from 'relay-hooks';\nimport { ConnectionConfig } from 'relay-hooks/lib/FragmentPagination';\nimport { PaginationFunction } from 'relay-hooks/lib/useOssFragment';\nimport { ITEMS_PER_PAGE } from '../../../../constans';\nimport {\n  useTaskListPagination,\n  useTaskListPagination$ref,\n} from './__generated__/useTaskListPagination.graphql';\n\nconst query = graphql`\n  fragment useTaskListPagination on TaskListType {\n    id\n    list(first: $count, after: $after) @connection(key: \"TaskList_list\") {\n      edges {\n        cursor\n        node {\n          id\n          ...useTaskListFragment\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n  }\n`;\n\nconst connectionConfig: ConnectionConfig = {\n  getVariables(_props, { cursor, count }) {\n    return {\n      count,\n      after: cursor,\n    };\n  },\n  query: graphql`\n    # Pagination query to be fetched upon calling 'loadMore'.\n    # Notice that we re-use our fragment, and the shape of this query matches our fragment spec.\n    query useTaskListPaginationQuery($count: Int!, $after: String) {\n      app {\n        taskList {\n          ...useTaskListPagination\n        }\n      }\n    }\n  `,\n};\n\nexport type TaskListPaginationFunction = Omit<\n  PaginationFunction,\n  'loadMore' | 'refetchConnection'\n> & {\n  loadMore(): void;\n  refetchConnection(): void;\n};\n\nexport default (\n  data: useTaskListPagination$ref,\n  pageSize = ITEMS_PER_PAGE,\n  onError?: (error: Error) => void,\n): [Omit<useTaskListPagination, ' $refList'>, TaskListPaginationFunction] => {\n  const [response, { isLoading, hasMore, loadMore, refetchConnection }] = usePagination(\n    query,\n    data,\n  );\n  const _loadMore = () => {\n    if (!hasMore() || isLoading()) {\n      return;\n    }\n\n    loadMore(connectionConfig, pageSize, onError, {});\n  };\n  const _refetchConnection = () => {\n    if (isLoading()) {\n      return;\n    }\n\n    refetchConnection(connectionConfig, pageSize, onError, {});\n  };\n\n  return [\n    response,\n    {\n      isLoading,\n      hasMore,\n      loadMore: _loadMore,\n      refetchConnection: _refetchConnection,\n    },\n  ];\n};\n","import { createStyles } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles(() =>\n  createStyles({\n    addButton: {\n      zIndex: 9,\n      position: 'fixed',\n      bottom: 20,\n      left: 20,\n    },\n    addButtonIcon: {\n      fontSize: 72,\n    },\n    moreButton: {\n      zIndex: 9,\n      position: 'fixed',\n      bottom: 20,\n      right: 20,\n    },\n    moreButtonIcon: {\n      fontSize: 72,\n    },\n    listLoader: {\n      marginTop: 20,\n    },\n    doneButton: {\n      zIndex: 9,\n      position: 'fixed',\n      bottom: 20,\n      right: 20,\n    },\n    doneButtonIcon: {\n      color: '#8BC34A',\n      fontSize: 72,\n    },\n  }),\n);\n","import { Button, IconButton } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport MoreIcon from '@material-ui/icons/MoreHoriz';\nimport React, { ChangeEvent, FC, Fragment, useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { MODULES_IDS, TaskTypeEnum } from '../../../../constans';\nimport { TaskStatusEnum } from '../../../../mutations/__generated__/updateTaskListStatusFilterSettingMutation.graphql';\nimport deleteTaskMutation from '../../../../mutations/deleteTaskMutation';\nimport updateTaskListStatusFilterSettingMutation from '../../../../mutations/updateTaskListStatusFilterSettingMutation';\nimport updateTaskListTaskTypeFilterSettingMutation from '../../../../mutations/updateTaskListTaskTypeFilterSettingMutation';\nimport updateTaskListTitleFilterSettingMutation from '../../../../mutations/updateTaskListTitleFilterSettingMutation';\nimport Loader from '../../../display/loader/Loader';\nimport TaskListBar from '../../../display/task-list-bar/TaskListBar';\nimport { useTaskListQuery } from '../__generated__/useTaskListQuery.graphql';\nimport TaskListFragment from '../fragment/TaskListFragment';\nimport { useTaskListPagination$ref } from './__generated__/useTaskListPagination.graphql';\nimport useTaskListPagination from './useTaskListPagination';\nimport useTaskListPaginationStyles from './useTaskListPaginationStyles';\n\ninterface TaskListPaginationProps {\n  data: useTaskListPagination$ref;\n  settings: useTaskListQuery['response']['app']['settings']['taskList'];\n  settingsId: string;\n}\n\nconst TaskListPagination: FC<TaskListPaginationProps> = props => {\n  const { settings } = props;\n  const [loading, setLoading] = useState(false);\n  const classes = useTaskListPaginationStyles();\n  const [data, { hasMore, isLoading, loadMore, refetchConnection }] = useTaskListPagination(\n    props.data,\n    8,\n  );\n  const history = useHistory();\n\n  const handleAdd = useCallback(() => {\n    history.push(`/app/${MODULES_IDS.TASK_TYPE_LIST}`);\n  }, [history]);\n  const handleEdit = useCallback(\n    (taskType: TaskTypeEnum, taskId: string) => {\n      history.push(`/app/${MODULES_IDS.TASK}/${taskType}/${taskId}`);\n    },\n    [history],\n  );\n\n  const updateTaskTypeFilter = (checked: boolean, filter: TaskTypeEnum): TaskTypeEnum[] => {\n    const {\n      settings: {\n        filters: { taskType },\n      },\n    } = props;\n\n    if (checked) {\n      return [...taskType, filter];\n    }\n\n    return taskType.filter(activeFilter => activeFilter !== filter);\n  };\n\n  const handleMore = () => {\n    if (!isLoading()) {\n      loadMore();\n    }\n  };\n\n  const handleDelete = async (id: string): Promise<void> => {\n    await deleteTaskMutation({ id, parentID: data.id });\n  };\n\n  const handleFilterByTitle = async (event: ChangeEvent<HTMLInputElement>) => {\n    setLoading(true);\n\n    await updateTaskListTitleFilterSettingMutation(\n      { title: event.target.value },\n      { parentID: props.settingsId },\n    );\n\n    refetchConnection();\n\n    setLoading(false);\n  };\n\n  const handleFilterByStatus = async (event: ChangeEvent<HTMLSelectElement>) => {\n    setLoading(true);\n\n    await updateTaskListStatusFilterSettingMutation(\n      {\n        status: event.target.value.length > 0 ? (event.target.value as TaskStatusEnum) : null,\n      },\n      { parentID: props.settingsId },\n    );\n\n    refetchConnection();\n\n    setLoading(false);\n  };\n\n  const handleFilterByTaskType = async (event: ChangeEvent<HTMLInputElement>) => {\n    const { checked, value } = event.target;\n    const updatedTaskTypeFilter = updateTaskTypeFilter(checked, value as TaskTypeEnum);\n\n    setLoading(true);\n\n    await updateTaskListTaskTypeFilterSettingMutation(\n      { taskType: updatedTaskTypeFilter },\n      { parentID: props.settingsId },\n    );\n\n    refetchConnection();\n\n    setLoading(false);\n  };\n\n  if (!data || !data.list || !data.list.edges) {\n    return <Loader />;\n  }\n\n  const {\n    list: { edges },\n  } = data;\n\n  return (\n    <Fragment>\n      <TaskListBar\n        onFilterByTitle={handleFilterByTitle}\n        onFilterByType={handleFilterByTaskType}\n        onFilterByStatus={handleFilterByStatus}\n        settings={settings}\n      />\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <Grid container spacing={1}>\n            {edges.map(\n              edge =>\n                edge &&\n                edge.node && (\n                  <Grid key={edge.cursor} item xs={12} sm={12} md={6} lg={4} xl={3}>\n                    <TaskListFragment\n                      data={edge.node}\n                      onDelete={handleDelete}\n                      onEdit={handleEdit}\n                    />\n                  </Grid>\n                ),\n            )}\n          </Grid>\n          <Button color=\"primary\" className={classes.addButton} onClick={handleAdd}>\n            <AddBoxIcon className={classes.addButtonIcon} />\n          </Button>\n          {loading && <Loader />}\n          {!loading && hasMore() && (\n            <IconButton className={classes.moreButton} color=\"primary\" onClick={handleMore}>\n              <MoreIcon className={classes.moreButtonIcon} />\n            </IconButton>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default TaskListPagination;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport graphql from 'babel-plugin-relay/macro';\nimport { useQuery } from 'relay-hooks';\nimport {\n  useTaskListQuery,\n  useTaskListQueryVariables,\n} from './__generated__/useTaskListQuery.graphql';\n\nconst query = graphql`\n  query useTaskListQuery($count: Int!, $after: String) {\n    app {\n      taskList {\n        ...useTaskListPagination\n      }\n      settings {\n        id\n        taskList {\n          filters {\n            title\n            taskType\n            status\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default (variables: useTaskListQueryVariables) =>\n  useQuery<useTaskListQuery>({\n    query,\n    variables,\n  });\n","import React, { FC } from 'react';\nimport { ITEMS_PER_PAGE } from '../../../constans';\nimport Loader from '../../display/loader/Loader';\nimport TaskListPagination from './pagination/TaskListPagination';\nimport useTaskListQuery from './useTaskListQuery';\n\nconst TaskList: FC = () => {\n  const { props, error } = useTaskListQuery({\n    count: ITEMS_PER_PAGE,\n  });\n\n  if (error) {\n    return <div>{JSON.stringify(error)}</div>;\n  } else if (props && props.app) {\n    return (\n      <TaskListPagination\n        data={props.app.taskList}\n        settings={props.app.settings.taskList}\n        settingsId={props.app.settings.id}\n      />\n    );\n  }\n\n  return <Loader />;\n};\n\nexport default TaskList;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport graphql from 'babel-plugin-relay/macro';\nimport { useFragment } from 'relay-hooks';\nimport {\n  useTaskTypeFragment,\n  useTaskTypeFragment$ref,\n} from './__generated__/useTaskTypeFragment.graphql';\n\nconst query = graphql`\n  fragment useTaskTypeFragment on TaskTypeType {\n    id\n    typeId\n    label\n    description\n  }\n`;\n\nexport default (data: useTaskTypeFragment$ref): Omit<useTaskTypeFragment, ' $refType'> =>\n  useFragment(query, data);\n","import { createStyles, Theme } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    actionsContainer: {\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: theme.spacing(1) * 2 * 8,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(1) * 2 * 12,\n      },\n      [theme.breakpoints.up('md')]: {\n        width: theme.spacing(1) * 2 * 16,\n      },\n    },\n    nameContainer: {\n      fontSize: theme.spacing(3),\n      textAlign: 'center',\n      [theme.breakpoints.up('sm')]: {\n        fontSize: theme.spacing(4),\n      },\n      [theme.breakpoints.up('md')]: {\n        fontSize: theme.spacing(5),\n      },\n    },\n    descContainer: {\n      flexGrow: 1,\n      fontSize: theme.spacing(3),\n      [theme.breakpoints.up('sm')]: {\n        fontSize: theme.spacing(4),\n      },\n      [theme.breakpoints.up('md')]: {\n        fontSize: theme.spacing(5),\n      },\n    },\n    descText: {\n      padding: 0,\n      margin: 0,\n      fontSize: theme.spacing(1) * 1.5,\n      [theme.breakpoints.up('sm')]: {\n        fontSize: theme.spacing(2),\n      },\n      [theme.breakpoints.up('md')]: {\n        fontSize: theme.spacing(3),\n      },\n    },\n    icon: {\n      height: '100%',\n      width: '100%',\n    },\n    infoButton: {\n      color: '#505ae8',\n      height: 64,\n      width: 64,\n      [theme.breakpoints.up('sm')]: {\n        height: 80,\n        width: 80,\n      },\n      [theme.breakpoints.up('md')]: {\n        height: 96,\n        width: 96,\n      },\n    },\n    addButton: {\n      color: '#8BC34A',\n      height: 64,\n      width: 64,\n      [theme.breakpoints.up('sm')]: {\n        height: 80,\n        width: 80,\n      },\n      [theme.breakpoints.up('md')]: {\n        height: 96,\n        width: 96,\n      },\n    },\n    fontSize72: {\n      fontSize: 40,\n      [theme.breakpoints.up('sm')]: {\n        fontSize: 54,\n      },\n      [theme.breakpoints.up('md')]: {\n        fontSize: 72,\n      },\n    },\n  }),\n);\n","import { IconButton } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { AddCircle, InfoOutlined } from '@material-ui/icons';\nimport React, { FC, useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { MODULES_IDS } from '../../../../constans';\nimport TaskTypeIcon from '../../../display/task-type-icon/TaskTypeIcon';\nimport { useTaskTypePagination$ref } from '../pagination/__generated__/useTaskTypePagination.graphql';\nimport useTaskTypeFragment from './useTaskTypeFragment';\nimport useTaskTypeFragmentStyles from './useTaskTypeFragmentStyles';\n\ninterface TaskTypeFragmentProps {\n  data: useTaskTypePagination$ref;\n}\n\nconst TaskTypeFragment: FC<TaskTypeFragmentProps> = props => {\n  const { data } = props;\n  const classes = useTaskTypeFragmentStyles();\n  const [info, setInfo] = useState(false);\n  const { label, description, typeId } = useTaskTypeFragment(data);\n  const history = useHistory();\n\n  const handleAdd = useCallback(() => {\n    history.push(`/app/${MODULES_IDS.TASK}/${typeId}/`);\n  }, [typeId, history]);\n  const handleInfo = useCallback(() => {\n    setInfo(value => !value);\n  }, [setInfo]);\n\n  return (\n    <Grid className={classes.container} item>\n      <h1 className={classes.nameContainer}>{label}</h1>\n      <div className={classes.descContainer}>\n        {info ? (\n          <h3 className={classes.descText}>{description}</h3>\n        ) : (\n          <TaskTypeIcon type={typeId} className={classes.icon} />\n        )}\n      </div>\n      <div className={classes.actionsContainer}>\n        <IconButton className={classes.infoButton} onClick={handleInfo}>\n          <InfoOutlined className={classes.fontSize72} />\n        </IconButton>\n        <IconButton className={classes.addButton} onClick={handleAdd}>\n          <AddCircle className={classes.fontSize72} />\n        </IconButton>\n      </div>\n    </Grid>\n  );\n};\n\nexport default TaskTypeFragment;\n","import { createStyles } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles(() =>\n  createStyles({\n    container: {\n      height: '100%',\n      width: '100%',\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n    },\n    doneButton: {\n      zIndex: 9,\n      position: 'fixed',\n      bottom: 20,\n      right: 20,\n    },\n    doneButtonIcon: {\n      color: '#8BC34A',\n      fontSize: 72,\n    },\n  }),\n);\n","// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport graphql from 'babel-plugin-relay/macro';\nimport { usePagination } from 'relay-hooks';\nimport { PaginationFunction } from 'relay-hooks/lib/useOssFragment';\nimport {\n  useTaskTypePagination,\n  useTaskTypePagination$ref,\n} from './__generated__/useTaskTypePagination.graphql';\n\nconst query = graphql`\n  fragment useTaskTypePagination on TaskTypeListType {\n    id\n    list(first: $count, after: $after) @connection(key: \"TaskTypeList_list\") {\n      edges {\n        node {\n          id\n          order\n          ...useTaskTypeFragment\n        }\n      }\n    }\n  }\n`;\n\nexport default (\n  data: useTaskTypePagination$ref,\n): [Omit<useTaskTypePagination, ' $refType'>, PaginationFunction] => usePagination(query, data);\n","import { IconButton } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { Done } from '@material-ui/icons';\nimport React, { FC, Fragment, useCallback } from 'react';\nimport { useHistory } from 'react-router';\nimport { MODULES_IDS } from '../../../../constans';\nimport Loader from '../../../display/loader/Loader';\nimport TaskTypeFragment from '../fragment/TaskTypeFragment';\nimport { useTaskTypePagination$ref } from './__generated__/useTaskTypePagination.graphql';\nimport useTaskTypeListPaginationStyles from './useTaskTypeListPaginationStyles';\nimport useTaskTypePagination from './useTaskTypePagination';\n\ninterface TaskTypeListProps {\n  data: useTaskTypePagination$ref;\n}\n\nconst TaskTypeList: FC<TaskTypeListProps> = props => {\n  const classes = useTaskTypeListPaginationStyles();\n  const [\n    {\n      list: { edges },\n    },\n    { isLoading },\n  ] = useTaskTypePagination(props.data);\n  const history = useHistory();\n\n  const handleDone = useCallback(() => {\n    history.push(`/app/${MODULES_IDS.TASK_LIST}`);\n  }, [history]);\n\n  if (isLoading()) {\n    return <Loader />;\n  }\n\n  // #TODO dlaczego ta tablica jest nullowalna w schemie?\n  const taskTypes = [...(edges || [])]\n    .map(edge => edge && edge.node)\n    .sort((nodeA, nodeB) => (nodeA && nodeB ? nodeA.order - nodeB.order : 0));\n\n  return (\n    <Fragment>\n      <Grid className={classes.container} container>\n        {taskTypes.map((data, index) => (\n          <TaskTypeFragment key={data ? data.id : index} data={data} />\n        ))}\n      </Grid>\n      <IconButton className={classes.doneButton} color=\"primary\" onClick={handleDone}>\n        <Done className={classes.doneButtonIcon} />\n      </IconButton>\n    </Fragment>\n  );\n};\n\nexport default TaskTypeList;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport graphql from 'babel-plugin-relay/macro';\nimport { useQuery } from 'relay-hooks';\nimport {\n  useTaskTypeListQuery,\n  useTaskTypeListQueryVariables,\n} from './__generated__/useTaskTypeListQuery.graphql';\n\nconst query = graphql`\n  query useTaskTypeListQuery($count: Int!, $after: String) {\n    app {\n      taskTypeList {\n        ...useTaskTypePagination\n      }\n    }\n  }\n`;\n\nexport default (variables: useTaskTypeListQueryVariables) =>\n  useQuery<useTaskTypeListQuery>({\n    query,\n    variables,\n  });\n","import React, { FC } from 'react';\nimport { ITEMS_PER_PAGE } from '../../../constans';\nimport Loader from '../../display/loader/Loader';\nimport TaskTypeListPagination from './pagination/TaskTypeListPagination';\nimport useTaskTypeQuery from './useTaskTypeListQuery';\n\nconst TaskTypeList: FC = () => {\n  const { props, error } = useTaskTypeQuery({ count: ITEMS_PER_PAGE });\n\n  if (error) {\n    return <div>{JSON.stringify(error)}</div>;\n  } else if (props) {\n    return <TaskTypeListPagination data={props.app.taskTypeList} />;\n  }\n\n  return <Loader />;\n};\n\nexport default TaskTypeList;\n","import graphql from 'babel-plugin-relay/macro';\nimport { commitMutation } from 'react-relay';\nimport { RecordSourceSelectorProxy } from 'relay-runtime';\nimport environment from '../environment';\nimport {\n  updateTaskFieldMutation,\n  updateTaskFieldMutationInput,\n  updateTaskFieldMutationResponse,\n} from './__generated__/updateTaskFieldMutation.graphql';\n\nconst mutation = graphql`\n  mutation updateTaskFieldMutation($input: updateTaskFieldMutationInput!) {\n    updateTaskField(input: $input) {\n      fieldId\n      taskId\n      updatedValue {\n        ...ChoiceFieldFragmentValue @relay(mask: false)\n        ...NestedFieldFragmentValue @relay(mask: false)\n        ...SwitchFieldFragmentValue @relay(mask: false)\n        ...SliderFieldFragmentValue @relay(mask: false)\n        ...TextFieldFragmentValue @relay(mask: false)\n      }\n    }\n  }\n`;\n\nexport default (\n  { fieldId, value, taskId }: updateTaskFieldMutationInput,\n  { id }: { id: string },\n): Promise<updateTaskFieldMutationResponse> =>\n  new Promise((onCompleted, onError): void => {\n    const variables = { input: { fieldId, value, taskId } };\n\n    commitMutation<updateTaskFieldMutation>(environment, {\n      mutation,\n      variables,\n      onCompleted,\n      onError,\n      optimisticUpdater: (proxyStore: RecordSourceSelectorProxy) => {\n        const [valueKey] = Object.keys(value);\n        if (valueKey !== 'ownValue') {\n          const fieldRecord = proxyStore.get(id);\n          const valueRecord = fieldRecord && fieldRecord.getLinkedRecord('value');\n\n          if (valueRecord) {\n            valueRecord.setValue(value[valueKey], valueKey);\n          }\n        }\n      },\n      updater: (store: RecordSourceSelectorProxy) => {\n        const mutationRecord = store.getRootField('updateTaskField');\n        const updatedFieldValue = mutationRecord && mutationRecord.getLinkedRecord('updatedValue');\n        const fieldRecord = store.get(id);\n\n        if (fieldRecord && updatedFieldValue) {\n          fieldRecord.setLinkedRecord(updatedFieldValue, 'value');\n        }\n      },\n    });\n  });\n","import { createStyles, Theme } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      margin: theme.spacing(2),\n      minWidth: theme.spacing(20),\n      display: 'flex',\n      flexGrow: 1,\n    },\n  }),\n);\n","import { FormControl } from '@material-ui/core';\nimport React, { FC } from 'react';\nimport useFieldContainerStyles from './useFieldContainerStyles';\n\nconst FieldContainer: FC = props => {\n  const classes = useFieldContainerStyles();\n\n  return <FormControl className={classes.container}>{props.children}</FormControl>;\n};\n\nexport default FieldContainer;\n","import { FormHelperText, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport React, { FC } from 'react';\nimport FieldContainer from '../../containers/field-container/FieldContainer';\n\ninterface ChoiceProps {\n  value?: string;\n  label?: string;\n  helperText?: string;\n  required?: boolean;\n  options: ReadonlyArray<{ readonly text: string; readonly value: string } | null> | undefined;\n\n  onChange(value: string): void;\n}\n\nconst Choice: FC<ChoiceProps> = props => {\n  const { label, value, helperText, options } = props;\n\n  if (!options) {\n    throw new Error('no options');\n  }\n\n  const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n    props.onChange(event.target.value as string);\n  };\n\n  return (\n    <FieldContainer>\n      {label && <InputLabel>{label}</InputLabel>}\n      <Select value={value} onChange={handleChange}>\n        {options.map(\n          option =>\n            option && (\n              <MenuItem key={option.value} value={option.value}>\n                {option.text}\n              </MenuItem>\n            ),\n        )}\n      </Select>\n      {helperText && <FormHelperText>{helperText}</FormHelperText>}\n    </FieldContainer>\n  );\n};\n\nexport default Choice;\n","import graphql from 'babel-plugin-relay/macro';\nimport React, { FC } from 'react';\nimport { createFragmentContainer } from 'react-relay';\nimport updateTaskFieldMutation from '../../../../mutations/updateTaskFieldMutation';\nimport Choice from '../../../display/field/Choice';\n// eslint-disable-next-line @typescript-eslint/camelcase\nimport { ChoiceFieldFragment_data } from './__generated__/ChoiceFieldFragment_data.graphql';\n\ninterface ChoiceFieldProps {\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  data: ChoiceFieldFragment_data;\n  taskId: string;\n}\n\nconst ChoiceField: FC<ChoiceFieldProps> = props => {\n  const { data } = props;\n  const {\n    value: { id },\n    meta: { options, label, helperText },\n  } = data;\n  const handleChange = async (changedId: string): Promise<void> => {\n    const {\n      taskId,\n      data: { fieldId, id },\n    } = props;\n\n    await updateTaskFieldMutation({ fieldId, value: { id: changedId }, taskId }, { id });\n  };\n\n  return (\n    <Choice\n      label={label}\n      value={id || ''}\n      helperText={helperText}\n      options={options}\n      onChange={handleChange}\n    />\n  );\n};\n\ngraphql`\n  fragment ChoiceFieldFragmentMeta on ChoiceMetaType {\n    fieldType\n    helperText\n    label\n    defaultValue\n    options {\n      text\n      value\n    }\n    required\n  }\n`;\n\ngraphql`\n  fragment ChoiceFieldFragmentValue on ChoiceValueType {\n    id\n  }\n`;\n\nexport default createFragmentContainer<ChoiceFieldProps>(ChoiceField, {\n  data: graphql`\n    fragment ChoiceFieldFragment_data on ChoiceFieldType {\n      id\n      fieldId\n      meta {\n        ...ChoiceFieldFragmentMeta @relay(mask: false)\n      }\n      value {\n        ...ChoiceFieldFragmentValue @relay(mask: false)\n      }\n    }\n  `,\n});\n","import { FormControlLabel, Switch as MaterialSwitch } from '@material-ui/core';\nimport React, { ChangeEvent, FC } from 'react';\nimport FieldContainer from '../../containers/field-container/FieldContainer';\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean | null;\n  label?: string;\n  required?: boolean;\n\n  onChange(value: boolean): void;\n}\n\nconst Switch: FC<SwitchProps> = props => {\n  const { checked, disabled, label } = props;\n\n  const handleChange = async (event: ChangeEvent<HTMLInputElement>): Promise<void> => {\n    props.onChange(event.target.checked);\n  };\n\n  return (\n    <FieldContainer>\n      <FormControlLabel\n        control={\n          <MaterialSwitch\n            checked={checked}\n            disabled={disabled as (boolean | undefined)}\n            value={checked}\n            onChange={handleChange}\n          />\n        }\n        label={label}\n      />\n    </FieldContainer>\n  );\n};\n\nexport default Switch;\n","import { TextField } from '@material-ui/core';\nimport { convertToTimeZone, formatToTimeZone } from 'date-fns-timezone';\nimport React, { ChangeEvent, FC } from 'react';\nimport { DATE_TIME_FORMAT } from '../../../constans';\nimport FieldContainer from '../../containers/field-container/FieldContainer';\n\ninterface TextProps {\n  value?: string;\n  label?: string;\n  helperText?: string;\n  max?: number;\n  min?: number;\n  minLength?: number;\n  maxLength?: number;\n  required?: boolean;\n  inputType?: string;\n\n  onChange(value?: string): void;\n}\n\nconst formatInputValue = (value?: string, inputType?: string): string | undefined => {\n  if (value && inputType === 'datetime-local') {\n    return formatToTimeZone(value, DATE_TIME_FORMAT, {\n      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    });\n  }\n\n  return value;\n};\n\nconst parseInputValue = (value?: string, inputType?: string): string | undefined => {\n  if (value && inputType === 'datetime-local') {\n    return convertToTimeZone(value, {\n      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    }).toISOString();\n  }\n\n  return value;\n};\n\nconst Text: FC<TextProps> = props => {\n  const { value, max, maxLength, min, minLength, required, inputType, label, helperText } = props;\n\n  const handleChange = async (event: ChangeEvent<HTMLInputElement>): Promise<void> => {\n    const parsedValue = parseInputValue(event.target.value, inputType);\n\n    props.onChange(parsedValue);\n  };\n\n  return (\n    <FieldContainer>\n      <TextField\n        label={label}\n        required={required}\n        InputLabelProps={{ shrink: true }}\n        inputProps={{ type: inputType, max, maxLength, min, minLength }}\n        helperText={helperText}\n        value={formatInputValue(value, inputType)}\n        onChange={handleChange}\n        fullWidth\n      />\n    </FieldContainer>\n  );\n};\n\nexport default Text;\n","import graphql from 'babel-plugin-relay/macro';\nimport immutabilityHelper from 'immutability-helper';\nimport React, { FC, Fragment } from 'react';\nimport { createFragmentContainer } from 'react-relay';\nimport { FIELD_TYPE } from '../../../../constans';\nimport { NestedValueInputType } from '../../../../mutations/__generated__/updateTaskFieldMutation.graphql';\nimport updateTaskFieldMutation from '../../../../mutations/updateTaskFieldMutation';\nimport Choice from '../../../display/field/Choice';\nimport Switch from '../../../display/field/Switch';\nimport Text from '../../../display/field/Text';\nimport {\n  FieldIdEnum,\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  NestedFieldFragment_data,\n} from './__generated__/NestedFieldFragment_data.graphql';\n\ninterface OwnFieldProps {\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  ownMeta: NestedFieldFragment_data['meta']['ownMeta'];\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  ownValue: NestedFieldFragment_data['value']['ownValue'];\n\n  onOwnValueChange(\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    updatedValue: NestedFieldFragment_data['value']['ownValue'],\n  ): void;\n}\n\nconst OwnField: FC<OwnFieldProps> = props => {\n  const { ownMeta, ownValue, onOwnValueChange } = props;\n\n  if (ownMeta && ownValue) {\n    if (ownMeta.fieldType === FIELD_TYPE.CHOICE) {\n      const { label, helperText, options } = ownMeta;\n      const { id } = ownValue;\n\n      return (\n        <Choice\n          label={label}\n          value={id || ''}\n          helperText={helperText}\n          options={options}\n          onChange={(value: string) => {\n            onOwnValueChange({ id: value });\n          }}\n        />\n      );\n    }\n    if (ownMeta.fieldType === FIELD_TYPE.SWITCH) {\n      const { disabled, label, required } = ownMeta;\n      const { enabled } = ownValue;\n\n      return (\n        <Switch\n          checked={enabled}\n          disabled={disabled}\n          label={label}\n          required={required}\n          onChange={(value: boolean) => {\n            onOwnValueChange({ enabled: value });\n          }}\n        />\n      );\n    }\n    if (ownMeta.fieldType === FIELD_TYPE.TEXT) {\n      const { label, required } = ownMeta;\n      const { text } = ownValue;\n\n      return (\n        <Text\n          value={text || ''}\n          label={label}\n          required={required}\n          onChange={(value: string) => {\n            onOwnValueChange({ text: value });\n          }}\n        />\n      );\n    }\n  }\n\n  return null;\n};\n\ninterface NestedFieldProps {\n  meta?: {\n    fieldType?: string;\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    parentValue?: NestedFieldFragment_data['value']['ownValue'];\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    ownMeta: NestedFieldFragment_data['meta']['ownMeta'];\n    childrenMeta: Array<NestedFieldProps['meta']>;\n  };\n  value?: {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    ownValue?: NestedFieldFragment_data['value']['ownValue'];\n    childrenValue?: NestedFieldProps['value'];\n  };\n\n  onChange(value: NestedFieldProps['value']): void;\n}\n\nconst NestedField: FC<NestedFieldProps> = props => {\n  const { meta, value, onChange } = props;\n\n  if (meta && meta.ownMeta && value) {\n    const activeChildrenMeta =\n      value.ownValue &&\n      meta.childrenMeta &&\n      meta.childrenMeta.find(childrenMeta => {\n        if (\n          !meta ||\n          !meta.ownMeta ||\n          !childrenMeta ||\n          !childrenMeta.parentValue ||\n          !value ||\n          !value.ownValue\n        ) {\n          return false;\n        }\n\n        if (meta.ownMeta.fieldType === FIELD_TYPE.CHOICE) {\n          return childrenMeta.parentValue.id === value.ownValue.id;\n        } else if (meta.ownMeta.fieldType === FIELD_TYPE.TEXT) {\n          return childrenMeta.parentValue.text === value.ownValue.text;\n        } else if (meta.ownMeta.fieldType === FIELD_TYPE.SWITCH) {\n          return childrenMeta.parentValue.enabled === value.ownValue.enabled;\n        }\n\n        return false;\n      });\n    const updateOwnValue = (\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      ownValue: NestedFieldFragment_data['value']['ownValue'],\n    ) => {\n      const updatedValue = immutabilityHelper(value, {\n        ownValue: {\n          $set: ownValue,\n        },\n      });\n\n      onChange(updatedValue);\n    };\n    const updateChildrenValue = (childrenValue: NestedFieldProps['value']) => {\n      const updatedValue = immutabilityHelper(value, {\n        childrenValue: {\n          $set: childrenValue,\n        },\n      });\n\n      onChange(updatedValue);\n    };\n\n    return (\n      <Fragment>\n        <OwnField\n          ownMeta={meta.ownMeta}\n          ownValue={value.ownValue || {}}\n          onOwnValueChange={updateOwnValue}\n        />\n        {activeChildrenMeta && (\n          <NestedField\n            value={value.childrenValue || {}}\n            meta={activeChildrenMeta}\n            onChange={updateChildrenValue}\n          />\n        )}\n      </Fragment>\n    );\n  }\n\n  return null;\n};\n\nexport interface NestedFieldContainerProps {\n  data: {\n    id: string;\n    fieldId: FieldIdEnum;\n    meta: NestedFieldProps['meta'];\n    value: NestedFieldProps['value'];\n  };\n  taskId: string;\n}\n\nconst NestedFieldContainer: FC<NestedFieldContainerProps> = props => {\n  const { data } = props;\n  const { meta, value } = data;\n\n  const handleChange = async (updatedFieldValue: NestedFieldProps['value']): Promise<void> => {\n    const {\n      taskId,\n      data: { fieldId, id },\n    } = props;\n\n    await updateTaskFieldMutation(\n      { fieldId, value: updatedFieldValue as NestedValueInputType, taskId },\n      { id },\n    );\n  };\n\n  return <NestedField value={value} meta={meta} onChange={handleChange} />;\n};\n\ngraphql`\n  fragment NestedFieldFragmentMeta on NestedMetaType {\n    fieldType\n    parentValue {\n      ...SwitchFieldFragmentValue @relay(mask: false)\n      ...TextFieldFragmentValue @relay(mask: false)\n      ...ChoiceFieldFragmentValue @relay(mask: false)\n    }\n    ownMeta {\n      ...ChoiceFieldFragmentMeta @relay(mask: false)\n      ...TextFieldFragmentMeta @relay(mask: false)\n      ...SwitchFieldFragmentMeta @relay(mask: false)\n    }\n    childrenMeta {\n      fieldType\n      parentValue {\n        ...SwitchFieldFragmentValue @relay(mask: false)\n        ...TextFieldFragmentValue @relay(mask: false)\n        ...ChoiceFieldFragmentValue @relay(mask: false)\n      }\n      ownMeta {\n        ...ChoiceFieldFragmentMeta @relay(mask: false)\n        ...TextFieldFragmentMeta @relay(mask: false)\n        ...SwitchFieldFragmentMeta @relay(mask: false)\n        ... on NestedMetaType {\n          parentValue {\n            ...SwitchFieldFragmentValue @relay(mask: false)\n            ...TextFieldFragmentValue @relay(mask: false)\n            ...ChoiceFieldFragmentValue @relay(mask: false)\n          }\n          ownMeta {\n            ...ChoiceFieldFragmentMeta @relay(mask: false)\n            ...TextFieldFragmentMeta @relay(mask: false)\n            ...SwitchFieldFragmentMeta @relay(mask: false)\n          }\n          childrenMeta {\n            fieldType\n            parentValue {\n              ...SwitchFieldFragmentValue @relay(mask: false)\n              ...TextFieldFragmentValue @relay(mask: false)\n              ...ChoiceFieldFragmentValue @relay(mask: false)\n            }\n            ownMeta {\n              ...ChoiceFieldFragmentMeta @relay(mask: false)\n              ...TextFieldFragmentMeta @relay(mask: false)\n              ...SwitchFieldFragmentMeta @relay(mask: false)\n            }\n          }\n        }\n      }\n      childrenMeta {\n        fieldType\n        parentValue {\n          ...SwitchFieldFragmentValue @relay(mask: false)\n          ...TextFieldFragmentValue @relay(mask: false)\n          ...ChoiceFieldFragmentValue @relay(mask: false)\n        }\n        ownMeta {\n          ...ChoiceFieldFragmentMeta @relay(mask: false)\n          ...TextFieldFragmentMeta @relay(mask: false)\n          ...SwitchFieldFragmentMeta @relay(mask: false)\n          ... on NestedMetaType {\n            parentValue {\n              ...SwitchFieldFragmentValue @relay(mask: false)\n              ...TextFieldFragmentValue @relay(mask: false)\n              ...ChoiceFieldFragmentValue @relay(mask: false)\n            }\n            ownMeta {\n              ...ChoiceFieldFragmentMeta @relay(mask: false)\n              ...TextFieldFragmentMeta @relay(mask: false)\n              ...SwitchFieldFragmentMeta @relay(mask: false)\n            }\n            childrenMeta {\n              fieldType\n              parentValue {\n                ...SwitchFieldFragmentValue @relay(mask: false)\n                ...TextFieldFragmentValue @relay(mask: false)\n                ...ChoiceFieldFragmentValue @relay(mask: false)\n              }\n              ownMeta {\n                ...ChoiceFieldFragmentMeta @relay(mask: false)\n                ...TextFieldFragmentMeta @relay(mask: false)\n                ...SwitchFieldFragmentMeta @relay(mask: false)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\ngraphql`\n  fragment NestedFieldFragmentValue on NestedValueType {\n    ownValue {\n      ...SwitchFieldFragmentValue @relay(mask: false)\n      ...TextFieldFragmentValue @relay(mask: false)\n      ...ChoiceFieldFragmentValue @relay(mask: false)\n    }\n    childrenValue {\n      ownValue {\n        ...SwitchFieldFragmentValue @relay(mask: false)\n        ...TextFieldFragmentValue @relay(mask: false)\n        ...ChoiceFieldFragmentValue @relay(mask: false)\n      }\n      childrenValue {\n        ownValue {\n          ...SwitchFieldFragmentValue @relay(mask: false)\n          ...TextFieldFragmentValue @relay(mask: false)\n          ...ChoiceFieldFragmentValue @relay(mask: false)\n        }\n      }\n    }\n  }\n`;\n\nexport default createFragmentContainer<NestedFieldContainerProps>(NestedFieldContainer, {\n  data: graphql`\n    fragment NestedFieldFragment_data on NestedFieldType {\n      id\n      fieldId\n      meta {\n        ...NestedFieldFragmentMeta @relay(mask: false)\n      }\n      value {\n        ...NestedFieldFragmentValue @relay(mask: false)\n      }\n    }\n  `,\n});\n","import MaterialSlider, { SliderProps as MaterialSliderProps } from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport React, { FC } from 'react';\nimport FieldContainer from '../../containers/field-container/FieldContainer';\n\ninterface SliderProps\n  extends Pick<MaterialSliderProps, 'max' | 'min' | 'step' | 'value' | 'disabled'> {\n  label?: string;\n  required?: boolean;\n\n  onChange(value: number): void;\n}\n\nconst Slider: FC<SliderProps> = props => {\n  const { max, min, step, value, disabled, label } = props;\n\n  const handleChange = async (\n    _event: React.ChangeEvent<{}>,\n    value: number | number[],\n  ): Promise<void> => {\n    props.onChange(value as number);\n  };\n\n  return (\n    <FieldContainer>\n      <Typography>{label}</Typography>\n      <br />\n      <MaterialSlider\n        value={value}\n        max={max}\n        min={min}\n        step={step}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n    </FieldContainer>\n  );\n};\n\nexport default Slider;\n","import graphql from 'babel-plugin-relay/macro';\nimport React, { FC } from 'react';\nimport { createFragmentContainer } from 'react-relay';\nimport updateTaskFieldMutation from '../../../../mutations/updateTaskFieldMutation';\nimport Slider from '../../../display/field/Slider';\n// eslint-disable-next-line @typescript-eslint/camelcase\nimport { SliderFieldFragment_data } from './__generated__/SliderFieldFragment_data.graphql';\n\ninterface SliderFieldProps {\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  data: SliderFieldFragment_data;\n  taskId: string;\n}\n\nconst SliderField: FC<SliderFieldProps> = props => {\n  const { data } = props;\n  const {\n    value: { progress },\n    meta: { label, disabled, max, min, step },\n  } = data;\n\n  const handleChange = async (progress: number): Promise<void> => {\n    const {\n      taskId,\n      data: { fieldId, id },\n    } = props;\n\n    await updateTaskFieldMutation({ fieldId, value: { progress }, taskId }, { id });\n  };\n\n  return (\n    <Slider\n      disabled={disabled || undefined}\n      value={progress}\n      label={label}\n      max={max || undefined}\n      min={min || undefined}\n      step={step || undefined}\n      onChange={handleChange}\n    />\n  );\n};\n\ngraphql`\n  fragment SliderFieldFragmentMeta on SliderMetaType {\n    fieldType\n    label\n    disabled\n    required\n    max\n    min\n    step\n  }\n`;\n\ngraphql`\n  fragment SliderFieldFragmentValue on SliderValueType {\n    progress\n  }\n`;\n\nexport default createFragmentContainer<SliderFieldProps>(SliderField, {\n  data: graphql`\n    fragment SliderFieldFragment_data on SliderFieldType {\n      id\n      fieldId\n      meta {\n        ...SliderFieldFragmentMeta @relay(mask: false)\n      }\n      value {\n        ...SliderFieldFragmentValue @relay(mask: false)\n      }\n    }\n  `,\n});\n","import graphql from 'babel-plugin-relay/macro';\nimport React, { FC } from 'react';\nimport { createFragmentContainer } from 'react-relay';\nimport updateTaskFieldMutation from '../../../../mutations/updateTaskFieldMutation';\nimport Switch from '../../../display/field/Switch';\n// eslint-disable-next-line @typescript-eslint/camelcase\nimport { SwitchFieldFragment_data } from './__generated__/SwitchFieldFragment_data.graphql';\n\ninterface SwitchFieldProps {\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  data: SwitchFieldFragment_data;\n  taskId: string;\n}\n\nconst SwitchField: FC<SwitchFieldProps> = props => {\n  const { data } = props;\n  const {\n    value: { enabled },\n    meta: { label, disabled },\n  } = data;\n\n  const handleChange = async (enabled: boolean): Promise<void> => {\n    const {\n      taskId,\n      data: { fieldId, id },\n    } = props;\n\n    await updateTaskFieldMutation({ fieldId, value: { enabled }, taskId }, { id });\n  };\n\n  return <Switch disabled={disabled} checked={enabled} label={label} onChange={handleChange} />;\n};\n\ngraphql`\n  fragment SwitchFieldFragmentMeta on SwitchMetaType {\n    fieldType\n    label\n    disabled\n    required\n  }\n`;\n\ngraphql`\n  fragment SwitchFieldFragmentValue on SwitchValueType {\n    enabled\n  }\n`;\n\nexport default createFragmentContainer<SwitchFieldProps>(SwitchField, {\n  data: graphql`\n    fragment SwitchFieldFragment_data on SwitchFieldType {\n      id\n      fieldId\n      meta {\n        ...SwitchFieldFragmentMeta @relay(mask: false)\n      }\n      value {\n        ...SwitchFieldFragmentValue @relay(mask: false)\n      }\n    }\n  `,\n});\n","import graphql from 'babel-plugin-relay/macro';\nimport React, { FC } from 'react';\nimport { createFragmentContainer } from 'react-relay';\nimport updateTaskFieldMutation from '../../../../mutations/updateTaskFieldMutation';\nimport Text from '../../../display/field/Text';\n// eslint-disable-next-line @typescript-eslint/camelcase\nimport { TextFieldFragment_data } from './__generated__/TextFieldFragment_data.graphql';\n\ninterface TextFieldProps {\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  data: TextFieldFragment_data;\n  taskId: string;\n}\n\nconst TextField: FC<TextFieldProps> = props => {\n  const { data } = props;\n  const {\n    value: { text },\n    meta,\n  } = data;\n  const { max, maxLength, min, minLength, required, inputType, label, helperText } = meta;\n\n  const handleChange = async (text: string): Promise<void> => {\n    const {\n      taskId,\n      data: { fieldId, id },\n    } = props;\n\n    await updateTaskFieldMutation({ fieldId, value: { text }, taskId }, { id });\n  };\n\n  return (\n    <Text\n      value={text}\n      label={label}\n      helperText={helperText}\n      max={max || undefined}\n      min={min || undefined}\n      minLength={minLength || undefined}\n      maxLength={maxLength || undefined}\n      required={required}\n      inputType={inputType || undefined}\n      onChange={handleChange}\n    />\n  );\n};\n\n// tslint:disable-next-line:no-unused-expression\ngraphql`\n  fragment TextFieldFragmentMeta on TextMetaType {\n    fieldType\n    helperText\n    label\n    inputType\n    min\n    max\n    maxLength\n    minLength\n    required\n  }\n`;\n// tslint:disable-next-line:no-unused-expression\ngraphql`\n  fragment TextFieldFragmentValue on TextValueType {\n    text\n  }\n`;\n\nexport default createFragmentContainer<TextFieldProps>(TextField, {\n  data: graphql`\n    fragment TextFieldFragment_data on TextFieldType {\n      id\n      fieldId\n      meta {\n        ...TextFieldFragmentMeta @relay(mask: false)\n      }\n      value {\n        ...TextFieldFragmentValue @relay(mask: false)\n      }\n    }\n  `,\n});\n","// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport graphql from 'babel-plugin-relay/macro';\nimport { useFragment } from 'relay-hooks';\nimport { useTaskFragment, useTaskFragment$ref } from './__generated__/useTaskFragment.graphql';\n\nconst query = graphql`\n  fragment useTaskFragment on TaskType {\n    id\n    fields {\n      __typename\n      ... on ChoiceFieldType {\n        fieldId\n        fieldType\n        order\n      }\n      ... on SwitchFieldType {\n        fieldId\n        fieldType\n        order\n      }\n      ... on SliderFieldType {\n        fieldId\n        fieldType\n        order\n      }\n      ... on NestedFieldType {\n        fieldId\n        fieldType\n        order\n      }\n      ... on TextFieldType {\n        fieldId\n        fieldType\n        order\n      }\n      ...SliderFieldFragment_data\n      ...SwitchFieldFragment_data\n      ...ChoiceFieldFragment_data\n      ...TextFieldFragment_data\n      ...NestedFieldFragment_data\n    }\n  }\n`;\n\nexport default (data: useTaskFragment$ref): Omit<useTaskFragment, ' $refType'> =>\n  useFragment(query, data);\n","import { createStyles, Theme } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    wrapper: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n      },\n      [theme.breakpoints.up('md')]: {\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n      },\n      [theme.breakpoints.up('lg')]: {\n        marginLeft: theme.spacing(4),\n        marginRight: theme.spacing(4),\n      },\n      [theme.breakpoints.up('xl')]: {\n        marginLeft: theme.spacing(5),\n        marginRight: theme.spacing(5),\n      },\n    },\n    row: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-between',\n      marginBottom: theme.spacing(1),\n    },\n    rowField: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      margin: theme.spacing(1),\n      width: '100%',\n      [theme.breakpoints.down('xs')]: {\n        display: 'block',\n      },\n    },\n    doneButton: {\n      zIndex: 9,\n      position: 'fixed',\n      bottom: 20,\n      right: 20,\n    },\n    doneButtonIcon: {\n      color: '#8BC34A',\n      fontSize: 72,\n    },\n  }),\n);\n","import { IconButton, Paper } from '@material-ui/core';\nimport { Done } from '@material-ui/icons';\nimport React, { FC } from 'react';\nimport { Container } from 'react-relay';\nimport { useHistory } from 'react-router';\nimport { FIELD_TYPE_VALUE_MAP, MODULES_IDS } from '../../../../constans';\nimport ChoiceFieldFragment from '../fields/ChoiceFieldFragment';\nimport NestedFieldFragment from '../fields/NestedFieldFragment';\nimport SliderFieldFragment from '../fields/SliderFieldFragment';\nimport SwitchFieldFragment from '../fields/SwitchFieldFragment';\nimport TextFieldFragment from '../fields/TextFieldFragment';\nimport { useTaskFragment$ref } from './__generated__/useTaskFragment.graphql';\nimport useTaskFragment from './useTaskFragment';\nimport useTaskFragmentStyles from './useTaskFragmentStyles';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst FIELD_COMPONENTS_MAP: FIELD_TYPE_VALUE_MAP<Container<TaskFragmentProps & any>> = {\n  CHOICE: ChoiceFieldFragment,\n  SWITCH: SwitchFieldFragment,\n  SLIDER: SliderFieldFragment,\n  TEXT: TextFieldFragment,\n  NESTED: NestedFieldFragment,\n};\n\ninterface TaskFragmentProps {\n  data: useTaskFragment$ref;\n}\n\nconst TaskFragment: FC<TaskFragmentProps> = props => {\n  const { data } = props;\n  const history = useHistory();\n\n  const handleDone = () => {\n    history.push(`/app/${MODULES_IDS.TASK_LIST}`);\n  };\n  const classes = useTaskFragmentStyles();\n  const { fields } = useTaskFragment(data);\n  const orders = new Set(fields.map(field => field.order).sort());\n\n  return (\n    <div className={classes.wrapper}>\n      {[...orders].map(order => {\n        const rowFields = fields.filter(field => field.order === order);\n\n        return (\n          <Paper className={classes.row} key={order}>\n            {rowFields.map(field => {\n              const Component = FIELD_COMPONENTS_MAP[field.fieldType || ''];\n\n              return <Component key={field.fieldId} data={field} taskId={data.id} />;\n            })}\n          </Paper>\n        );\n      })}\n      <IconButton className={classes.doneButton} color=\"primary\" onClick={handleDone}>\n        <Done className={classes.doneButtonIcon} />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default TaskFragment;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport graphql from 'babel-plugin-relay/macro';\nimport { useQuery } from 'relay-hooks';\nimport { useTaskQuery, useTaskQueryVariables } from './__generated__/useTaskQuery.graphql';\n\nconst query = graphql`\n  query useTaskQuery($id: ID, $type: String) {\n    app {\n      task(id: $id, type: $type) {\n        id\n        ...useTaskFragment\n      }\n      taskList {\n        id\n      }\n    }\n  }\n`;\n\nexport default (variables: useTaskQueryVariables) =>\n  useQuery<useTaskQuery>({\n    query,\n    variables,\n  });\n","import React, { FC, useCallback, useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TaskTypeEnum } from '../../../constans';\nimport AppContext from '../../AppContext';\nimport Loader from '../../display/loader/Loader';\nimport TaskFragment from './fragment/TaskFragment';\nimport useTaskQuery from './useTaskQuery';\n\nexport interface TaskProps {\n  taskId?: string;\n  taskType?: TaskTypeEnum;\n}\n\nconst Task: FC<TaskProps> = ownProps => {\n  const params = useParams();\n  const { addTaskParam } = useContext(AppContext);\n  const firstParam = params[0];\n\n  const [taskType, taskId] = firstParam ? firstParam.split('/') : [];\n  const { props, error } = useTaskQuery({\n    id: ownProps.taskId || taskId,\n    type: ownProps.taskType || taskType,\n  });\n\n  const saveParams = useCallback(() => {\n    addTaskParam({\n      taskId,\n      taskType,\n    });\n  }, [addTaskParam, taskId, taskType]);\n\n  useEffect(() => {\n    const ownParamsDefined =\n      typeof ownProps.taskId === 'string' &&\n      typeof ownProps.taskType === 'string' &&\n      ownProps.taskType.length > 0;\n\n    if (!ownParamsDefined) {\n      saveParams();\n    }\n  }, [saveParams, ownProps]);\n\n  if (error) {\n    return <div>{JSON.stringify(error)}</div>;\n  } else if (props && props.app.task) {\n    return <TaskFragment data={props.app.task} />;\n  }\n\n  return <Loader />;\n};\n\nexport default Task;\n","import React, { FC, useCallback, useState } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { MODULES_IDS } from '../constans';\nimport AppContext, { TaskParams } from './AppContext';\nimport ErrorBoundary from './containers/error-boundary/ErrorBoundary';\nimport ResponsiveGrid, { ResponsiveGridItem } from './containers/responsive-grid/ResponsiveGrid';\nimport AppMenu from './display/app-menu/AppMenu';\nimport SettingsQuery from './modules/settings/SettingsQuery';\nimport TaskList from './modules/task-list/TaskList';\nimport TaskTypeList from './modules/task-type-list/TaskTypeList';\nimport Task from './modules/task/Task';\n\nconst Application: FC = () => {\n  const [openedTasksParams, setOpenedTasksParams] = useState<TaskParams[]>([]);\n  const match = useRouteMatch() || {\n    params: '',\n    isExact: false,\n    path: '',\n    url: '',\n  };\n\n  const addTaskParam = useCallback(\n    (taskParams: TaskParams) => {\n      const duplicate =\n        openedTasksParams.findIndex(({ taskId }) => taskId === taskParams.taskId) >= 0;\n\n      if (!duplicate) {\n        setOpenedTasksParams(prev => [...prev, taskParams]);\n      }\n    },\n    [openedTasksParams, setOpenedTasksParams],\n  );\n  const removeTaskParam = useCallback(\n    (taskParams: TaskParams) => {\n      setOpenedTasksParams(prev => prev.filter(params => params.taskId === taskParams.taskId));\n    },\n    [setOpenedTasksParams],\n  );\n  const removeGridItem = (path: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_hash, firstPart, secondPart, thirdPart] = path.split('/');\n\n    if (firstPart === 'task') {\n      const filtered = openedTasksParams.filter(\n        params => !(params.taskId === thirdPart && params.taskType === secondPart),\n      );\n\n      setOpenedTasksParams(filtered);\n    }\n  };\n\n  return (\n    <ErrorBoundary>\n      <AppContext.Provider value={{ value: { openedTasksParams }, addTaskParam, removeTaskParam }}>\n        <AppMenu />\n        <Switch>\n          <Route path={`${match.url}/${MODULES_IDS.TASK_LIST}`} component={TaskList} />\n          <Route path={`${match.url}/${MODULES_IDS.TASK_TYPE_LIST}`} component={TaskTypeList} />\n          <Route path={`${match.url}/${MODULES_IDS.SETTINGS}`} component={SettingsQuery} />\n          <Route path={`${match.url}/${MODULES_IDS.TASK}/*`} component={Task} />\n          <Route\n            path={`${match.url}/dashboard`}\n            component={() => (\n              <ResponsiveGrid>\n                <ResponsiveGridItem\n                  path={`${match.url}/${MODULES_IDS.TASK_LIST}`}\n                  onRemove={removeGridItem}\n                  fixed\n                >\n                  <TaskList />\n                </ResponsiveGridItem>\n                <ResponsiveGridItem\n                  path={`${match.url}/${MODULES_IDS.TASK_TYPE_LIST}`}\n                  onRemove={removeGridItem}\n                  fixed\n                >\n                  <TaskTypeList />\n                </ResponsiveGridItem>\n                <ResponsiveGridItem\n                  path={`${match.url}/${MODULES_IDS.SETTINGS}`}\n                  onRemove={removeGridItem}\n                  fixed\n                >\n                  <SettingsQuery />\n                </ResponsiveGridItem>\n                {openedTasksParams.map(params => (\n                  <ResponsiveGridItem\n                    key={params.taskId || params.taskType}\n                    path={`${match.url}/task/${params.taskType}/${params.taskId}`}\n                    onRemove={removeGridItem}\n                  >\n                    <Task {...params} />\n                  </ResponsiveGridItem>\n                ))}\n              </ResponsiveGrid>\n            )}\n          />\n          <Route path=\"/*\">\n            <Redirect to={`${match.url}/${MODULES_IDS.TASK_LIST}`} />\n          </Route>\n        </Switch>\n      </AppContext.Provider>\n    </ErrorBoundary>\n  );\n};\n\nexport default Application;\n"],"sourceRoot":""}