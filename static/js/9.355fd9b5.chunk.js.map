{"version":3,"sources":["components/login/OAuth.tsx","components/login/useLoginStyles.ts","components/login/Login.tsx"],"names":["API_HOST","process","openWindow","provider","socketId","url","window","open","OAuth","state","disabled","authWindow","checkWindow","check","setInterval","closed","undefined","clearInterval","io","emit","setState","startAuth","props","socket","on","id","user","close","onUserInfo","this","userInfo","name","Grid","container","justify","alignItems","Avatar","alt","src","photo","Button","onClick","toUpperCase","Component","makeStyles","theme","createStyles","button","margin","spacing","root","flexGrow","paper","padding","textAlign","color","palette","text","secondary","providers","Login","classes","useLoginStyles","history","useHistory","useContext","AuthContext","loading","setUserInfo","handleDemo","useCallback","push","handleLogged","className","item","xs","Paper","Typography","variant","gutterBottom","map","key","size"],"mappings":"iTAQMA,EAAWC,uCAEXC,EAAa,SAACC,EAAkBC,GACpC,IAAMC,EAAG,UAAML,EAAN,iBAAuBG,EAAvB,qBAA4CC,GAErD,OAAOE,OAAOC,KAAKF,IAcAG,E,2MACnBC,MAAe,CACbC,UAAU,G,EAGJC,WAA4B,K,EAEpCC,YAAc,WACZ,IAAMC,EAAQC,aAAY,WAAO,IACvBH,EADsB,eACtBA,WAEHA,IAAcA,EAAWI,aAAgCC,IAAtBL,EAAWI,SACjDE,cAAcJ,GAEdK,IAAGlB,GAAUmB,KAAK,OAElB,EAAKC,SAAS,CAAEV,UAAU,OAE3B,M,EAGLW,UAAY,WACV,IAAK,EAAKZ,MAAMC,SAAU,CAAC,IACjBP,EAAa,EAAKmB,MAAlBnB,SACFoB,EAASL,IAAGlB,GAElBuB,EAAOC,GAAG,WAAW,WACnB,EAAKb,WAAaT,EAAWC,EAAUoB,EAAOE,IAE9C,EAAKb,cACL,EAAKQ,SAAS,CACZV,UAAU,IAGZa,EAAOC,GAAGrB,GAAU,SAACuB,GACnB,EAAKf,YAAc,EAAKA,WAAWgB,QACnC,EAAKL,MAAMM,WAAWF,W,wEAMpB,IAAD,EACwBG,KAAKP,MAA5BnB,EADD,EACCA,SAAU2B,EADX,EACWA,SACVpB,EAAamB,KAAKpB,MAAlBC,SAER,OACE,6BACGoB,GAAYA,EAASC,KACpB,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UAC1C,kBAACC,EAAA,EAAD,CAAQC,IAAKP,EAASC,KAAMO,IAAKR,EAASS,SAG5C,kBAACC,EAAA,EAAD,CAAQC,QAASZ,KAAKR,UAAWX,SAAUA,GAA3C,qBACiBP,EAASuC,qB,GAtDDC,a,iBCxBpBC,E,MAAAA,IAAW,SAACC,GAAD,OACxBC,YAAa,CACXC,OAAQ,CACNC,OAAQH,EAAMI,QAAQ,IAExBC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,QAASR,EAAMI,QAAQ,GACvBK,UAAW,SACXC,MAAOV,EAAMW,QAAQC,KAAKC,gBCH1BC,EAAY,CAChB,UA4DaC,UAxDG,WAChB,IAAMC,EAAUC,IACVC,EAAUC,cAFM,EAGqBC,qBAAWC,KAA9CC,EAHc,EAGdA,QAASrC,EAHK,EAGLA,SAAUsC,EAHL,EAGKA,YAErBC,EAAaC,uBAAY,WAC7BP,EAAQQ,KAAK,UACZ,CAACR,IACES,EAAeF,uBACnB,SAACxC,GACCsC,EAAYtC,GACZiC,EAAQQ,KAAK,UAEf,CAACR,EAASK,IAGZ,OACE,yBAAKK,UAAWZ,EAAQX,MACtB,6BACE,yBAAKuB,UAAWZ,EAAQX,MACtB,kBAAClB,EAAA,EAAD,CAAMC,WAAS,EAACgB,QAAS,GACvB,kBAACjB,EAAA,EAAD,CAAM0C,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAOH,UAAWZ,EAAQT,OACxB,kBAACyB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,wBAKJ,kBAAC/C,EAAA,EAAD,CAAM0C,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAOH,UAAWZ,EAAQT,OACvBe,EACG,6BACAR,EAAUqB,KAAI,SAAA7E,GAAQ,OACpB,kBAAC,EAAD,CACEA,SAAUA,EACV8E,IAAK9E,EACLyB,WAAY4C,EACZ1C,SAAUA,SAKtB,kBAACE,EAAA,EAAD,CAAM0C,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAOH,UAAWZ,EAAQT,OACxB,kBAACZ,EAAA,EAAD,CAAQ0C,KAAK,QAAQzC,QAAS4B,EAAYI,UAAWZ,EAAQd,QAA7D","file":"static/js/9.355fd9b5.chunk.js","sourcesContent":["import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport { UserInfo } from './useAuth';\n\n// eslint-disable-next-line no-undef\nconst API_HOST = process.env.REACT_APP_API_HOST || '';\n\nconst openWindow = (provider: string, socketId: string) => {\n  const url = `${API_HOST}/auth/${provider}?socketId=${socketId}`;\n\n  return window.open(url);\n};\n\nexport interface OAuthProps {\n  provider: string;\n  userInfo: UserInfo | null;\n\n  onUserInfo(userInfo: UserInfo): void;\n}\n\ninterface State {\n  disabled: boolean;\n}\n\nexport default class OAuth extends Component<OAuthProps, State> {\n  state: State = {\n    disabled: false,\n  };\n\n  private authWindow: Window | null = null;\n\n  checkWindow = () => {\n    const check = setInterval(() => {\n      const { authWindow } = this;\n\n      if (!authWindow || authWindow.closed || authWindow.closed === undefined) {\n        clearInterval(check);\n\n        io(API_HOST).emit('end');\n\n        this.setState({ disabled: false });\n      }\n    }, 1000);\n  };\n\n  startAuth = () => {\n    if (!this.state.disabled) {\n      const { provider } = this.props;\n      const socket = io(API_HOST);\n\n      socket.on('connect', () => {\n        this.authWindow = openWindow(provider, socket.id);\n\n        this.checkWindow();\n        this.setState({\n          disabled: true,\n        });\n\n        socket.on(provider, (user: UserInfo) => {\n          this.authWindow && this.authWindow.close();\n          this.props.onUserInfo(user);\n        });\n      });\n    }\n  };\n\n  render() {\n    const { provider, userInfo } = this.props;\n    const { disabled } = this.state;\n\n    return (\n      <div>\n        {userInfo && userInfo.name ? (\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Avatar alt={userInfo.name} src={userInfo.photo} />\n          </Grid>\n        ) : (\n          <Button onClick={this.startAuth} disabled={disabled}>\n            {`LOGIN WITH ${provider.toUpperCase()}`}\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n","import { createStyles, Theme } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      margin: theme.spacing(1),\n    },\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n","import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport React, { FC, useCallback, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthContext from '../../contexts/AuthContext';\nimport OAuth from './OAuth';\nimport { UserInfo } from './useAuth';\nimport useLoginStyles from './useLoginStyles';\n\nconst providers = [\n  'google',\n  // 'github',\n];\n\nconst Login: FC = () => {\n  const classes = useLoginStyles();\n  const history = useHistory();\n  const { loading, userInfo, setUserInfo } = useContext(AuthContext);\n\n  const handleDemo = useCallback(() => {\n    history.push('/app');\n  }, [history]);\n  const handleLogged = useCallback(\n    (userInfo: UserInfo) => {\n      setUserInfo(userInfo);\n      history.push('/app');\n    },\n    [history, setUserInfo],\n  );\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <div className={classes.root}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Typography variant=\"h3\" gutterBottom>\n                  WELCOME TO LIFEAPP\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper className={classes.paper}>\n                {loading\n                  ? 'Preparing authorization...'\n                  : providers.map(provider => (\n                      <OAuth\n                        provider={provider}\n                        key={provider}\n                        onUserInfo={handleLogged}\n                        userInfo={userInfo}\n                      />\n                    ))}\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper className={classes.paper}>\n                <Button size=\"large\" onClick={handleDemo} className={classes.button}>\n                  Try Demo\n                </Button>\n              </Paper>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}